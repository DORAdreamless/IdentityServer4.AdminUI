2019-04-11 22:06:06.746 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-11 22:06:07.007 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-11 22:06:07.020 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-11 22:06:07.022 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-11 22:06:07.027 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-11 22:06:07.027 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-11 22:06:07.029 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-11 22:06:07.163 +08:00 [DBG] Starting grant removal
2019-04-11 22:06:12.997 +08:00 [DBG] Login Url: /Account/Login
2019-04-11 22:06:13.002 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-11 22:06:13.008 +08:00 [DBG] Logout Url: /Account/Logout
2019-04-11 22:06:13.010 +08:00 [DBG] ConsentUrl Url: /consent
2019-04-11 22:06:13.011 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-11 22:06:13.012 +08:00 [DBG] Error Url: /home/error
2019-04-11 22:06:13.018 +08:00 [DBG] Error Id Parameter: errorId
2019-04-11 22:06:13.058 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-11 22:06:13.085 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-11 22:06:13.090 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-11 22:06:13.107 +08:00 [DBG] Start discovery request
2019-04-11 22:06:14.901 +08:00 [DBG] Found [] as all scopes in database
2019-04-11 22:06:16.538 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-11 22:06:16.541 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-11 22:06:16.543 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-11 22:06:16.545 +08:00 [DBG] Start discovery request
2019-04-11 22:06:16.553 +08:00 [DBG] Found [] as all scopes in database
2019-04-11 22:06:25.389 +08:00 [DBG] TaskCanceledException. Exiting.
2019-04-11 22:06:25.428 +08:00 [DBG] Stopping grant removal
2019-04-11 22:35:15.248 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-11 22:35:15.535 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-11 22:35:15.541 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-11 22:35:15.544 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-11 22:35:15.545 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-11 22:35:15.548 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-11 22:35:15.565 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-11 22:35:15.717 +08:00 [DBG] Starting grant removal
2019-04-11 22:36:39.120 +08:00 [DBG] CORS request made for path: /api/Configuration/client/create from origin: http://127.0.0.1:8080 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-11 22:36:39.181 +08:00 [DBG] Login Url: /Account/Login
2019-04-11 22:36:39.182 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-11 22:36:39.197 +08:00 [DBG] Logout Url: /Account/Logout
2019-04-11 22:36:39.204 +08:00 [DBG] ConsentUrl Url: /consent
2019-04-11 22:36:39.206 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-11 22:36:39.208 +08:00 [DBG] Error Url: /home/error
2019-04-11 22:36:39.210 +08:00 [DBG] Error Id Parameter: errorId
2019-04-11 22:36:43.782 +08:00 [DBG] CORS request made for path: /api/Configuration/client/create from origin: http://127.0.0.1:8080 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-11 22:38:14.316 +08:00 [DBG] TaskCanceledException. Exiting.
2019-04-11 22:38:14.330 +08:00 [DBG] Stopping grant removal
2019-04-11 22:38:41.145 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-11 22:38:41.407 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-11 22:38:41.411 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-11 22:38:41.413 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-11 22:38:41.414 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-11 22:38:41.416 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-11 22:38:41.419 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-11 22:38:41.562 +08:00 [DBG] Starting grant removal
2019-04-11 23:17:12.555 +08:00 [DBG] TaskCanceledException. Exiting.
2019-04-11 23:17:12.579 +08:00 [DBG] Stopping grant removal
2019-04-11 23:17:22.810 +08:00 [WRN] User c97b3e8e-8320-4753-9838-dfa0706ad0a3 password validation failed: PasswordRequiresNonAlphanumeric;PasswordRequiresLower;PasswordRequiresUpper.
2019-04-11 23:20:47.651 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-11 23:20:47.908 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-11 23:20:47.913 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-11 23:20:47.916 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-11 23:20:47.917 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-11 23:20:47.918 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-11 23:20:47.920 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-11 23:20:48.063 +08:00 [DBG] Starting grant removal
2019-04-12 00:20:49.309 +08:00 [INF] Removing 0 grants
2019-04-12 01:20:49.363 +08:00 [INF] Removing 0 grants
2019-04-12 21:06:55.132 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-12 21:06:55.471 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-12 21:06:55.476 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-12 21:06:55.479 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-12 21:06:55.481 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-12 21:06:55.498 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-12 21:06:55.504 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-12 21:06:55.690 +08:00 [DBG] Starting grant removal
2019-04-12 22:06:56.991 +08:00 [INF] Removing 0 grants
2019-04-12 22:07:51.478 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://127.0.0.1:8080
2019-04-12 22:07:52.136 +08:00 [DBG] Origin http://127.0.0.1:8080 is allowed: false
2019-04-12 22:07:52.145 +08:00 [WRN] CorsPolicyService did not allow origin: http://127.0.0.1:8080
2019-04-12 22:07:52.185 +08:00 [DBG] Login Url: /Account/Login
2019-04-12 22:07:52.187 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-12 22:07:52.193 +08:00 [DBG] Logout Url: /Account/Logout
2019-04-12 22:07:52.194 +08:00 [DBG] ConsentUrl Url: /consent
2019-04-12 22:07:52.196 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-12 22:07:52.197 +08:00 [DBG] Error Url: /home/error
2019-04-12 22:07:52.199 +08:00 [DBG] Error Id Parameter: errorId
2019-04-12 22:07:52.240 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:07:52.262 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:07:52.269 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:07:52.278 +08:00 [DBG] Start discovery request
2019-04-12 22:07:53.213 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:08:27.071 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://127.0.0.1:8080
2019-04-12 22:08:27.087 +08:00 [DBG] Origin http://127.0.0.1:8080 is allowed: false
2019-04-12 22:08:27.096 +08:00 [WRN] CorsPolicyService did not allow origin: http://127.0.0.1:8080
2019-04-12 22:08:27.099 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:08:27.101 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:08:27.102 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:08:27.104 +08:00 [DBG] Start discovery request
2019-04-12 22:08:27.109 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:10:24.390 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-12 22:10:24.639 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-12 22:10:24.658 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-12 22:10:24.663 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-12 22:10:24.665 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-12 22:10:24.668 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-12 22:10:24.688 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-12 22:10:24.860 +08:00 [DBG] Starting grant removal
2019-04-12 22:10:36.086 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-12 22:10:36.363 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-12 22:10:36.366 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-12 22:10:36.370 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-12 22:10:36.376 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-12 22:10:36.385 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-12 22:10:36.392 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-12 22:10:36.527 +08:00 [DBG] Starting grant removal
2019-04-12 22:10:44.214 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:10:44.264 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://127.0.0.1:8080
2019-04-12 22:10:45.810 +08:00 [DBG] Origin http://127.0.0.1:8080 is allowed: false
2019-04-12 22:10:45.820 +08:00 [WRN] CorsPolicyService did not allow origin: http://127.0.0.1:8080
2019-04-12 22:10:45.858 +08:00 [DBG] Login Url: /Account/Login
2019-04-12 22:10:45.861 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-12 22:10:45.865 +08:00 [DBG] Logout Url: /Account/Logout
2019-04-12 22:10:45.867 +08:00 [DBG] ConsentUrl Url: /consent
2019-04-12 22:10:45.869 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-12 22:10:45.870 +08:00 [DBG] Error Url: /home/error
2019-04-12 22:10:45.877 +08:00 [DBG] Error Id Parameter: errorId
2019-04-12 22:10:45.935 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:10:45.960 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:10:45.962 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:10:45.979 +08:00 [DBG] Start discovery request
2019-04-12 22:10:46.965 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:10:47.087 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-12 22:10:47.108 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-12 22:10:47.112 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-12 22:10:47.131 +08:00 [DBG] Processing signout request for anonymous
2019-04-12 22:10:47.139 +08:00 [DBG] Start end session request validation
2019-04-12 22:10:47.163 +08:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"unknown","PostLogOutUri":null,"State":null,"Raw":{"post_logout_redirect_uri":"http://localhost:8080/index.html"},"$type":"EndSessionRequestValidationLog"}
2019-04-12 22:10:47.185 +08:00 [DBG] Success validating end session request from null
2019-04-12 22:14:05.750 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:14:05.753 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:14:05.763 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:14:05.765 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:14:05.767 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:14:05.769 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:14:05.770 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:14:05.771 +08:00 [DBG] Start discovery request
2019-04-12 22:14:05.778 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:14:05.796 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-12 22:14:05.799 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-12 22:14:05.802 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-12 22:14:05.804 +08:00 [DBG] Processing signout request for anonymous
2019-04-12 22:14:05.805 +08:00 [DBG] Start end session request validation
2019-04-12 22:14:05.806 +08:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"unknown","PostLogOutUri":null,"State":null,"Raw":{"post_logout_redirect_uri":"http://localhost:8080/index.html"},"$type":"EndSessionRequestValidationLog"}
2019-04-12 22:14:05.811 +08:00 [DBG] Success validating end session request from null
2019-04-12 22:16:09.734 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:16:09.736 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:16:09.740 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:16:09.742 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:16:09.744 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:16:09.750 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:16:09.751 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:16:09.753 +08:00 [DBG] Start discovery request
2019-04-12 22:16:09.759 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:16:09.776 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:16:09.786 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:16:09.789 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:16:09.797 +08:00 [DBG] Start authorize request
2019-04-12 22:16:09.804 +08:00 [DBG] No user present in authorize request
2019-04-12 22:16:09.817 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:16:10.492 +08:00 [DBG] js found in database: true
2019-04-12 22:16:10.502 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:16:10.516 +08:00 [ERR] Invalid redirect_uri: http://localhost:8080/login/notify
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:5003/callback.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/login/notify","response_type":"id_token token","scope":"openid profile api1","state":"b03e552b1a7e409282eed47972c19886","nonce":"8f8637212cc4467a97a1682e6564e7ee"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:16:10.560 +08:00 [ERR] Request validation failed
2019-04-12 22:16:10.563 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:5003/callback.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/login/notify","response_type":"id_token token","scope":"openid profile api1","state":"b03e552b1a7e409282eed47972c19886","nonce":"8f8637212cc4467a97a1682e6564e7ee"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:16:10.643 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLLVA2JHF7LA:00000004","TimeStamp":"2019-04-12T14:16:10.0000000Z","ProcessId":17944,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-04-12 22:20:28.987 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:20:28.990 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:20:28.998 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:20:29.002 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:20:29.005 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:20:29.007 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:20:29.008 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:20:29.013 +08:00 [DBG] Start discovery request
2019-04-12 22:20:29.020 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:20:29.041 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:20:29.052 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:20:29.055 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:20:29.057 +08:00 [DBG] Start authorize request
2019-04-12 22:20:29.060 +08:00 [DBG] No user present in authorize request
2019-04-12 22:20:29.062 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:20:29.077 +08:00 [DBG] js found in database: true
2019-04-12 22:20:29.078 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:20:29.086 +08:00 [ERR] Invalid grant type for client: implicit
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"","State":"c84971e74cca44a6ad4f90f557aed52a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"c84971e74cca44a6ad4f90f557aed52a","nonce":"9730e11e64c24e07941741bcb4498282"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:20:29.111 +08:00 [ERR] Request validation failed
2019-04-12 22:20:29.112 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"","State":"c84971e74cca44a6ad4f90f557aed52a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"c84971e74cca44a6ad4f90f557aed52a","nonce":"9730e11e64c24e07941741bcb4498282"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:20:29.145 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":"implicit","Error":"unauthorized_client","ErrorDescription":"Invalid grant type for client","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLLVA2JHF7LE:00000002","TimeStamp":"2019-04-12T14:20:29.0000000Z","ProcessId":17944,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-04-12 22:21:26.064 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-12 22:21:26.321 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-12 22:21:26.338 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-12 22:21:26.349 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-12 22:21:26.351 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-12 22:21:26.354 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-12 22:21:26.360 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-12 22:21:26.510 +08:00 [DBG] Starting grant removal
2019-04-12 22:21:30.502 +08:00 [DBG] Login Url: /Account/Login
2019-04-12 22:21:30.506 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-12 22:21:30.510 +08:00 [DBG] Logout Url: /Account/Logout
2019-04-12 22:21:30.513 +08:00 [DBG] ConsentUrl Url: /consent
2019-04-12 22:21:30.520 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-12 22:21:30.523 +08:00 [DBG] Error Url: /home/error
2019-04-12 22:21:30.524 +08:00 [DBG] Error Id Parameter: errorId
2019-04-12 22:21:40.358 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:21:40.373 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:21:41.966 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:21:41.979 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:21:41.992 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:21:42.012 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:21:42.019 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:21:42.031 +08:00 [DBG] Start discovery request
2019-04-12 22:21:43.087 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:21:43.151 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:21:43.165 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:21:43.179 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:21:43.207 +08:00 [DBG] Start authorize request
2019-04-12 22:21:43.228 +08:00 [DBG] No user present in authorize request
2019-04-12 22:21:43.240 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:21:43.632 +08:00 [DBG] js found in database: true
2019-04-12 22:21:43.642 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:21:43.682 +08:00 [ERR] Client requested access token - but client is not configured to receive access tokens via browser
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"","State":"e3e6cc6785db4d859f522680a654b52e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"e3e6cc6785db4d859f522680a654b52e","nonce":"f638e4019b8d4d168f3f2916d8945b2f"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:21:43.728 +08:00 [ERR] Request validation failed
2019-04-12 22:21:43.729 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"","State":"e3e6cc6785db4d859f522680a654b52e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"e3e6cc6785db4d859f522680a654b52e","nonce":"f638e4019b8d4d168f3f2916d8945b2f"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:21:43.792 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":"implicit","Error":"invalid_request","ErrorDescription":"Client not configured to receive access tokens via browser","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLLVA8K4CFUJ:00000003","TimeStamp":"2019-04-12T14:21:43.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-04-12 22:23:20.604 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:20.611 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:20.618 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:20.620 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:20.621 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:20.628 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:20.631 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:20.633 +08:00 [DBG] Start discovery request
2019-04-12 22:23:20.638 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:20.661 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:20.663 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:20.667 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:20.669 +08:00 [DBG] Start authorize request
2019-04-12 22:23:20.669 +08:00 [DBG] No user present in authorize request
2019-04-12 22:23:20.670 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:20.677 +08:00 [DBG] js found in database: true
2019-04-12 22:23:20.678 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:20.774 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:21.120 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:21.150 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:21.166 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:21.188 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:21.192 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"24af2c0f1f6d4b3cace311559db054fb","UiLocales":null,"Nonce":"448a3b204e4742b18bc635dd3008678b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"24af2c0f1f6d4b3cace311559db054fb","nonce":"448a3b204e4742b18bc635dd3008678b"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:21.271 +08:00 [INF] Showing login: User is not authenticated
2019-04-12 22:23:21.327 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:21.337 +08:00 [DBG] js found in database: true
2019-04-12 22:23:21.338 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:21.353 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:21.363 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:21.380 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:21.387 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:21.392 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:21.410 +08:00 [DBG] js found in database: true
2019-04-12 22:23:21.411 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:44.221 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:44.224 +08:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-12 22:23:44.287 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:44.292 +08:00 [DBG] js found in database: true
2019-04-12 22:23:44.293 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:44.302 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:44.306 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:44.312 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:44.320 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:44.322 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:44.723 +08:00 [DBG] Augmenting SignInContext
2019-04-12 22:23:44.726 +08:00 [DBG] Adding idp claim with value: local
2019-04-12 22:23:44.727 +08:00 [DBG] Adding amr claim with value: pwd
2019-04-12 22:23:44.728 +08:00 [DBG] Adding auth_time claim with value: 1555079024
2019-04-12 22:23:44.745 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-12 22:23:44.757 +08:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"admin","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLLVA8K4CFUJ:00000008","TimeStamp":"2019-04-12T14:23:44.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-12 22:23:44.805 +08:00 [DBG] js found in database: true
2019-04-12 22:23:44.810 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:44.874 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-12 22:23:44.880 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-12 22:23:44.884 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-12 22:23:44.905 +08:00 [DBG] Start authorize callback request
2019-04-12 22:23:44.915 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:44.917 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:44.940 +08:00 [DBG] js found in database: true
2019-04-12 22:23:44.944 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:44.972 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:44.990 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:44.998 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:45.006 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:45.021 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:45.030 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"24af2c0f1f6d4b3cace311559db054fb","UiLocales":null,"Nonce":"448a3b204e4742b18bc635dd3008678b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"24af2c0f1f6d4b3cace311559db054fb","nonce":"448a3b204e4742b18bc635dd3008678b"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:45.225 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: false
2019-04-12 22:23:45.243 +08:00 [DBG] user_consent grant with value: js|a23e8a2b-b91b-434a-8270-69230f1246a1 not found in store.
2019-04-12 22:23:45.268 +08:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-12 22:23:45.284 +08:00 [INF] Showing consent: User has not yet consented
2019-04-12 22:23:45.339 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:45.351 +08:00 [DBG] js found in database: true
2019-04-12 22:23:45.354 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:45.374 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:45.404 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:45.411 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:45.438 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:45.451 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:45.477 +08:00 [DBG] js found in database: true
2019-04-12 22:23:45.478 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:45.486 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:45.492 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:45.718 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:47.432 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:47.438 +08:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-12 22:23:47.461 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:47.469 +08:00 [DBG] js found in database: true
2019-04-12 22:23:47.475 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:47.481 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:47.486 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:47.490 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:47.496 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:47.501 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:47.507 +08:00 [INF] {"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RequestedScopes":["openid","profile","api1"],"GrantedScopes":["openid","profile","api1"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000004","TimeStamp":"2019-04-12T14:23:47.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-04-12 22:23:47.560 +08:00 [DBG] js found in database: true
2019-04-12 22:23:47.564 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:47.649 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-12 22:23:47.650 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-12 22:23:47.653 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-12 22:23:47.659 +08:00 [DBG] Start authorize callback request
2019-04-12 22:23:47.663 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:47.675 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:47.684 +08:00 [DBG] js found in database: true
2019-04-12 22:23:47.686 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:47.693 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:47.699 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:47.710 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:47.715 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:47.717 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:47.723 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"24af2c0f1f6d4b3cace311559db054fb","UiLocales":null,"Nonce":"448a3b204e4742b18bc635dd3008678b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"24af2c0f1f6d4b3cace311559db054fb","nonce":"448a3b204e4742b18bc635dd3008678b"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:47.765 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: false
2019-04-12 22:23:47.774 +08:00 [DBG] user_consent grant with value: js|a23e8a2b-b91b-434a-8270-69230f1246a1 not found in store.
2019-04-12 22:23:47.777 +08:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-12 22:23:47.788 +08:00 [INF] User consented to scopes: ["openid","profile","api1"]
2019-04-12 22:23:47.792 +08:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2019-04-12 22:23:47.803 +08:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:47.851 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= not found in database
2019-04-12 22:23:48.043 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:48.073 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:48.074 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:48.219 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:48.227 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:48.261 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****sdJQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****c0Dg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000006","TimeStamp":"2019-04-12T14:23:48.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:48.305 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"24af2c0f1f6d4b3cace311559db054fb","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:48.352 +08:00 [DBG] Augmenting SignInContext
2019-04-12 22:23:48.354 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-12 22:23:50.409 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:50.413 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:50.417 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:50.420 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:50.431 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:50.437 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:50.444 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:50.445 +08:00 [DBG] Start discovery request
2019-04-12 22:23:50.454 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:50.669 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:50.673 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:50.677 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:50.679 +08:00 [DBG] Start authorize request
2019-04-12 22:23:50.680 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:50.687 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:50.696 +08:00 [DBG] js found in database: true
2019-04-12 22:23:50.697 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:50.702 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:50.713 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:50.720 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:50.727 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:50.729 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:50.731 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"2d7ddc0f0dae49308fcec49bdae9b652","UiLocales":null,"Nonce":"71c5748fd5734779a33d1987952b73b3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"2d7ddc0f0dae49308fcec49bdae9b652","nonce":"71c5748fd5734779a33d1987952b73b3"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:50.769 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:50.774 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:50.776 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:50.780 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:50.784 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:50.795 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:50.802 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:50.812 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****TtIw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aEHQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000007","TimeStamp":"2019-04-12T14:23:50.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:50.830 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"2d7ddc0f0dae49308fcec49bdae9b652","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:51.714 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:51.722 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:51.731 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:51.739 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:51.743 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:51.745 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:51.751 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:51.753 +08:00 [DBG] Start discovery request
2019-04-12 22:23:51.759 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:52.037 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:52.041 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:52.049 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:52.052 +08:00 [DBG] Start authorize request
2019-04-12 22:23:52.053 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:52.055 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:52.061 +08:00 [DBG] js found in database: true
2019-04-12 22:23:52.062 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:52.068 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:52.072 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:52.077 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:52.082 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:52.083 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:52.085 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"d5f98e7b211a443c9bf4474f2a4e3497","UiLocales":null,"Nonce":"954e9b227c524fdc8f2085e7f4f971c5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"d5f98e7b211a443c9bf4474f2a4e3497","nonce":"954e9b227c524fdc8f2085e7f4f971c5"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:52.104 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:52.106 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:52.110 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:52.114 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:52.116 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:52.124 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:52.127 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:52.136 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****gtUA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****PoDw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000008","TimeStamp":"2019-04-12T14:23:52.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:52.156 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"d5f98e7b211a443c9bf4474f2a4e3497","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:53.033 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:53.039 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:53.049 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:53.054 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:53.057 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:53.067 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:53.069 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:53.071 +08:00 [DBG] Start discovery request
2019-04-12 22:23:53.077 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:53.299 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:53.304 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:53.307 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:53.316 +08:00 [DBG] Start authorize request
2019-04-12 22:23:53.317 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:53.318 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:53.324 +08:00 [DBG] js found in database: true
2019-04-12 22:23:53.328 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:53.333 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:53.337 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:53.339 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:53.344 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:53.350 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:53.352 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"6706fb459d874d978c597e4987b03eab","UiLocales":null,"Nonce":"5789f3df878d490ea4226155237ef2e0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"6706fb459d874d978c597e4987b03eab","nonce":"5789f3df878d490ea4226155237ef2e0"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:53.373 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:53.378 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:53.381 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:53.382 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:53.383 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:53.391 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:53.394 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:53.400 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****pCKg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****adfA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000009","TimeStamp":"2019-04-12T14:23:53.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:53.416 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"6706fb459d874d978c597e4987b03eab","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:54.215 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:54.219 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:54.224 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:54.226 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:54.228 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:54.235 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:54.244 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:54.254 +08:00 [DBG] Start discovery request
2019-04-12 22:23:54.263 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:54.479 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:54.488 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:54.491 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:54.495 +08:00 [DBG] Start authorize request
2019-04-12 22:23:54.499 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:54.509 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:54.520 +08:00 [DBG] js found in database: true
2019-04-12 22:23:54.520 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:54.529 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:54.542 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:54.545 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:54.551 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:54.555 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:54.557 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"644fa121ee704458bcc295913c5f7842","UiLocales":null,"Nonce":"7e5126fff7c6409397d36013092a928b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"644fa121ee704458bcc295913c5f7842","nonce":"7e5126fff7c6409397d36013092a928b"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:54.583 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:54.585 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:54.586 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:54.588 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:54.589 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:54.616 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:54.618 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:54.641 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****hxJw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****bzDQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000000A","TimeStamp":"2019-04-12T14:23:54.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:54.654 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"644fa121ee704458bcc295913c5f7842","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:55.638 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:55.647 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:55.652 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:55.654 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:55.661 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:55.666 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:55.671 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:55.680 +08:00 [DBG] Start discovery request
2019-04-12 22:23:55.688 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:55.915 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:55.918 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:55.926 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:55.930 +08:00 [DBG] Start authorize request
2019-04-12 22:23:55.931 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:55.935 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:55.940 +08:00 [DBG] js found in database: true
2019-04-12 22:23:55.940 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:55.944 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:55.948 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:55.952 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:55.962 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:55.963 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:55.966 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"4e897defe4524d29a510016eab7ce64e","UiLocales":null,"Nonce":"57a61e3a9cd047fa9d19743f7c85f41a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"4e897defe4524d29a510016eab7ce64e","nonce":"57a61e3a9cd047fa9d19743f7c85f41a"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:55.996 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:56.002 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:56.008 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:56.009 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:56.010 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:56.032 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:56.035 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:56.047 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****CS8w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5JqA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000000B","TimeStamp":"2019-04-12T14:23:56.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:56.056 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"4e897defe4524d29a510016eab7ce64e","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:56.883 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:56.892 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:56.896 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:56.897 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:56.898 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:56.899 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:56.901 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:56.907 +08:00 [DBG] Start discovery request
2019-04-12 22:23:56.919 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:57.154 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:57.158 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:57.165 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:57.166 +08:00 [DBG] Start authorize request
2019-04-12 22:23:57.170 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:57.172 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:57.183 +08:00 [DBG] js found in database: true
2019-04-12 22:23:57.186 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:57.199 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:57.211 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:57.213 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:57.218 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:57.224 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:57.228 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"c30d63153ac248a6a3e833ddb04b1a19","UiLocales":null,"Nonce":"fb2f4a05052d4f7ea78b31c97073a485","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"c30d63153ac248a6a3e833ddb04b1a19","nonce":"fb2f4a05052d4f7ea78b31c97073a485"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:57.262 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:57.264 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:57.269 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:57.270 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:57.271 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:57.292 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:57.298 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:57.310 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****P3Vw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9SRA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000000C","TimeStamp":"2019-04-12T14:23:57.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:57.347 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"c30d63153ac248a6a3e833ddb04b1a19","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:58.132 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:58.138 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:58.150 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:58.154 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:58.161 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:58.179 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:58.186 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:58.195 +08:00 [DBG] Start discovery request
2019-04-12 22:23:58.199 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:58.400 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:58.413 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:58.417 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:58.419 +08:00 [DBG] Start authorize request
2019-04-12 22:23:58.420 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:58.425 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:58.433 +08:00 [DBG] js found in database: true
2019-04-12 22:23:58.436 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:58.447 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:58.454 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:58.457 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:58.468 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:58.488 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:58.508 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"53d3049fee50406980f453598277212b","UiLocales":null,"Nonce":"11d5093710bf453d85642c9726f0c698","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"53d3049fee50406980f453598277212b","nonce":"11d5093710bf453d85642c9726f0c698"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:58.542 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:58.546 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:58.549 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:58.550 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:58.551 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:58.568 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:58.570 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:58.592 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****sJzA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****4Sbg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000000D","TimeStamp":"2019-04-12T14:23:58.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:58.615 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"53d3049fee50406980f453598277212b","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:59.440 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:59.443 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:59.448 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:59.450 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:59.451 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:59.456 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:59.471 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:59.477 +08:00 [DBG] Start discovery request
2019-04-12 22:23:59.485 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:59.730 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:59.733 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:59.739 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:59.743 +08:00 [DBG] Start authorize request
2019-04-12 22:23:59.744 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:59.746 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:59.759 +08:00 [DBG] js found in database: true
2019-04-12 22:23:59.763 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:59.788 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:59.809 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:59.816 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:59.824 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:59.827 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:59.837 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"df2b22c5b68c47c5ab7b3e4758410f5b","UiLocales":null,"Nonce":"9bcbf1ad33ad4882b9b01b41cb8b1180","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"df2b22c5b68c47c5ab7b3e4758410f5b","nonce":"9bcbf1ad33ad4882b9b01b41cb8b1180"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:59.869 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:59.871 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:59.880 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:59.881 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:59.882 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:59.897 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:59.899 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:59.914 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****lzhg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Cpdw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000000E","TimeStamp":"2019-04-12T14:23:59.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:59.936 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"df2b22c5b68c47c5ab7b3e4758410f5b","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:00.790 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:00.795 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:00.805 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:00.816 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:00.820 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:00.825 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:00.835 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:00.846 +08:00 [DBG] Start discovery request
2019-04-12 22:24:00.860 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:01.084 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:01.087 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:01.092 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:01.097 +08:00 [DBG] Start authorize request
2019-04-12 22:24:01.100 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:01.102 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:01.111 +08:00 [DBG] js found in database: true
2019-04-12 22:24:01.112 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:01.116 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:01.123 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:01.134 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:01.140 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:01.143 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:01.146 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"65c385f8103f40b9bb3ab7b1b2f45e36","UiLocales":null,"Nonce":"27183f6f40db4d76aa9b25e8555a27d8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"65c385f8103f40b9bb3ab7b1b2f45e36","nonce":"27183f6f40db4d76aa9b25e8555a27d8"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:01.174 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:01.177 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:01.182 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:01.185 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:01.191 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:01.203 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:01.205 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:01.219 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****4dkg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qLIw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000000F","TimeStamp":"2019-04-12T14:24:01.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:01.233 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"65c385f8103f40b9bb3ab7b1b2f45e36","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:02.086 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:02.103 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:02.116 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:02.119 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:02.120 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:02.129 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:02.131 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:02.132 +08:00 [DBG] Start discovery request
2019-04-12 22:24:02.138 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:02.384 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:02.393 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:02.394 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:02.396 +08:00 [DBG] Start authorize request
2019-04-12 22:24:02.397 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:02.400 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:02.411 +08:00 [DBG] js found in database: true
2019-04-12 22:24:02.412 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:02.416 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:02.422 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:02.434 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:02.446 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:02.447 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:02.450 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"61da377b59bd4c09a7f2cf4c7e0d6482","UiLocales":null,"Nonce":"3087d43bc3b74a82813048d080de5ca4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"61da377b59bd4c09a7f2cf4c7e0d6482","nonce":"3087d43bc3b74a82813048d080de5ca4"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:02.480 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:02.483 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:02.487 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:02.488 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:02.491 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:02.505 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:02.507 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:02.518 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****sDqQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2ZgQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000010","TimeStamp":"2019-04-12T14:24:02.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:02.539 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"61da377b59bd4c09a7f2cf4c7e0d6482","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:03.347 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:03.355 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:03.366 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:03.368 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:03.370 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:03.381 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:03.385 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:03.396 +08:00 [DBG] Start discovery request
2019-04-12 22:24:03.402 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:03.605 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:03.609 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:03.611 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:03.613 +08:00 [DBG] Start authorize request
2019-04-12 22:24:03.614 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:03.616 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:03.625 +08:00 [DBG] js found in database: true
2019-04-12 22:24:03.626 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:03.630 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:03.634 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:03.638 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:03.644 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:03.645 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:03.646 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"b2ebb42f609c46e9a5fb2dd7448546e5","UiLocales":null,"Nonce":"3621d1e2f5354ca49449deb58c0d3c7c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"b2ebb42f609c46e9a5fb2dd7448546e5","nonce":"3621d1e2f5354ca49449deb58c0d3c7c"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:03.672 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:03.673 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:03.679 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:03.681 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:03.683 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:03.704 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:03.709 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:03.723 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****7-IQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5M5Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000011","TimeStamp":"2019-04-12T14:24:03.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:03.739 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"b2ebb42f609c46e9a5fb2dd7448546e5","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:04.563 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:04.569 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:04.580 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:04.584 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:04.586 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:04.587 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:04.594 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:04.600 +08:00 [DBG] Start discovery request
2019-04-12 22:24:04.607 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:04.821 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:04.831 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:04.833 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:04.837 +08:00 [DBG] Start authorize request
2019-04-12 22:24:04.839 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:04.845 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:04.853 +08:00 [DBG] js found in database: true
2019-04-12 22:24:04.853 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:04.857 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:04.867 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:04.870 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:04.879 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:04.880 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:04.883 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"5f93e52259864b218de8b1528ebd1198","UiLocales":null,"Nonce":"c854d1a52daf44e786f692bfb5a237a2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"5f93e52259864b218de8b1528ebd1198","nonce":"c854d1a52daf44e786f692bfb5a237a2"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:04.903 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:04.908 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:04.912 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:04.913 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:04.914 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:04.924 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:04.926 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:04.936 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****sOfQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****k71g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000012","TimeStamp":"2019-04-12T14:24:04.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:04.947 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"5f93e52259864b218de8b1528ebd1198","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:05.803 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:05.808 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:05.822 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:05.827 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:05.830 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:05.836 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:05.838 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:05.851 +08:00 [DBG] Start discovery request
2019-04-12 22:24:05.858 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:06.118 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:06.123 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:06.131 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:06.134 +08:00 [DBG] Start authorize request
2019-04-12 22:24:06.135 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:06.143 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:06.154 +08:00 [DBG] js found in database: true
2019-04-12 22:24:06.156 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:06.165 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:06.172 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:06.181 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:06.200 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:06.203 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:06.206 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"fcd18cdf13214f97af02ba5f1d296513","UiLocales":null,"Nonce":"4e6c1bbc7bba4268968415119462de87","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"fcd18cdf13214f97af02ba5f1d296513","nonce":"4e6c1bbc7bba4268968415119462de87"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:06.232 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:06.241 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:06.245 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:06.249 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:06.253 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:06.264 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:06.268 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:06.277 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3KYA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****0vNQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000013","TimeStamp":"2019-04-12T14:24:06.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:06.296 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"fcd18cdf13214f97af02ba5f1d296513","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:07.079 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:07.084 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:07.087 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:07.088 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:07.094 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:07.099 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:07.100 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:07.104 +08:00 [DBG] Start discovery request
2019-04-12 22:24:07.111 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:07.366 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:07.369 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:07.372 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:07.378 +08:00 [DBG] Start authorize request
2019-04-12 22:24:07.380 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:07.382 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:07.387 +08:00 [DBG] js found in database: true
2019-04-12 22:24:07.389 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:07.395 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:07.399 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:07.401 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:07.408 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:07.411 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:07.414 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"a4c951f53e4f464b990b9d80cabb2265","UiLocales":null,"Nonce":"8bd4074bb28142b5b09fbc83a63613f6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"a4c951f53e4f464b990b9d80cabb2265","nonce":"8bd4074bb28142b5b09fbc83a63613f6"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:07.436 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:07.442 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:07.444 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:07.445 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:07.446 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:07.464 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:07.466 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:07.477 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****XeVg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9qcA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000014","TimeStamp":"2019-04-12T14:24:07.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:07.498 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"a4c951f53e4f464b990b9d80cabb2265","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:08.328 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:08.334 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:08.350 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:08.353 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:08.364 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:08.369 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:08.374 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:08.383 +08:00 [DBG] Start discovery request
2019-04-12 22:24:08.395 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:08.620 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:08.624 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:08.632 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:08.638 +08:00 [DBG] Start authorize request
2019-04-12 22:24:08.641 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:08.643 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:08.650 +08:00 [DBG] js found in database: true
2019-04-12 22:24:08.651 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:08.664 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:08.668 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:08.670 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:08.678 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:08.681 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:08.687 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"567bdd42464145f79df2c4432af03c10","UiLocales":null,"Nonce":"ef0e29257d1d49ccbc47a426e8e1e16d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"567bdd42464145f79df2c4432af03c10","nonce":"ef0e29257d1d49ccbc47a426e8e1e16d"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:08.703 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:08.705 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:08.710 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:08.713 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:08.714 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:08.730 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:08.734 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:08.744 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Ey8Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****nxag","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000015","TimeStamp":"2019-04-12T14:24:08.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:08.764 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"567bdd42464145f79df2c4432af03c10","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:09.583 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:09.588 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:09.604 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:09.606 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:09.611 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:09.617 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:09.620 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:09.628 +08:00 [DBG] Start discovery request
2019-04-12 22:24:09.635 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:09.887 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:09.891 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:09.895 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:09.898 +08:00 [DBG] Start authorize request
2019-04-12 22:24:09.900 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:09.909 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:09.915 +08:00 [DBG] js found in database: true
2019-04-12 22:24:09.915 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:09.918 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:09.927 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:09.931 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:09.935 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:09.941 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:09.944 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"46085f5fc6cc4296876ff55bf0581e57","UiLocales":null,"Nonce":"36747ec37fbc4325b7b1e6969891f333","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"46085f5fc6cc4296876ff55bf0581e57","nonce":"36747ec37fbc4325b7b1e6969891f333"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:09.964 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:09.966 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:09.971 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:09.973 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:09.974 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:09.985 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:09.988 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:09.995 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ngUA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****rDhA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000016","TimeStamp":"2019-04-12T14:24:09.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:10.017 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"46085f5fc6cc4296876ff55bf0581e57","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:10.822 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:10.829 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:10.833 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:10.842 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:10.852 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:10.858 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:10.869 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:10.876 +08:00 [DBG] Start discovery request
2019-04-12 22:24:10.882 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:11.089 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:11.095 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:11.102 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:11.105 +08:00 [DBG] Start authorize request
2019-04-12 22:24:11.107 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:11.113 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:11.123 +08:00 [DBG] js found in database: true
2019-04-12 22:24:11.124 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:11.133 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:11.141 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:11.149 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:11.155 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:11.157 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:11.164 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"40492a09eeaf4277bb33862256da2ad5","UiLocales":null,"Nonce":"8e7ae6bf266744ca8efd73557af04d27","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"40492a09eeaf4277bb33862256da2ad5","nonce":"8e7ae6bf266744ca8efd73557af04d27"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:11.196 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:11.197 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:11.198 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:11.199 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:11.199 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:11.214 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:11.217 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:11.224 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3wMQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kkyQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000017","TimeStamp":"2019-04-12T14:24:11.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:11.229 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"40492a09eeaf4277bb33862256da2ad5","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:12.064 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:12.067 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:12.071 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:12.072 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:12.074 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:12.075 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:12.080 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:12.082 +08:00 [DBG] Start discovery request
2019-04-12 22:24:12.091 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:12.370 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:12.375 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:12.376 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:12.377 +08:00 [DBG] Start authorize request
2019-04-12 22:24:12.377 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:12.378 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:12.383 +08:00 [DBG] js found in database: true
2019-04-12 22:24:12.386 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:12.388 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:12.392 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:12.396 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:12.399 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:12.399 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:12.400 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"d72a0d01edc744aba7ef414524f176ad","UiLocales":null,"Nonce":"6d1f8932d68c4212a92117b42cbed2d2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"d72a0d01edc744aba7ef414524f176ad","nonce":"6d1f8932d68c4212a92117b42cbed2d2"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:12.416 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:12.416 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:12.421 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:12.422 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:12.423 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:12.430 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:12.433 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:12.439 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****KlbA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kofA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000018","TimeStamp":"2019-04-12T14:24:12.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:12.445 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"d72a0d01edc744aba7ef414524f176ad","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:13.264 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:13.268 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:13.271 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:13.272 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:13.273 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:13.274 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:13.275 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:13.276 +08:00 [DBG] Start discovery request
2019-04-12 22:24:13.292 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:13.528 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:13.532 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:13.533 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:13.534 +08:00 [DBG] Start authorize request
2019-04-12 22:24:13.535 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:13.535 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:13.544 +08:00 [DBG] js found in database: true
2019-04-12 22:24:13.544 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:13.548 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:13.554 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:13.557 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:13.562 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:13.565 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:13.565 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"23bf99db0b5446f497dd9340ee3b63ae","UiLocales":null,"Nonce":"656b5e89d8524432920c7764041d7d56","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"23bf99db0b5446f497dd9340ee3b63ae","nonce":"656b5e89d8524432920c7764041d7d56"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:13.573 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:13.577 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:13.578 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:13.579 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:13.580 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:13.589 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:13.591 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:13.599 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****B5SA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****jzyw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000019","TimeStamp":"2019-04-12T14:24:13.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:13.603 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"23bf99db0b5446f497dd9340ee3b63ae","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:14.410 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:14.412 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:14.414 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:14.414 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:14.415 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:14.416 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:14.417 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:14.417 +08:00 [DBG] Start discovery request
2019-04-12 22:24:14.421 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:14.683 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:14.686 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:14.687 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:14.688 +08:00 [DBG] Start authorize request
2019-04-12 22:24:14.689 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:14.690 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:14.697 +08:00 [DBG] js found in database: true
2019-04-12 22:24:14.698 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:14.701 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:14.706 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:14.711 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:14.715 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:14.717 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:14.720 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"dfa174da661c4be0a2af339dc59aae93","UiLocales":null,"Nonce":"8708434524cc4fbe988407f42e83dc0b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"dfa174da661c4be0a2af339dc59aae93","nonce":"8708434524cc4fbe988407f42e83dc0b"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:14.729 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:14.731 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:14.732 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:14.732 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:14.733 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:14.745 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:14.745 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:14.754 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Axkg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****mKdw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000001A","TimeStamp":"2019-04-12T14:24:14.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:14.758 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"dfa174da661c4be0a2af339dc59aae93","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:15.565 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:15.569 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:15.571 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:15.572 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:15.573 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:15.574 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:15.575 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:15.581 +08:00 [DBG] Start discovery request
2019-04-12 22:24:15.588 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:15.833 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:15.835 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:15.836 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:15.836 +08:00 [DBG] Start authorize request
2019-04-12 22:24:15.837 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:15.837 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:15.842 +08:00 [DBG] js found in database: true
2019-04-12 22:24:15.843 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:15.848 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:15.852 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:15.854 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:15.857 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:15.858 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:15.859 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"17402f5d6b684d60bda716347936faf6","UiLocales":null,"Nonce":"468d227b33a04f46a934894157aef781","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"17402f5d6b684d60bda716347936faf6","nonce":"468d227b33a04f46a934894157aef781"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:15.866 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:15.869 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:15.869 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:15.870 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:15.870 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:15.877 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:15.881 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:15.886 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3kcQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****yXfA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000001B","TimeStamp":"2019-04-12T14:24:15.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:15.895 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"17402f5d6b684d60bda716347936faf6","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:16.712 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:16.716 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:16.720 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:16.722 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:16.724 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:16.728 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:16.729 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:16.730 +08:00 [DBG] Start discovery request
2019-04-12 22:24:16.737 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:17.011 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:17.014 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:17.015 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:17.016 +08:00 [DBG] Start authorize request
2019-04-12 22:24:17.017 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:17.017 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:17.022 +08:00 [DBG] js found in database: true
2019-04-12 22:24:17.025 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:17.027 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:17.031 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:17.033 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:17.038 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:17.038 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:17.039 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"2b5b7406c05f485ebb7a611768ccaf3a","UiLocales":null,"Nonce":"50e9c7133d1b4610b375163b088a8c47","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"2b5b7406c05f485ebb7a611768ccaf3a","nonce":"50e9c7133d1b4610b375163b088a8c47"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:17.046 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:17.047 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:17.047 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:17.048 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:17.048 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:17.055 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:17.058 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:17.064 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****os_A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****HFMw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000001C","TimeStamp":"2019-04-12T14:24:17.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:17.070 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"2b5b7406c05f485ebb7a611768ccaf3a","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:17.877 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:17.880 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:17.883 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:17.884 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:17.885 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:17.887 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:17.894 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:17.895 +08:00 [DBG] Start discovery request
2019-04-12 22:24:17.901 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:18.147 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:18.149 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:18.149 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:18.149 +08:00 [DBG] Start authorize request
2019-04-12 22:24:18.150 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:18.150 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:18.155 +08:00 [DBG] js found in database: true
2019-04-12 22:24:18.156 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:18.158 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:18.163 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:18.165 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:18.168 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:18.170 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:18.170 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"1baea013a48b488395663b48b8f9c0a0","UiLocales":null,"Nonce":"1d23c2e719444e11a73869160a697d87","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"1baea013a48b488395663b48b8f9c0a0","nonce":"1d23c2e719444e11a73869160a697d87"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:18.187 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:18.188 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:18.189 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:18.189 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:18.190 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:18.199 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:18.200 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:18.205 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_lVg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_Nfw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000001D","TimeStamp":"2019-04-12T14:24:18.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:18.212 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"1baea013a48b488395663b48b8f9c0a0","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:19.012 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:19.017 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:19.020 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:19.021 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:19.022 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:19.023 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:19.024 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:19.031 +08:00 [DBG] Start discovery request
2019-04-12 22:24:19.036 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:19.294 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:19.299 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:19.300 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:19.301 +08:00 [DBG] Start authorize request
2019-04-12 22:24:19.301 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:19.301 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:19.306 +08:00 [DBG] js found in database: true
2019-04-12 22:24:19.307 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:19.314 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:19.318 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:19.320 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:19.323 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:19.324 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:19.325 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"cc20f95a997a4623b8a8300cf586877f","UiLocales":null,"Nonce":"94322fc2baa84a6c9a17c397e5a52581","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"cc20f95a997a4623b8a8300cf586877f","nonce":"94322fc2baa84a6c9a17c397e5a52581"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:19.335 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:19.335 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:19.336 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:19.336 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:19.336 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:19.343 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:19.344 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:19.352 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****bCiA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****551A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000001E","TimeStamp":"2019-04-12T14:24:19.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:19.361 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"cc20f95a997a4623b8a8300cf586877f","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:20.171 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:20.178 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:20.181 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:20.182 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:20.184 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:20.185 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:20.186 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:20.191 +08:00 [DBG] Start discovery request
2019-04-12 22:24:20.195 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:20.430 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:20.431 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:20.432 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:20.434 +08:00 [DBG] Start authorize request
2019-04-12 22:24:20.435 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:20.436 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:20.442 +08:00 [DBG] js found in database: true
2019-04-12 22:24:20.444 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:20.446 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:20.449 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:20.451 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:20.454 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:20.457 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:20.458 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"8b5797314e984386acf3cb0399dd76fe","UiLocales":null,"Nonce":"ecc73107e441495991f75010899453ae","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"8b5797314e984386acf3cb0399dd76fe","nonce":"ecc73107e441495991f75010899453ae"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:20.464 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:20.470 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:20.471 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:20.472 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:20.472 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:20.479 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:20.480 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:20.485 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****mC3A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****TBEQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000001F","TimeStamp":"2019-04-12T14:24:20.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:20.493 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"8b5797314e984386acf3cb0399dd76fe","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:21.294 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:21.297 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:21.300 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:21.302 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:21.303 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:21.304 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:21.305 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:21.311 +08:00 [DBG] Start discovery request
2019-04-12 22:24:21.317 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:21.550 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:21.553 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:21.554 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:21.555 +08:00 [DBG] Start authorize request
2019-04-12 22:24:21.555 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:21.556 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:21.563 +08:00 [DBG] js found in database: true
2019-04-12 22:24:21.564 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:21.567 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:21.573 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:21.580 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:21.586 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:21.587 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:21.588 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"cd13c6f0fa5348ef8fc3a3b5f2658522","UiLocales":null,"Nonce":"6f6c782d22b043cabee81421b595312c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"cd13c6f0fa5348ef8fc3a3b5f2658522","nonce":"6f6c782d22b043cabee81421b595312c"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:21.603 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:21.603 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:21.604 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:21.604 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:21.606 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:21.619 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:21.621 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:21.626 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****m02A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_a-w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000020","TimeStamp":"2019-04-12T14:24:21.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:21.636 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"cd13c6f0fa5348ef8fc3a3b5f2658522","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:22.437 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:22.441 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:22.444 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:22.445 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:22.447 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:22.448 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:22.449 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:22.454 +08:00 [DBG] Start discovery request
2019-04-12 22:24:22.460 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:22.699 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:22.701 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:22.702 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:22.703 +08:00 [DBG] Start authorize request
2019-04-12 22:24:22.703 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:22.704 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:22.709 +08:00 [DBG] js found in database: true
2019-04-12 22:24:22.709 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:22.713 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:22.717 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:22.719 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:22.722 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:22.723 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:22.723 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"545765eef7a544cdaf56b19b086c749c","UiLocales":null,"Nonce":"304f1795eb2d41408c373ba076f9ca8d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"545765eef7a544cdaf56b19b086c749c","nonce":"304f1795eb2d41408c373ba076f9ca8d"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:22.730 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:22.730 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:22.734 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:22.735 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:22.736 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:22.743 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:22.744 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:22.749 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****otGQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****wrsg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000021","TimeStamp":"2019-04-12T14:24:22.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:22.756 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"545765eef7a544cdaf56b19b086c749c","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:23.588 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:23.595 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:23.599 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:23.601 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:23.602 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:23.608 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:23.610 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:23.611 +08:00 [DBG] Start discovery request
2019-04-12 22:24:23.619 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:23.853 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:23.857 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:23.859 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:23.860 +08:00 [DBG] Start authorize request
2019-04-12 22:24:23.861 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:23.861 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:23.866 +08:00 [DBG] js found in database: true
2019-04-12 22:24:23.868 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:23.870 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:23.873 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:23.876 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:23.884 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:23.885 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:23.886 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"f9162f8137704852b5991711485af808","UiLocales":null,"Nonce":"d0aff72313a14c3b97de972e8b3ff6e5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"f9162f8137704852b5991711485af808","nonce":"d0aff72313a14c3b97de972e8b3ff6e5"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:23.904 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:23.905 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:23.906 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:23.907 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:23.908 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:23.922 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:23.927 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:23.936 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****jcsw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****yWRw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000022","TimeStamp":"2019-04-12T14:24:23.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:23.942 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"f9162f8137704852b5991711485af808","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:24.744 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:24.746 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:24.749 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:24.750 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:24.751 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:24.752 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:24.753 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:24.753 +08:00 [DBG] Start discovery request
2019-04-12 22:24:24.757 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:24.993 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:24.995 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:24.996 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:24.996 +08:00 [DBG] Start authorize request
2019-04-12 22:24:24.997 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:24.997 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:25.003 +08:00 [DBG] js found in database: true
2019-04-12 22:24:25.003 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:25.005 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:25.010 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:25.012 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:25.016 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:25.017 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:25.018 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"71bc482309d645e69929da5bedc57956","UiLocales":null,"Nonce":"6b3a1f026e984f6aa99c64268529ac47","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"71bc482309d645e69929da5bedc57956","nonce":"6b3a1f026e984f6aa99c64268529ac47"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:25.025 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:25.025 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:25.026 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:25.030 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:25.030 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:25.038 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:25.045 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:25.051 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ix5w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LvFQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000023","TimeStamp":"2019-04-12T14:24:25.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:25.057 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"71bc482309d645e69929da5bedc57956","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:27:10.517 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:27:10.521 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:27:10.525 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:27:10.527 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:27:10.529 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:27:10.537 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:27:10.539 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:27:10.540 +08:00 [DBG] Start discovery request
2019-04-12 22:27:10.546 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:27:10.777 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:27:10.778 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:27:10.780 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:27:10.781 +08:00 [DBG] Start authorize request
2019-04-12 22:27:10.782 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:27:10.783 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:27:10.792 +08:00 [DBG] js found in database: true
2019-04-12 22:27:10.793 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:27:10.797 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:27:10.804 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:27:10.808 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:27:10.817 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:27:10.818 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:27:10.819 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"c4e702956e1d43908a87b9f3a5873990","UiLocales":null,"Nonce":"e329632026e44191a71a9c0537ed2b69","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"c4e702956e1d43908a87b9f3a5873990","nonce":"e329632026e44191a71a9c0537ed2b69"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:27:10.833 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:27:10.834 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:27:10.835 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:27:10.835 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:27:10.836 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:27:10.845 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:27:10.847 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:27:10.853 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****OwTQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****KL2Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUQ:00000001","TimeStamp":"2019-04-12T14:27:10.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:27:10.859 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"c4e702956e1d43908a87b9f3a5873990","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:27:45.669 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:27:45.676 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:27:45.680 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:27:45.681 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:27:45.683 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:27:45.688 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:27:45.690 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:27:45.691 +08:00 [DBG] Start discovery request
2019-04-12 22:27:45.696 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:27:45.742 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:27:45.745 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-12 22:27:45.749 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:27:45.750 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:27:45.751 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 22:27:45.753 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 22:27:45.755 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 22:27:45.765 +08:00 [DBG] Start key discovery request
2019-04-12 22:27:45.856 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:27:45.863 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:27:45.864 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-12 22:27:45.866 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:27:45.867 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:27:45.867 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-12 22:27:45.874 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-12 22:27:45.876 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-12 22:27:45.894 +08:00 [DBG] Start userinfo request
2019-04-12 22:27:45.900 +08:00 [DBG] Bearer token found in header
2019-04-12 22:27:45.945 +08:00 [DBG] js found in database: true
2019-04-12 22:27:45.946 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:27:45.960 +08:00 [DBG] js found in database: true
2019-04-12 22:27:45.961 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:27:45.971 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-12 22:27:45.977 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555079230,"exp":1555082830,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555079024,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-12 22:27:46.011 +08:00 [DBG] Creating userinfo response
2019-04-12 22:27:46.018 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 22:27:46.026 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 22:27:46.033 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:27:46.036 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-12 22:27:46.037 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 22:27:46.041 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:27:46.055 +08:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-12 22:27:46.056 +08:00 [DBG] End userinfo request
2019-04-12 22:27:46.097 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:27:46.102 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:27:46.104 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:27:46.107 +08:00 [DBG] Rendering check session result
2019-04-12 22:27:47.748 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:27:47.754 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:27:47.758 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:27:47.759 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:27:47.760 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:27:47.761 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:27:47.770 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:27:47.771 +08:00 [DBG] Start discovery request
2019-04-12 22:27:47.777 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:27:48.010 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:27:48.014 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:27:48.015 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:27:48.017 +08:00 [DBG] Rendering check session result
2019-04-12 22:28:09.599 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:28:09.603 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:28:09.605 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:28:09.606 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:28:09.607 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:28:09.608 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:28:09.608 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:28:09.610 +08:00 [DBG] Start discovery request
2019-04-12 22:28:09.616 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:28:09.651 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:28:09.655 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:28:09.656 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:28:09.657 +08:00 [DBG] Rendering check session result
2019-04-12 22:30:38.799 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:30:38.805 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:30:38.808 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:30:38.810 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:30:38.811 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:30:38.816 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:30:38.817 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:30:38.818 +08:00 [DBG] Start discovery request
2019-04-12 22:30:38.823 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:30:39.068 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:30:39.071 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:30:39.072 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:30:39.073 +08:00 [DBG] Rendering check session result
2019-04-12 22:37:20.701 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:37:20.707 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:37:20.725 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:37:20.728 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:37:20.731 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:37:20.732 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:37:20.733 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:37:20.735 +08:00 [DBG] Start discovery request
2019-04-12 22:37:20.744 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:37:21.042 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:37:21.045 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:37:21.046 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:37:21.046 +08:00 [DBG] Rendering check session result
2019-04-12 22:39:07.688 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:39:07.691 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:39:07.693 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:39:07.694 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:39:07.695 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:39:07.696 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:39:07.697 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:39:07.698 +08:00 [DBG] Start discovery request
2019-04-12 22:39:07.703 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:39:07.958 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:39:07.960 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:39:07.960 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:39:07.961 +08:00 [DBG] Rendering check session result
2019-04-12 22:56:42.620 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:56:42.625 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:56:42.636 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:56:42.638 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:56:42.640 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:56:42.642 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:56:42.644 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:56:42.648 +08:00 [DBG] Start discovery request
2019-04-12 22:56:42.653 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:56:42.905 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:56:42.906 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:56:42.907 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:56:42.908 +08:00 [DBG] Rendering check session result
2019-04-12 22:56:48.558 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:56:48.567 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:56:48.571 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:56:48.573 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:56:48.574 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:56:48.580 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:56:48.581 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:56:48.582 +08:00 [DBG] Start discovery request
2019-04-12 22:56:48.588 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:56:48.825 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:56:48.829 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:56:48.830 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:56:48.830 +08:00 [DBG] Rendering check session result
2019-04-12 22:57:12.583 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:57:12.585 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:57:12.588 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:57:12.588 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:57:12.589 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:57:12.590 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:57:12.591 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:57:12.592 +08:00 [DBG] Start discovery request
2019-04-12 22:57:12.599 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:57:12.672 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:57:12.674 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:57:12.675 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:57:12.676 +08:00 [DBG] Start authorize request
2019-04-12 22:57:12.677 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:57:12.678 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:57:12.686 +08:00 [DBG] js found in database: true
2019-04-12 22:57:12.687 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:57:12.690 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:57:12.694 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:57:12.697 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:57:12.700 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:57:12.701 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:57:12.702 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"3b9b7a5677f747988a20af745ea179ee","UiLocales":null,"Nonce":"05211b1d6a764455b2efe2f576675071","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"3b9b7a5677f747988a20af745ea179ee","nonce":"05211b1d6a764455b2efe2f576675071"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:57:12.711 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:57:12.712 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:57:12.712 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:57:12.713 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:57:12.713 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:57:12.720 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:57:12.720 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:57:12.726 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****hsYQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****teCg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFV3:00000003","TimeStamp":"2019-04-12T14:57:12.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:57:12.733 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"3b9b7a5677f747988a20af745ea179ee","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:57:13.000 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:57:13.003 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:57:13.006 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:57:13.006 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:57:13.007 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:57:13.007 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:57:13.008 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:57:13.009 +08:00 [DBG] Start discovery request
2019-04-12 22:57:13.014 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:57:13.027 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:57:13.029 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-12 22:57:13.033 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:57:13.034 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:57:13.035 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 22:57:13.040 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 22:57:13.041 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 22:57:13.043 +08:00 [DBG] Start key discovery request
2019-04-12 22:57:13.089 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:57:13.101 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:57:13.103 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-12 22:57:13.105 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:57:13.108 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:57:13.109 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-12 22:57:13.111 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-12 22:57:13.112 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-12 22:57:13.114 +08:00 [DBG] Start userinfo request
2019-04-12 22:57:13.115 +08:00 [DBG] Bearer token found in header
2019-04-12 22:57:13.126 +08:00 [DBG] js found in database: true
2019-04-12 22:57:13.127 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:57:13.134 +08:00 [DBG] js found in database: true
2019-04-12 22:57:13.134 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:57:13.138 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-12 22:57:13.141 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555081032,"exp":1555084632,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555079024,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-12 22:57:13.144 +08:00 [DBG] Creating userinfo response
2019-04-12 22:57:13.144 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 22:57:13.145 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 22:57:13.148 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:57:13.149 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-12 22:57:13.153 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 22:57:13.156 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:57:13.161 +08:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-12 22:57:13.164 +08:00 [DBG] End userinfo request
2019-04-12 22:57:13.175 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:57:13.176 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:57:13.176 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:57:13.177 +08:00 [DBG] Rendering check session result
2019-04-12 22:57:13.624 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:57:13.628 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:57:13.632 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:57:13.633 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:57:13.634 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:57:13.636 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:57:13.643 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:57:13.644 +08:00 [DBG] Start discovery request
2019-04-12 22:57:13.652 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:57:13.776 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:57:13.780 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:57:13.781 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:57:13.783 +08:00 [DBG] Rendering check session result
2019-04-12 22:58:16.338 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:58:16.343 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:58:16.347 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:58:16.349 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:58:16.351 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:58:16.356 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:58:16.357 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:58:16.359 +08:00 [DBG] Start discovery request
2019-04-12 22:58:16.365 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:58:16.678 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:58:16.679 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:58:16.680 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:58:16.680 +08:00 [DBG] Rendering check session result
2019-04-12 23:04:07.492 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:04:07.497 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:04:07.507 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:04:07.508 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:04:07.510 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:04:07.511 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:04:07.513 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:04:07.515 +08:00 [DBG] Start discovery request
2019-04-12 23:04:07.528 +08:00 [DBG] Found ["openid","profile","role","aa","api1"] as all scopes in database
2019-04-12 23:04:07.538 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:04:07.540 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:04:07.542 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:04:07.547 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:04:07.549 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:04:07.551 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:04:07.552 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:04:07.557 +08:00 [DBG] Start discovery request
2019-04-12 23:04:07.562 +08:00 [DBG] Found ["openid","profile","role","aa","api1"] as all scopes in database
2019-04-12 23:04:07.763 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:04:07.765 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:04:07.766 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:04:07.767 +08:00 [DBG] Rendering check session result
2019-04-12 23:04:07.770 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:04:07.770 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:04:07.771 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:04:07.771 +08:00 [DBG] Rendering check session result
2019-04-12 23:04:07.972 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:04:07.974 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:04:07.974 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:04:07.975 +08:00 [DBG] Start discovery request
2019-04-12 23:04:07.979 +08:00 [DBG] Found ["openid","profile","role","aa","api1"] as all scopes in database
2019-04-12 23:04:08.079 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:04:08.081 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:04:08.081 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:04:08.082 +08:00 [DBG] Start key discovery request
2019-04-12 23:04:15.069 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:04:15.072 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:04:15.075 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:04:15.077 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:04:15.079 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:04:15.085 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:04:15.085 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:04:15.086 +08:00 [DBG] Start discovery request
2019-04-12 23:04:15.090 +08:00 [DBG] Found ["openid","profile","role","aa","api1"] as all scopes in database
2019-04-12 23:04:15.095 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:04:15.098 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:04:15.099 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:04:15.100 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:04:15.100 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:04:15.101 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:04:15.101 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:04:15.102 +08:00 [DBG] Start discovery request
2019-04-12 23:04:15.106 +08:00 [DBG] Found ["openid","profile","role","aa","api1"] as all scopes in database
2019-04-12 23:04:15.384 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:04:15.385 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:04:15.386 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:04:15.387 +08:00 [DBG] Rendering check session result
2019-04-12 23:04:15.389 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:04:15.390 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:04:15.390 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:04:15.390 +08:00 [DBG] Rendering check session result
2019-04-12 23:14:49.245 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:14:49.249 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:14:49.251 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:14:49.253 +08:00 [DBG] Start discovery request
2019-04-12 23:14:49.266 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:14:49.396 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:14:49.400 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:14:49.401 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:14:49.402 +08:00 [DBG] Start key discovery request
2019-04-12 23:15:17.202 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:15:17.206 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:15:17.207 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:15:17.209 +08:00 [DBG] Start discovery request
2019-04-12 23:15:17.217 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:15:17.321 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:15:17.325 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:15:17.327 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:15:17.330 +08:00 [DBG] Start key discovery request
2019-04-12 23:17:59.944 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:17:59.947 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:17:59.950 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:17:59.952 +08:00 [DBG] Start discovery request
2019-04-12 23:17:59.959 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:18:00.064 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:18:00.070 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:18:00.071 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:18:00.072 +08:00 [DBG] Start key discovery request
2019-04-12 23:20:06.165 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:20:06.168 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:20:06.169 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:20:06.172 +08:00 [DBG] Start discovery request
2019-04-12 23:20:06.181 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:20:06.302 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:20:06.306 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:20:06.307 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:20:06.310 +08:00 [DBG] Start key discovery request
2019-04-12 23:21:26.555 +08:00 [INF] Removing 0 grants
2019-04-12 23:21:54.850 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:21:54.854 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:21:54.856 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:21:54.858 +08:00 [DBG] Start discovery request
2019-04-12 23:21:54.865 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:21:54.980 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:21:54.987 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:21:54.989 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:21:54.991 +08:00 [DBG] Start key discovery request
2019-04-12 23:29:07.576 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:29:07.582 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:29:07.584 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:29:07.585 +08:00 [DBG] Start discovery request
2019-04-12 23:29:07.597 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:29:07.716 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:29:07.724 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:29:07.725 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:29:07.727 +08:00 [DBG] Start key discovery request
2019-04-12 23:29:34.013 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:29:34.017 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:29:34.019 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:29:34.021 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:29:34.022 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:29:34.023 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:29:34.024 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:29:34.024 +08:00 [DBG] Start discovery request
2019-04-12 23:29:34.029 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:29:34.034 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:29:34.036 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:29:34.038 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:29:34.041 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:29:34.042 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:29:34.043 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:29:34.045 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:29:34.048 +08:00 [DBG] Start discovery request
2019-04-12 23:29:34.055 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:29:34.289 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:29:34.290 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:29:34.291 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:29:34.291 +08:00 [DBG] Rendering check session result
2019-04-12 23:29:34.299 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:29:34.301 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:29:34.302 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:29:34.303 +08:00 [DBG] Rendering check session result
2019-04-12 23:32:38.340 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:32:38.346 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:32:38.350 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:32:38.352 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:32:38.353 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:32:38.354 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:32:38.359 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:32:38.361 +08:00 [DBG] Start discovery request
2019-04-12 23:32:38.367 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:32:38.375 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:32:38.377 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:32:38.380 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:32:38.382 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:32:38.383 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:32:38.384 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:32:38.386 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:32:38.388 +08:00 [DBG] Start discovery request
2019-04-12 23:32:38.395 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:32:38.617 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:32:38.619 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:32:38.619 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:32:38.620 +08:00 [DBG] Rendering check session result
2019-04-12 23:32:38.623 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:32:38.624 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:32:38.625 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:32:38.626 +08:00 [DBG] Rendering check session result
2019-04-12 23:39:44.523 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:39:44.527 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:39:44.529 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:39:44.531 +08:00 [DBG] Start discovery request
2019-04-12 23:39:44.545 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:39:44.649 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:39:44.654 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:39:44.656 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:39:44.658 +08:00 [DBG] Start key discovery request
2019-04-12 23:44:29.258 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:29.263 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:44:29.267 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:29.269 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:29.271 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:44:29.276 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:44:29.276 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:44:29.277 +08:00 [DBG] Start discovery request
2019-04-12 23:44:29.282 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:44:29.286 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:29.288 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:44:29.290 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:29.291 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:29.292 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:44:29.294 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:44:29.295 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:44:29.301 +08:00 [DBG] Start discovery request
2019-04-12 23:44:29.305 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:44:29.509 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:44:29.511 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:44:29.511 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:44:29.512 +08:00 [DBG] Rendering check session result
2019-04-12 23:44:29.516 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:44:29.516 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:44:29.517 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:44:29.517 +08:00 [DBG] Rendering check session result
2019-04-12 23:44:31.633 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:44:31.637 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:44:31.640 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:44:31.642 +08:00 [DBG] Start discovery request
2019-04-12 23:44:31.648 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:44:31.767 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:44:31.770 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:44:31.771 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:44:31.773 +08:00 [DBG] Start key discovery request
2019-04-12 23:44:31.979 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 23:44:31.981 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 23:44:31.982 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 23:44:31.983 +08:00 [DBG] Start authorize request
2019-04-12 23:44:31.984 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 23:44:31.986 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 23:44:31.996 +08:00 [DBG] js found in database: true
2019-04-12 23:44:31.997 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:44:32.001 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:44:32.009 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:44:32.011 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:44:32.015 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:44:32.016 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 23:44:32.017 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"e78e5662cf5a4a34b8ee8262526ca817","UiLocales":null,"Nonce":"b924616a60b344f1b569b8deb1297111","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"e78e5662cf5a4a34b8ee8262526ca817","nonce":"b924616a60b344f1b569b8deb1297111"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 23:44:32.026 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 23:44:32.028 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 23:44:32.029 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 23:44:32.031 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 23:44:32.032 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 23:44:32.047 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 23:44:32.051 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 23:44:32.062 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****GERw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gGkg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFVN:00000003","TimeStamp":"2019-04-12T15:44:32.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 23:44:32.069 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"e78e5662cf5a4a34b8ee8262526ca817","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 23:44:32.320 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:32.324 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:44:32.327 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:32.328 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:32.330 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:44:32.331 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:44:32.335 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:44:32.336 +08:00 [DBG] Start discovery request
2019-04-12 23:44:32.341 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:44:32.386 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:32.392 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-12 23:44:32.396 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:32.396 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:32.397 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:44:32.398 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:44:32.399 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:44:32.400 +08:00 [DBG] Start key discovery request
2019-04-12 23:44:32.456 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:32.462 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:32.462 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-12 23:44:32.464 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:32.465 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:32.466 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-12 23:44:32.467 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-12 23:44:32.470 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-12 23:44:32.471 +08:00 [DBG] Start userinfo request
2019-04-12 23:44:32.471 +08:00 [DBG] Bearer token found in header
2019-04-12 23:44:32.487 +08:00 [DBG] js found in database: true
2019-04-12 23:44:32.488 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:44:32.498 +08:00 [DBG] js found in database: true
2019-04-12 23:44:32.502 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:44:32.507 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-12 23:44:32.508 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555083872,"exp":1555087472,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555079024,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-12 23:44:32.513 +08:00 [DBG] Creating userinfo response
2019-04-12 23:44:32.513 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 23:44:32.514 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 23:44:32.517 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:44:32.519 +08:00 [DBG] Requested claim types: name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-12 23:44:32.521 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 23:44:32.527 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:44:32.532 +08:00 [INF] Profile service returned the following claim types: name given_name family_name website preferred_username
2019-04-12 23:44:32.534 +08:00 [DBG] End userinfo request
2019-04-12 23:44:32.559 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:44:32.561 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:44:32.562 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:44:32.562 +08:00 [DBG] Rendering check session result
2019-04-12 23:44:33.412 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:33.414 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:44:33.417 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:33.417 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:33.418 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:44:33.420 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:44:33.421 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:44:33.422 +08:00 [DBG] Start discovery request
2019-04-12 23:44:33.431 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:44:33.436 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:33.444 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:44:33.447 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:33.448 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:33.449 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:44:33.454 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:44:33.455 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:44:33.456 +08:00 [DBG] Start discovery request
2019-04-12 23:44:33.461 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:44:33.759 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:44:33.761 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:44:33.762 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:44:33.763 +08:00 [DBG] Rendering check session result
2019-04-12 23:44:33.766 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:44:33.768 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:44:33.769 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:44:33.772 +08:00 [DBG] Rendering check session result
2019-04-12 23:45:52.142 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:45:52.144 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:45:52.146 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:45:52.146 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:45:52.147 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:45:52.147 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:45:52.148 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:45:52.148 +08:00 [DBG] Start discovery request
2019-04-12 23:45:52.153 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:45:52.159 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:45:52.159 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:45:52.161 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:45:52.162 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:45:52.162 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:45:52.163 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:45:52.164 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:45:52.165 +08:00 [DBG] Start discovery request
2019-04-12 23:45:52.165 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:45:52.172 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:45:52.173 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:45:52.174 +08:00 [DBG] Rendering check session result
2019-04-12 23:45:52.177 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:45:52.192 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-12 23:45:52.195 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-12 23:45:52.195 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-12 23:45:52.204 +08:00 [DBG] Processing signout request for a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 23:45:52.215 +08:00 [DBG] Start end session request validation
2019-04-12 23:45:52.219 +08:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","PostLogOutUri":null,"State":null,"Raw":{"post_logout_redirect_uri":"http://localhost:5000"},"$type":"EndSessionRequestValidationLog"}
2019-04-12 23:45:52.222 +08:00 [DBG] Success validating end session request from null
2019-04-12 23:45:54.209 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:45:54.211 +08:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-12 23:45:54.233 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-12 23:45:54.237 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-12 23:45:54.238 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-12 23:45:54.239 +08:00 [INF] {"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLLVA8K4CFVO:00000005","TimeStamp":"2019-04-12T15:45:54.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-12 23:45:54.284 +08:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-12 23:45:54.289 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-12 23:45:54.290 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-12 23:45:54.296 +08:00 [DBG] Processing signout callback request
2019-04-12 23:45:54.315 +08:00 [DBG] js found in database: true
2019-04-12 23:45:54.316 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:45:54.317 +08:00 [DBG] No client front-channel logout URLs
2019-04-12 23:45:54.318 +08:00 [DBG] No client back-channel logout URLs
2019-04-12 23:45:54.318 +08:00 [INF] Successful signout callback.
2019-04-12 23:45:54.318 +08:00 [DBG] No client front-channel iframe urls
2019-04-12 23:45:54.319 +08:00 [DBG] No client back-channel iframe urls
2019-04-12 23:46:03.421 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:03.426 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:46:03.429 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:46:03.430 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:46:03.430 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:46:03.432 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:46:03.433 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:46:03.441 +08:00 [DBG] Start discovery request
2019-04-12 23:46:03.446 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:46:03.684 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 23:46:03.688 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 23:46:03.689 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 23:46:03.689 +08:00 [DBG] Start authorize request
2019-04-12 23:46:03.690 +08:00 [DBG] No user present in authorize request
2019-04-12 23:46:03.690 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 23:46:03.699 +08:00 [DBG] js found in database: true
2019-04-12 23:46:03.700 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:03.704 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:03.711 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:03.714 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:03.722 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:03.723 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 23:46:03.724 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"8997d0332ec647c7b5faf01710f557b6","UiLocales":null,"Nonce":"b459eee5633b4b6dae2c109240902ebf","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"8997d0332ec647c7b5faf01710f557b6","nonce":"b459eee5633b4b6dae2c109240902ebf"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 23:46:03.731 +08:00 [INF] Showing login: User is not authenticated
2019-04-12 23:46:03.737 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 23:46:03.745 +08:00 [DBG] js found in database: true
2019-04-12 23:46:03.746 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:03.750 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:03.758 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:03.762 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:03.767 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:03.769 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 23:46:03.780 +08:00 [DBG] js found in database: true
2019-04-12 23:46:03.782 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:12.809 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:12.810 +08:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-12 23:46:12.812 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 23:46:12.817 +08:00 [DBG] js found in database: true
2019-04-12 23:46:12.818 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:12.820 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:12.824 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:12.826 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:12.829 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:12.830 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 23:46:12.902 +08:00 [DBG] Augmenting SignInContext
2019-04-12 23:46:12.905 +08:00 [DBG] Adding idp claim with value: local
2019-04-12 23:46:12.912 +08:00 [DBG] Adding amr claim with value: pwd
2019-04-12 23:46:12.914 +08:00 [DBG] Adding auth_time claim with value: 1555083972
2019-04-12 23:46:12.916 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-12 23:46:12.920 +08:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"admin","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLLVA8K4CFVO:0000000A","TimeStamp":"2019-04-12T15:46:12.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-12 23:46:12.938 +08:00 [DBG] js found in database: true
2019-04-12 23:46:12.940 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:12.953 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-12 23:46:12.956 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-12 23:46:12.961 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-12 23:46:12.963 +08:00 [DBG] Start authorize callback request
2019-04-12 23:46:12.964 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 23:46:12.965 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 23:46:12.975 +08:00 [DBG] js found in database: true
2019-04-12 23:46:12.976 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:12.981 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:12.992 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:12.996 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:13.003 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:13.006 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 23:46:13.007 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"8997d0332ec647c7b5faf01710f557b6","UiLocales":null,"Nonce":"b459eee5633b4b6dae2c109240902ebf","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"7765414bd898673765977c3e6438cf5e","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"8997d0332ec647c7b5faf01710f557b6","nonce":"b459eee5633b4b6dae2c109240902ebf"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 23:46:13.019 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 23:46:13.020 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 23:46:13.022 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 23:46:13.022 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 23:46:13.023 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 23:46:13.039 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 23:46:13.044 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 23:46:13.055 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****eqNQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qjEQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFVO:0000000B","TimeStamp":"2019-04-12T15:46:13.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 23:46:13.074 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"8997d0332ec647c7b5faf01710f557b6","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 23:46:13.082 +08:00 [DBG] Augmenting SignInContext
2019-04-12 23:46:13.084 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-12 23:46:13.635 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:13.638 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:46:13.642 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:46:13.643 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:46:13.645 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:46:13.646 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:46:13.651 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:46:13.652 +08:00 [DBG] Start discovery request
2019-04-12 23:46:13.657 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:46:13.696 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:13.700 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-12 23:46:13.705 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:46:13.706 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:46:13.708 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:46:13.713 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:46:13.714 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:46:13.715 +08:00 [DBG] Start key discovery request
2019-04-12 23:46:13.744 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:13.749 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:13.750 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-12 23:46:13.754 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:46:13.759 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:46:13.760 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-12 23:46:13.762 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-12 23:46:13.763 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-12 23:46:13.764 +08:00 [DBG] Start userinfo request
2019-04-12 23:46:13.765 +08:00 [DBG] Bearer token found in header
2019-04-12 23:46:13.781 +08:00 [DBG] js found in database: true
2019-04-12 23:46:13.783 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:13.795 +08:00 [DBG] js found in database: true
2019-04-12 23:46:13.799 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:13.804 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-12 23:46:13.806 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555083973,"exp":1555087573,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555083972,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-12 23:46:13.818 +08:00 [DBG] Creating userinfo response
2019-04-12 23:46:13.819 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 23:46:13.822 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 23:46:13.826 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:13.828 +08:00 [DBG] Requested claim types: name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-12 23:46:13.829 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 23:46:13.832 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:13.836 +08:00 [INF] Profile service returned the following claim types: name given_name family_name website preferred_username
2019-04-12 23:46:13.837 +08:00 [DBG] End userinfo request
2019-04-12 23:46:13.855 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:46:13.858 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:46:13.859 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:46:13.860 +08:00 [DBG] Rendering check session result
2019-04-12 23:46:14.816 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:14.820 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:46:14.823 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:46:14.824 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:46:14.826 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:46:14.827 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:46:14.829 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:46:14.835 +08:00 [DBG] Start discovery request
2019-04-12 23:46:14.840 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:46:14.844 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:14.848 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:46:14.850 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:46:14.851 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:46:14.853 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:46:14.854 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:46:14.861 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:46:14.862 +08:00 [DBG] Start discovery request
2019-04-12 23:46:14.867 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:46:15.093 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:46:15.096 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:46:15.097 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:46:15.098 +08:00 [DBG] Rendering check session result
2019-04-12 23:46:15.101 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:46:15.101 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:46:15.102 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:46:15.102 +08:00 [DBG] Rendering check session result
2019-04-13 00:09:13.925 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:09:13.929 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:09:13.930 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:09:13.931 +08:00 [DBG] Start discovery request
2019-04-13 00:09:13.944 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:09:14.058 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:09:14.067 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:09:14.069 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:09:14.071 +08:00 [DBG] Start key discovery request
2019-04-13 00:17:02.119 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:17:02.121 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:17:02.122 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:17:02.123 +08:00 [DBG] Start discovery request
2019-04-13 00:17:02.134 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:17:02.250 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:17:02.254 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:17:02.255 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:17:02.257 +08:00 [DBG] Start key discovery request
2019-04-13 00:21:26.561 +08:00 [INF] Removing 0 grants
2019-04-13 00:24:05.609 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:24:05.616 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:24:05.618 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:24:05.620 +08:00 [DBG] Start discovery request
2019-04-13 00:24:05.628 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:24:05.749 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:24:05.753 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:24:05.754 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:24:05.756 +08:00 [DBG] Start key discovery request
2019-04-13 00:25:45.437 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:25:45.447 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:25:45.449 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:25:45.450 +08:00 [DBG] Start discovery request
2019-04-13 00:25:45.457 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:25:45.583 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:25:45.585 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:25:45.586 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:25:45.586 +08:00 [DBG] Start key discovery request
2019-04-13 00:30:23.627 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 00:30:23.631 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 00:30:23.638 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 00:30:23.641 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 00:30:23.643 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:30:23.644 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:30:23.645 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:30:23.646 +08:00 [DBG] Start discovery request
2019-04-13 00:30:23.650 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:30:23.659 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 00:30:23.661 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 00:30:23.663 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 00:30:23.664 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 00:30:23.665 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:30:23.666 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:30:23.666 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:30:23.667 +08:00 [DBG] Start discovery request
2019-04-13 00:30:23.671 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:30:23.908 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 00:30:23.912 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 00:30:23.912 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 00:30:23.913 +08:00 [DBG] Rendering check session result
2019-04-13 00:30:23.921 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 00:30:23.923 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 00:30:23.923 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 00:30:23.924 +08:00 [DBG] Rendering check session result
2019-04-13 00:30:24.299 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:30:24.301 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:30:24.301 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:30:24.302 +08:00 [DBG] Start discovery request
2019-04-13 00:30:24.310 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:30:24.434 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:30:24.436 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:30:24.439 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:30:24.440 +08:00 [DBG] Start key discovery request
2019-04-13 00:40:26.178 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:40:26.191 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:40:26.191 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:40:26.193 +08:00 [DBG] Start discovery request
2019-04-13 00:40:26.209 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:40:26.326 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:40:26.331 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:40:26.332 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:40:26.334 +08:00 [DBG] Start key discovery request
2019-04-13 00:41:27.992 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:41:27.995 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:41:27.996 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:41:27.997 +08:00 [DBG] Start discovery request
2019-04-13 00:41:28.005 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:41:28.126 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:41:28.132 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:41:28.134 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:41:28.135 +08:00 [DBG] Start key discovery request
2019-04-13 00:49:11.013 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:49:11.016 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:49:11.016 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:49:11.017 +08:00 [DBG] Start discovery request
2019-04-13 00:49:11.032 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:49:11.150 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:49:11.154 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:49:11.157 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:49:11.159 +08:00 [DBG] Start key discovery request
2019-04-13 00:51:19.444 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 00:51:19.446 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 00:51:19.447 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 00:51:19.447 +08:00 [DBG] Start authorize request
2019-04-13 00:51:19.448 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 00:51:19.449 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 00:51:19.460 +08:00 [DBG] js found in database: true
2019-04-13 00:51:19.461 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 00:51:19.472 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 00:51:19.478 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 00:51:19.480 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 00:51:19.485 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 00:51:19.486 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 00:51:19.487 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"f0ae5cbde8cd4a228715ff736f1d5231","UiLocales":null,"Nonce":"b5e52aa8184044ea988cd9f256c9c5d0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"7765414bd898673765977c3e6438cf5e","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"f0ae5cbde8cd4a228715ff736f1d5231","nonce":"b5e52aa8184044ea988cd9f256c9c5d0"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 00:51:19.498 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-13 00:51:19.499 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-13 00:51:19.500 +08:00 [DBG] Creating Implicit Flow response.
2019-04-13 00:51:19.501 +08:00 [DBG] Getting claims for access token for client: js
2019-04-13 00:51:19.505 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 00:51:19.522 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-13 00:51:19.523 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-13 00:51:19.528 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****JgFQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8ihw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CG05:00000001","TimeStamp":"2019-04-12T16:51:19.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-13 00:51:19.533 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"f0ae5cbde8cd4a228715ff736f1d5231","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-13 00:51:20.000 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 00:51:20.002 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 00:51:20.004 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 00:51:20.005 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 00:51:20.006 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:51:20.007 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:51:20.008 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:51:20.009 +08:00 [DBG] Start discovery request
2019-04-13 00:51:20.014 +08:00 [DBG] Found ["openid","profile","role","a","b","c","d","e","f","g","h","api1"] as all scopes in database
2019-04-13 00:51:20.066 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 00:51:20.068 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-13 00:51:20.071 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 00:51:20.072 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 00:51:20.073 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:51:20.073 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:51:20.074 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:51:20.076 +08:00 [DBG] Start key discovery request
2019-04-13 00:51:20.117 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 00:51:20.123 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 00:51:20.124 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-13 00:51:20.126 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 00:51:20.127 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 00:51:20.128 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-13 00:51:20.131 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-13 00:51:20.131 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-13 00:51:20.132 +08:00 [DBG] Start userinfo request
2019-04-13 00:51:20.132 +08:00 [DBG] Bearer token found in header
2019-04-13 00:51:20.148 +08:00 [DBG] js found in database: true
2019-04-13 00:51:20.148 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 00:51:20.157 +08:00 [DBG] js found in database: true
2019-04-13 00:51:20.158 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 00:51:20.162 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-13 00:51:20.163 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555087879,"exp":1555091479,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555083972,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-13 00:51:20.166 +08:00 [DBG] Creating userinfo response
2019-04-13 00:51:20.166 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-13 00:51:20.167 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-13 00:51:20.171 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 00:51:20.177 +08:00 [DBG] Requested claim types: a b
2019-04-13 00:51:20.178 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-13 00:51:20.181 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 00:51:20.187 +08:00 [INF] Profile service returned the following claim types: 
2019-04-13 00:51:20.188 +08:00 [DBG] End userinfo request
2019-04-13 00:51:20.211 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 00:51:20.213 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 00:51:20.214 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 00:51:20.216 +08:00 [DBG] Rendering check session result
2019-04-13 00:51:21.848 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 00:51:21.852 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 00:51:21.855 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 00:51:21.857 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 00:51:21.858 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:51:21.860 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:51:21.866 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:51:21.867 +08:00 [DBG] Start discovery request
2019-04-13 00:51:21.871 +08:00 [DBG] Found ["openid","profile","role","a","b","c","d","e","f","g","h","api1"] as all scopes in database
2019-04-13 00:51:21.878 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 00:51:21.879 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 00:51:21.880 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 00:51:21.881 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 00:51:21.882 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:51:21.883 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:51:21.884 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:51:21.884 +08:00 [DBG] Start discovery request
2019-04-13 00:51:21.889 +08:00 [DBG] Found ["openid","profile","role","a","b","c","d","e","f","g","h","api1"] as all scopes in database
2019-04-13 00:51:22.122 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 00:51:22.125 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 00:51:22.126 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 00:51:22.127 +08:00 [DBG] Rendering check session result
2019-04-13 00:51:22.130 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 00:51:22.130 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 00:51:22.131 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 00:51:22.131 +08:00 [DBG] Rendering check session result
2019-04-13 00:55:22.983 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:55:22.987 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:55:22.988 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:55:22.988 +08:00 [DBG] Start discovery request
2019-04-13 00:55:23.000 +08:00 [DBG] Found ["openid","profile","role","a","b","c","d","e","f","g","h","api1"] as all scopes in database
2019-04-13 00:55:23.121 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:55:23.130 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:55:23.132 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:55:23.134 +08:00 [DBG] Start key discovery request
2019-04-13 00:57:32.845 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:57:32.846 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:57:32.847 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:57:32.847 +08:00 [DBG] Start discovery request
2019-04-13 00:57:32.853 +08:00 [DBG] Found ["openid","profile","role","a","b","c","d","e","f","g","h","api1"] as all scopes in database
2019-04-13 00:57:32.957 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:57:32.961 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:57:32.962 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:57:32.963 +08:00 [DBG] Start key discovery request
2019-04-13 00:59:01.644 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:59:01.645 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:59:01.646 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:59:01.646 +08:00 [DBG] Start discovery request
2019-04-13 00:59:01.653 +08:00 [DBG] Found ["openid","profile","role","a","b","c","d","e","f","g","h","api1"] as all scopes in database
2019-04-13 00:59:01.784 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:59:01.789 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:59:01.790 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:59:01.791 +08:00 [DBG] Start key discovery request
2019-04-13 01:18:45.095 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 01:18:45.099 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 01:18:45.101 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 01:18:45.102 +08:00 [DBG] Start discovery request
2019-04-13 01:18:45.119 +08:00 [DBG] Found ["openid","profile","role","a","b","c","d","e","f","g","h","api1"] as all scopes in database
2019-04-13 01:18:45.225 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 01:18:45.229 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 01:18:45.231 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 01:18:45.234 +08:00 [DBG] Start key discovery request
2019-04-13 01:20:17.818 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 01:20:17.820 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 01:20:17.821 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 01:20:17.821 +08:00 [DBG] Start discovery request
2019-04-13 01:20:17.828 +08:00 [DBG] Found ["openid","profile","role","a","b","c","d","e","f","g","h","api1"] as all scopes in database
2019-04-13 01:20:17.947 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 01:20:17.951 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 01:20:17.954 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 01:20:17.956 +08:00 [DBG] Start key discovery request
2019-04-13 01:21:26.577 +08:00 [INF] Removing 0 grants
2019-04-13 01:30:07.431 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 01:30:07.433 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 01:30:07.434 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 01:30:07.435 +08:00 [DBG] Start discovery request
2019-04-13 01:30:07.452 +08:00 [DBG] Found ["openid","profile","role","a","b","c","d","e","f","g","h","api1"] as all scopes in database
2019-04-13 01:30:07.577 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 01:30:07.581 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 01:30:07.582 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 01:30:07.583 +08:00 [DBG] Start key discovery request
2019-04-13 01:32:08.551 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 01:32:08.554 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 01:32:08.554 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 01:32:08.555 +08:00 [DBG] Start discovery request
2019-04-13 01:32:08.562 +08:00 [DBG] Found ["openid","profile","role","a","b","c","d","e","f","g","h","api1"] as all scopes in database
2019-04-13 01:32:08.671 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 01:32:08.675 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 01:32:08.677 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 01:32:08.679 +08:00 [DBG] Start key discovery request
2019-04-13 01:43:32.501 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 01:43:32.506 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 01:43:32.507 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 01:43:32.507 +08:00 [DBG] Start discovery request
2019-04-13 01:43:32.523 +08:00 [DBG] Found ["openid","profile","role","a","b","c","d","e","f","g","h","api1"] as all scopes in database
2019-04-13 01:43:32.632 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 01:43:32.636 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 01:43:32.637 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 01:43:32.639 +08:00 [DBG] Start key discovery request
2019-04-13 01:49:45.959 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 01:49:45.961 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 01:49:45.962 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 01:49:45.962 +08:00 [DBG] Start discovery request
2019-04-13 01:49:45.979 +08:00 [DBG] Found ["openid","profile","role","a","b","c","d","e","f","h","api1"] as all scopes in database
2019-04-13 01:49:46.090 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 01:49:46.095 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 01:49:46.096 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 01:49:46.097 +08:00 [DBG] Start key discovery request
2019-04-13 01:52:44.071 +08:00 [DBG] TaskCanceledException. Exiting.
2019-04-13 01:52:44.086 +08:00 [DBG] Stopping grant removal
2019-04-13 09:42:15.604 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-13 09:42:15.953 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-13 09:42:15.955 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-13 09:42:15.955 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-13 09:42:15.956 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-13 09:42:15.956 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-13 09:42:15.957 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-13 09:42:16.117 +08:00 [DBG] Starting grant removal
2019-04-13 09:42:40.788 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 09:42:40.825 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 09:42:42.428 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 09:42:42.435 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 09:42:42.474 +08:00 [DBG] Login Url: /Account/Login
2019-04-13 09:42:42.475 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-13 09:42:42.476 +08:00 [DBG] Logout Url: /Account/Logout
2019-04-13 09:42:42.477 +08:00 [DBG] ConsentUrl Url: /consent
2019-04-13 09:42:42.480 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-13 09:42:42.484 +08:00 [DBG] Error Url: /home/error
2019-04-13 09:42:42.499 +08:00 [DBG] Error Id Parameter: errorId
2019-04-13 09:42:42.533 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 09:42:42.556 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 09:42:42.564 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 09:42:42.579 +08:00 [DBG] Start discovery request
2019-04-13 09:42:43.592 +08:00 [DBG] Found ["openid","profile","role","b","c","d","e","f","api1"] as all scopes in database
2019-04-13 09:42:43.685 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 09:42:43.710 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 09:42:43.717 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 09:42:43.732 +08:00 [DBG] Start authorize request
2019-04-13 09:42:43.753 +08:00 [DBG] No user present in authorize request
2019-04-13 09:42:43.763 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 09:42:44.148 +08:00 [DBG] js found in database: true
2019-04-13 09:42:44.158 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 09:42:44.250 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:44.447 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 09:42:44.495 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:44.507 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 09:42:44.521 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 09:42:44.539 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"f938fc394b984ae7a90732393b059b05","UiLocales":null,"Nonce":"cdd13f98bb604f38a8a12813d93fc28e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"f938fc394b984ae7a90732393b059b05","nonce":"cdd13f98bb604f38a8a12813d93fc28e"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 09:42:44.585 +08:00 [INF] Showing login: User is not authenticated
2019-04-13 09:42:44.790 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 09:42:44.798 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 09:42:44.799 +08:00 [DBG] js found in database: true
2019-04-13 09:42:44.805 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 09:42:44.808 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 09:42:44.825 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 09:42:44.842 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:44.845 +08:00 [DBG] Start authorize request
2019-04-13 09:42:44.849 +08:00 [DBG] No user present in authorize request
2019-04-13 09:42:44.851 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 09:42:44.853 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 09:42:44.859 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:44.868 +08:00 [DBG] js found in database: true
2019-04-13 09:42:44.868 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 09:42:44.873 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:44.880 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 09:42:44.882 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 09:42:44.885 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 09:42:44.892 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:44.895 +08:00 [DBG] js found in database: true
2019-04-13 09:42:44.899 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 09:42:44.901 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 09:42:44.907 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 09:42:44.914 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"d5450e208b914b709c8d03b28c019ce7","UiLocales":null,"Nonce":"87263c6f37c644aea0c1c11a7f0bb5be","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"d5450e208b914b709c8d03b28c019ce7","nonce":"87263c6f37c644aea0c1c11a7f0bb5be"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 09:42:44.930 +08:00 [INF] Showing login: User is not authenticated
2019-04-13 09:42:44.939 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 09:42:44.944 +08:00 [DBG] js found in database: true
2019-04-13 09:42:44.945 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 09:42:44.950 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:44.956 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 09:42:44.959 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:44.963 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 09:42:44.965 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 09:42:44.974 +08:00 [DBG] js found in database: true
2019-04-13 09:42:44.975 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 09:42:54.539 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 09:42:54.543 +08:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-13 09:42:54.592 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 09:42:54.600 +08:00 [DBG] js found in database: true
2019-04-13 09:42:54.601 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 09:42:54.604 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:54.609 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 09:42:54.619 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:54.627 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 09:42:54.628 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 09:42:55.118 +08:00 [DBG] Augmenting SignInContext
2019-04-13 09:42:55.121 +08:00 [DBG] Adding idp claim with value: local
2019-04-13 09:42:55.127 +08:00 [DBG] Adding amr claim with value: pwd
2019-04-13 09:42:55.130 +08:00 [DBG] Adding auth_time claim with value: 1555119775
2019-04-13 09:42:55.145 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-13 09:42:55.177 +08:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"admin","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLLVM58EGCRQ:00000002","TimeStamp":"2019-04-13T01:42:55.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-13 09:42:55.207 +08:00 [DBG] js found in database: true
2019-04-13 09:42:55.207 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 09:42:55.256 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-13 09:42:55.262 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-13 09:42:55.275 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-13 09:42:55.298 +08:00 [DBG] Start authorize callback request
2019-04-13 09:42:55.310 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 09:42:55.313 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 09:42:55.329 +08:00 [DBG] js found in database: true
2019-04-13 09:42:55.330 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 09:42:55.340 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:55.350 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 09:42:55.356 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:55.366 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 09:42:55.371 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 09:42:55.381 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"d5450e208b914b709c8d03b28c019ce7","UiLocales":null,"Nonce":"87263c6f37c644aea0c1c11a7f0bb5be","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d04b40ef4f4375520fea310fa420ca76","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"d5450e208b914b709c8d03b28c019ce7","nonce":"87263c6f37c644aea0c1c11a7f0bb5be"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 09:42:55.564 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-13 09:42:55.586 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-13 09:42:55.600 +08:00 [DBG] Creating Implicit Flow response.
2019-04-13 09:42:55.614 +08:00 [DBG] Getting claims for access token for client: js
2019-04-13 09:42:55.616 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 09:42:55.731 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-13 09:42:55.735 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-13 09:42:55.776 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****8LQw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8Xxg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGCRN:00000004","TimeStamp":"2019-04-13T01:42:55.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-13 09:42:55.815 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"d5450e208b914b709c8d03b28c019ce7","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-13 09:42:55.844 +08:00 [DBG] Augmenting SignInContext
2019-04-13 09:42:55.846 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-13 09:42:56.506 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 09:42:56.515 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 09:42:56.523 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 09:42:56.525 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 09:42:56.527 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 09:42:56.538 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 09:42:56.541 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 09:42:56.544 +08:00 [DBG] Start discovery request
2019-04-13 09:42:56.558 +08:00 [DBG] Found ["openid","profile","role","b","c","d","e","f","api1"] as all scopes in database
2019-04-13 09:42:56.570 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 09:42:56.571 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-13 09:42:56.575 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 09:42:56.577 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 09:42:56.578 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 09:42:56.587 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 09:42:56.589 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 09:42:56.599 +08:00 [DBG] Start key discovery request
2019-04-13 09:42:56.668 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 09:42:56.679 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 09:42:56.681 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-13 09:42:56.693 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 09:42:56.697 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 09:42:56.700 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-13 09:42:56.707 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-13 09:42:56.710 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-13 09:42:56.732 +08:00 [DBG] Start userinfo request
2019-04-13 09:42:56.739 +08:00 [DBG] Bearer token found in header
2019-04-13 09:42:56.780 +08:00 [DBG] js found in database: true
2019-04-13 09:42:56.782 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 09:42:56.795 +08:00 [DBG] js found in database: true
2019-04-13 09:42:56.796 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 09:42:56.814 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-13 09:42:56.818 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555119775,"exp":1555123375,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555119775,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-13 09:42:56.837 +08:00 [DBG] Creating userinfo response
2019-04-13 09:42:56.842 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-13 09:42:56.845 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-13 09:42:56.851 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:56.853 +08:00 [DBG] Requested claim types: a b
2019-04-13 09:42:56.856 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-13 09:42:56.863 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 09:42:56.876 +08:00 [INF] Profile service returned the following claim types: 
2019-04-13 09:42:56.878 +08:00 [DBG] End userinfo request
2019-04-13 09:42:56.919 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 09:42:56.931 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 09:42:56.939 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 09:42:56.944 +08:00 [DBG] Rendering check session result
2019-04-13 09:42:57.523 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 09:42:57.527 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 09:42:57.541 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 09:42:57.543 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 09:42:57.547 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 09:42:57.554 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 09:42:57.557 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 09:42:57.566 +08:00 [DBG] Start discovery request
2019-04-13 09:42:57.574 +08:00 [DBG] Found ["openid","profile","role","b","c","d","e","f","api1"] as all scopes in database
2019-04-13 09:42:57.590 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 09:42:57.597 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 09:42:57.599 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 09:42:57.604 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 09:42:57.605 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 09:42:57.608 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 09:42:57.616 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 09:42:57.618 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 09:42:57.622 +08:00 [DBG] Rendering check session result
2019-04-13 09:42:57.631 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 09:42:57.636 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 09:42:57.639 +08:00 [DBG] Start discovery request
2019-04-13 09:42:57.647 +08:00 [DBG] Found ["openid","profile","role","b","c","d","e","f","api1"] as all scopes in database
2019-04-13 09:42:57.659 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 09:42:57.665 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 09:42:57.669 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 09:42:57.680 +08:00 [DBG] Rendering check session result
2019-04-13 09:42:59.748 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 09:42:59.755 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 09:42:59.758 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 09:42:59.763 +08:00 [DBG] Start discovery request
2019-04-13 09:42:59.776 +08:00 [DBG] Found ["openid","profile","role","b","c","d","e","f","api1"] as all scopes in database
2019-04-13 09:42:59.902 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 09:42:59.913 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 09:42:59.918 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 09:42:59.923 +08:00 [DBG] Start key discovery request
2019-04-13 10:20:23.296 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:20:23.304 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:20:23.305 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:20:23.313 +08:00 [DBG] Start discovery request
2019-04-13 10:20:23.324 +08:00 [DBG] Found ["openid","profile","role","b","c","d","e","f","api1"] as all scopes in database
2019-04-13 10:20:23.432 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 10:20:23.439 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 10:20:23.443 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 10:20:23.446 +08:00 [DBG] Start key discovery request
2019-04-13 10:20:34.831 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:20:34.834 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:20:34.841 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:20:34.844 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:20:34.847 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:20:34.848 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:20:34.849 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:20:34.856 +08:00 [DBG] Start discovery request
2019-04-13 10:20:34.865 +08:00 [DBG] Found ["openid","profile","role","b","c","d","e","f","api1"] as all scopes in database
2019-04-13 10:20:34.875 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:20:34.877 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:20:34.882 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:20:34.887 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:20:34.890 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:20:34.893 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:20:34.895 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:20:34.896 +08:00 [DBG] Start discovery request
2019-04-13 10:20:34.902 +08:00 [DBG] Found ["openid","profile","role","b","c","d","e","f","api1"] as all scopes in database
2019-04-13 10:20:34.926 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-13 10:20:34.926 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:20:34.932 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-13 10:20:34.936 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:20:34.940 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-13 10:20:34.942 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:20:34.952 +08:00 [DBG] Rendering check session result
2019-04-13 10:20:34.955 +08:00 [DBG] Processing signout request for a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 10:20:34.967 +08:00 [DBG] Start end session request validation
2019-04-13 10:20:34.971 +08:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","PostLogOutUri":null,"State":null,"Raw":{"post_logout_redirect_uri":"http://localhost:5000"},"$type":"EndSessionRequestValidationLog"}
2019-04-13 10:20:34.975 +08:00 [DBG] Success validating end session request from null
2019-04-13 10:20:36.670 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:20:36.673 +08:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-13 10:20:36.697 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-13 10:20:36.707 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-13 10:20:36.712 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-13 10:20:36.716 +08:00 [INF] {"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLLVM58EGCS0:00000004","TimeStamp":"2019-04-13T02:20:36.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-13 10:20:36.809 +08:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-13 10:20:36.818 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-13 10:20:36.819 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-13 10:20:36.828 +08:00 [DBG] Processing signout callback request
2019-04-13 10:20:36.854 +08:00 [DBG] js found in database: true
2019-04-13 10:20:36.855 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:20:36.860 +08:00 [DBG] No client front-channel logout URLs
2019-04-13 10:20:36.861 +08:00 [DBG] No client back-channel logout URLs
2019-04-13 10:20:36.861 +08:00 [INF] Successful signout callback.
2019-04-13 10:20:36.862 +08:00 [DBG] No client front-channel iframe urls
2019-04-13 10:20:36.863 +08:00 [DBG] No client back-channel iframe urls
2019-04-13 10:20:47.263 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:20:47.270 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:20:47.275 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:20:47.279 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:20:47.284 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:20:47.287 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:20:47.290 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:20:47.292 +08:00 [DBG] Start discovery request
2019-04-13 10:20:47.302 +08:00 [DBG] Found ["openid","profile","role","b","c","d","e","f","api1"] as all scopes in database
2019-04-13 10:20:47.531 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 10:20:47.536 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 10:20:47.539 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 10:20:47.543 +08:00 [DBG] Start authorize request
2019-04-13 10:20:47.545 +08:00 [DBG] No user present in authorize request
2019-04-13 10:20:47.546 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:20:47.555 +08:00 [DBG] js found in database: true
2019-04-13 10:20:47.555 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:20:47.560 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:20:47.565 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:20:47.569 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:20:47.578 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:20:47.579 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:20:47.580 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"1b115b723a744f8c911e6d17ff1c22f4","UiLocales":null,"Nonce":"230d62c6f9574ee28d4eb5e7a064eec5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"1b115b723a744f8c911e6d17ff1c22f4","nonce":"230d62c6f9574ee28d4eb5e7a064eec5"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 10:20:47.595 +08:00 [INF] Showing login: User is not authenticated
2019-04-13 10:20:47.600 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:20:47.606 +08:00 [DBG] js found in database: true
2019-04-13 10:20:47.607 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:20:47.614 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:20:47.618 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:20:47.623 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:20:47.627 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:20:47.630 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:20:47.637 +08:00 [DBG] js found in database: true
2019-04-13 10:20:47.637 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:20:54.175 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:20:54.178 +08:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-13 10:20:54.181 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:20:54.186 +08:00 [DBG] js found in database: true
2019-04-13 10:20:54.187 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:20:54.191 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:20:54.195 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:20:54.204 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:20:54.208 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:20:54.209 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:20:54.228 +08:00 [DBG] Augmenting SignInContext
2019-04-13 10:20:54.229 +08:00 [DBG] Adding idp claim with value: local
2019-04-13 10:20:54.238 +08:00 [DBG] Adding amr claim with value: pwd
2019-04-13 10:20:54.239 +08:00 [DBG] Adding auth_time claim with value: 1555122054
2019-04-13 10:20:54.243 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-13 10:20:54.246 +08:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"admin","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLLVM58EGCS0:0000000A","TimeStamp":"2019-04-13T02:20:54.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-13 10:20:54.265 +08:00 [DBG] js found in database: true
2019-04-13 10:20:54.267 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:20:54.283 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-13 10:20:54.288 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-13 10:20:54.290 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-13 10:20:54.291 +08:00 [DBG] Start authorize callback request
2019-04-13 10:20:54.292 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 10:20:54.293 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:20:54.300 +08:00 [DBG] js found in database: true
2019-04-13 10:20:54.301 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:20:54.305 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:20:54.309 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:20:54.312 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:20:54.316 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:20:54.317 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:20:54.321 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"1b115b723a744f8c911e6d17ff1c22f4","UiLocales":null,"Nonce":"230d62c6f9574ee28d4eb5e7a064eec5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5885d9283931dc176ce0a72c7d02566f","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"1b115b723a744f8c911e6d17ff1c22f4","nonce":"230d62c6f9574ee28d4eb5e7a064eec5"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 10:20:54.339 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-13 10:20:54.344 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-13 10:20:54.347 +08:00 [DBG] Creating Implicit Flow response.
2019-04-13 10:20:54.348 +08:00 [DBG] Getting claims for access token for client: js
2019-04-13 10:20:54.351 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 10:20:54.368 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-13 10:20:54.368 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-13 10:20:54.376 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****60RA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5XZQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGCS0:0000000B","TimeStamp":"2019-04-13T02:20:54.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-13 10:20:54.393 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"1b115b723a744f8c911e6d17ff1c22f4","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-13 10:20:54.397 +08:00 [DBG] Augmenting SignInContext
2019-04-13 10:20:54.401 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-13 10:20:54.611 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:20:54.618 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:20:54.632 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:20:54.636 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:20:54.638 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:20:54.639 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:20:54.641 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:20:54.642 +08:00 [DBG] Start discovery request
2019-04-13 10:20:54.650 +08:00 [DBG] Found ["openid","profile","role","b","c","d","e","f","api1"] as all scopes in database
2019-04-13 10:20:54.679 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:20:54.682 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-13 10:20:54.685 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:20:54.687 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:20:54.688 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 10:20:54.691 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 10:20:54.693 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 10:20:54.695 +08:00 [DBG] Start key discovery request
2019-04-13 10:20:54.731 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:20:54.740 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:20:54.742 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-13 10:20:54.745 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:20:54.752 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:20:54.753 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-13 10:20:54.758 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-13 10:20:54.759 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-13 10:20:54.760 +08:00 [DBG] Start userinfo request
2019-04-13 10:20:54.762 +08:00 [DBG] Bearer token found in header
2019-04-13 10:20:54.771 +08:00 [DBG] js found in database: true
2019-04-13 10:20:54.772 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:20:54.778 +08:00 [DBG] js found in database: true
2019-04-13 10:20:54.779 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:20:54.784 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-13 10:20:54.785 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555122054,"exp":1555125654,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555122054,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-13 10:20:54.793 +08:00 [DBG] Creating userinfo response
2019-04-13 10:20:54.794 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-13 10:20:54.794 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-13 10:20:54.797 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:20:54.801 +08:00 [DBG] Requested claim types: a b
2019-04-13 10:20:54.802 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-13 10:20:54.806 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:20:54.810 +08:00 [INF] Profile service returned the following claim types: 
2019-04-13 10:20:54.813 +08:00 [DBG] End userinfo request
2019-04-13 10:20:54.844 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:20:54.850 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:20:54.852 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:20:54.854 +08:00 [DBG] Rendering check session result
2019-04-13 10:20:55.777 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:20:55.787 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:20:55.793 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:20:55.795 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:20:55.797 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:20:55.805 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:20:55.807 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:20:55.808 +08:00 [DBG] Start discovery request
2019-04-13 10:20:55.812 +08:00 [DBG] Found ["openid","profile","role","b","c","d","e","f","api1"] as all scopes in database
2019-04-13 10:20:55.818 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:20:55.821 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:20:55.824 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:20:55.828 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:20:55.829 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:20:55.831 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:20:55.832 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:20:55.834 +08:00 [DBG] Start discovery request
2019-04-13 10:20:55.839 +08:00 [DBG] Found ["openid","profile","role","b","c","d","e","f","api1"] as all scopes in database
2019-04-13 10:20:56.062 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:20:56.062 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:20:56.065 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:20:56.068 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:20:56.070 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:20:56.071 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:20:56.073 +08:00 [DBG] Rendering check session result
2019-04-13 10:20:56.077 +08:00 [DBG] Rendering check session result
2019-04-13 10:25:33.738 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:25:33.741 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:25:33.745 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:25:33.747 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:25:33.748 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:25:33.749 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:25:33.755 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:25:33.757 +08:00 [DBG] Start discovery request
2019-04-13 10:25:33.763 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:25:33.767 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:25:33.769 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:25:33.774 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:25:33.774 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:25:33.775 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:25:33.777 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:25:33.779 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:25:33.780 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:25:33.781 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:25:33.783 +08:00 [DBG] Rendering check session result
2019-04-13 10:25:33.788 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:25:33.792 +08:00 [DBG] Start discovery request
2019-04-13 10:25:33.802 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:25:33.818 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-13 10:25:33.821 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-13 10:25:33.823 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-13 10:25:33.825 +08:00 [DBG] Processing signout request for a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 10:25:33.827 +08:00 [DBG] Start end session request validation
2019-04-13 10:25:33.828 +08:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","PostLogOutUri":null,"State":null,"Raw":{"post_logout_redirect_uri":"http://localhost:5000"},"$type":"EndSessionRequestValidationLog"}
2019-04-13 10:25:33.833 +08:00 [DBG] Success validating end session request from null
2019-04-13 10:25:35.054 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:25:35.058 +08:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-13 10:25:35.063 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-13 10:25:35.064 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-13 10:25:35.068 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-13 10:25:35.070 +08:00 [INF] {"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLLVM58EGCS3:00000004","TimeStamp":"2019-04-13T02:25:35.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-13 10:25:35.101 +08:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-13 10:25:35.106 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-13 10:25:35.108 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-13 10:25:35.111 +08:00 [DBG] Processing signout callback request
2019-04-13 10:25:35.123 +08:00 [DBG] js found in database: true
2019-04-13 10:25:35.124 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:25:35.127 +08:00 [DBG] No client front-channel logout URLs
2019-04-13 10:25:35.127 +08:00 [DBG] No client back-channel logout URLs
2019-04-13 10:25:35.129 +08:00 [INF] Successful signout callback.
2019-04-13 10:25:35.130 +08:00 [DBG] No client front-channel iframe urls
2019-04-13 10:25:35.131 +08:00 [DBG] No client back-channel iframe urls
2019-04-13 10:25:43.602 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:25:43.606 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:25:43.615 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:25:43.618 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:25:43.620 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:25:43.622 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:25:43.625 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:25:43.631 +08:00 [DBG] Start discovery request
2019-04-13 10:25:43.639 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:25:43.882 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 10:25:43.889 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 10:25:43.891 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 10:25:43.898 +08:00 [DBG] Start authorize request
2019-04-13 10:25:43.900 +08:00 [DBG] No user present in authorize request
2019-04-13 10:25:43.901 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:25:43.913 +08:00 [DBG] js found in database: true
2019-04-13 10:25:43.914 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:25:43.919 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:25:43.928 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:25:43.931 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:25:43.936 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:25:43.937 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:25:43.941 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"aa8ef94123c447b79d93dc358c6e52c6","UiLocales":null,"Nonce":"a16a65920e9b4d609e8fc31c887220d7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"aa8ef94123c447b79d93dc358c6e52c6","nonce":"a16a65920e9b4d609e8fc31c887220d7"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 10:25:43.958 +08:00 [INF] Showing login: User is not authenticated
2019-04-13 10:25:43.963 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:25:43.969 +08:00 [DBG] js found in database: true
2019-04-13 10:25:43.970 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:25:43.975 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:25:43.980 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:25:43.982 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:25:43.987 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:25:43.988 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:25:43.997 +08:00 [DBG] js found in database: true
2019-04-13 10:25:43.998 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:25:50.133 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:25:50.139 +08:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-13 10:25:50.142 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:25:50.147 +08:00 [DBG] js found in database: true
2019-04-13 10:25:50.148 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:25:50.151 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:25:50.155 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:25:50.158 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:25:50.162 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:25:50.163 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:25:50.185 +08:00 [DBG] Augmenting SignInContext
2019-04-13 10:25:50.187 +08:00 [DBG] Adding idp claim with value: local
2019-04-13 10:25:50.191 +08:00 [DBG] Adding amr claim with value: pwd
2019-04-13 10:25:50.192 +08:00 [DBG] Adding auth_time claim with value: 1555122350
2019-04-13 10:25:50.194 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-13 10:25:50.197 +08:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"admin","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLLVM58EGCS3:00000009","TimeStamp":"2019-04-13T02:25:50.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-13 10:25:50.224 +08:00 [DBG] js found in database: true
2019-04-13 10:25:50.224 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:25:50.235 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-13 10:25:50.237 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-13 10:25:50.242 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-13 10:25:50.244 +08:00 [DBG] Start authorize callback request
2019-04-13 10:25:50.246 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 10:25:50.251 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:25:50.259 +08:00 [DBG] js found in database: true
2019-04-13 10:25:50.260 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:25:50.265 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:25:50.270 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:25:50.274 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:25:50.279 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:25:50.281 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:25:50.285 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"aa8ef94123c447b79d93dc358c6e52c6","UiLocales":null,"Nonce":"a16a65920e9b4d609e8fc31c887220d7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"0449b31535d1f8e1d4c03aba40d4d22d","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"aa8ef94123c447b79d93dc358c6e52c6","nonce":"a16a65920e9b4d609e8fc31c887220d7"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 10:25:50.341 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-13 10:25:50.343 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-13 10:25:50.349 +08:00 [DBG] Creating Implicit Flow response.
2019-04-13 10:25:50.350 +08:00 [DBG] Getting claims for access token for client: js
2019-04-13 10:25:50.351 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 10:25:50.362 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-13 10:25:50.363 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-13 10:25:50.372 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Q1eQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Wr2A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGCS3:0000000A","TimeStamp":"2019-04-13T02:25:50.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-13 10:25:50.381 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"aa8ef94123c447b79d93dc358c6e52c6","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-13 10:25:50.384 +08:00 [DBG] Augmenting SignInContext
2019-04-13 10:25:50.385 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-13 10:25:50.615 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:25:50.620 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:25:50.632 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:25:50.634 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:25:50.635 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:25:50.637 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:25:50.645 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:25:50.648 +08:00 [DBG] Start discovery request
2019-04-13 10:25:50.656 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:25:50.678 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:25:50.682 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-13 10:25:50.691 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:25:50.693 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:25:50.694 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 10:25:50.696 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 10:25:50.698 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 10:25:50.700 +08:00 [DBG] Start key discovery request
2019-04-13 10:25:50.743 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:25:50.749 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:25:50.752 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-13 10:25:50.758 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:25:50.759 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:25:50.760 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-13 10:25:50.762 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-13 10:25:50.764 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-13 10:25:50.771 +08:00 [DBG] Start userinfo request
2019-04-13 10:25:50.772 +08:00 [DBG] Bearer token found in header
2019-04-13 10:25:50.780 +08:00 [DBG] js found in database: true
2019-04-13 10:25:50.780 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:25:50.786 +08:00 [DBG] js found in database: true
2019-04-13 10:25:50.786 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:25:50.791 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-13 10:25:50.792 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555122350,"exp":1555125950,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555122350,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-13 10:25:50.802 +08:00 [DBG] Creating userinfo response
2019-04-13 10:25:50.803 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-13 10:25:50.804 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-13 10:25:50.808 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:25:50.814 +08:00 [DBG] Requested claim types: a b
2019-04-13 10:25:50.815 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-13 10:25:50.818 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-13 10:25:50.825 +08:00 [INF] Profile service returned the following claim types: 
2019-04-13 10:25:50.827 +08:00 [DBG] End userinfo request
2019-04-13 10:25:50.845 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:25:50.847 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:25:50.850 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:25:50.851 +08:00 [DBG] Rendering check session result
2019-04-13 10:25:51.714 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:25:51.720 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:25:51.726 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:25:51.727 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:25:51.728 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:25:51.731 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:25:51.734 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:25:51.736 +08:00 [DBG] Start discovery request
2019-04-13 10:25:51.742 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:25:51.747 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:25:51.750 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:25:51.760 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:25:51.761 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:25:51.762 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:25:51.763 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:25:51.765 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:25:51.770 +08:00 [DBG] Start discovery request
2019-04-13 10:25:51.775 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:25:52.069 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:25:52.072 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:25:52.074 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:25:52.076 +08:00 [DBG] Rendering check session result
2019-04-13 10:25:52.079 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:25:52.081 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:25:52.087 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:25:52.089 +08:00 [DBG] Rendering check session result
2019-04-13 10:26:16.690 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:26:16.694 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:26:16.699 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:26:16.704 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:26:16.707 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:26:16.710 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:26:16.712 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:26:16.718 +08:00 [DBG] Start discovery request
2019-04-13 10:26:16.728 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:26:16.741 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:26:16.742 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:26:16.745 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:26:16.750 +08:00 [DBG] Rendering check session result
2019-04-13 10:26:48.536 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:26:48.540 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:26:48.546 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:26:48.552 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:26:48.553 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:26:48.556 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:26:48.559 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:26:48.565 +08:00 [DBG] Start discovery request
2019-04-13 10:26:48.573 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:26:48.580 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:26:48.581 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:26:48.585 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:26:48.587 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:26:48.588 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:26:48.589 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:26:48.590 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:26:48.592 +08:00 [DBG] Start discovery request
2019-04-13 10:26:48.597 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:26:48.795 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:26:48.801 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:26:48.804 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:26:48.806 +08:00 [DBG] Rendering check session result
2019-04-13 10:26:48.812 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:26:48.814 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:26:48.816 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:26:48.818 +08:00 [DBG] Rendering check session result
2019-04-13 10:26:51.468 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:26:51.471 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:26:51.474 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:26:51.475 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:26:51.476 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:26:51.477 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:26:51.478 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:26:51.482 +08:00 [DBG] Start discovery request
2019-04-13 10:26:51.488 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:26:51.491 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:26:51.493 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:26:51.496 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:26:51.497 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:26:51.498 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:26:51.499 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:26:51.504 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:26:51.506 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:26:51.507 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:26:51.509 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:26:51.510 +08:00 [DBG] Rendering check session result
2019-04-13 10:26:51.513 +08:00 [DBG] Start discovery request
2019-04-13 10:26:51.521 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:26:51.534 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-13 10:26:51.538 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-13 10:26:51.541 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-13 10:26:51.542 +08:00 [DBG] Processing signout request for a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 10:26:51.544 +08:00 [DBG] Start end session request validation
2019-04-13 10:26:51.549 +08:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","PostLogOutUri":null,"State":null,"Raw":{"post_logout_redirect_uri":"http://localhost:5000"},"$type":"EndSessionRequestValidationLog"}
2019-04-13 10:26:51.553 +08:00 [DBG] Success validating end session request from null
2019-04-13 10:26:52.800 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:26:52.805 +08:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-13 10:26:52.808 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-13 10:26:52.810 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-13 10:26:52.813 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-13 10:26:52.815 +08:00 [INF] {"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLLVM58EGCS3:00000011","TimeStamp":"2019-04-13T02:26:52.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-13 10:26:52.839 +08:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-13 10:26:52.841 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-13 10:26:52.846 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-13 10:26:52.848 +08:00 [DBG] Processing signout callback request
2019-04-13 10:26:52.854 +08:00 [DBG] js found in database: true
2019-04-13 10:26:52.855 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:26:52.859 +08:00 [DBG] No client front-channel logout URLs
2019-04-13 10:26:52.861 +08:00 [DBG] No client back-channel logout URLs
2019-04-13 10:26:52.861 +08:00 [INF] Successful signout callback.
2019-04-13 10:26:52.864 +08:00 [DBG] No client front-channel iframe urls
2019-04-13 10:26:52.865 +08:00 [DBG] No client back-channel iframe urls
2019-04-13 10:26:58.816 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:26:58.822 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:26:58.827 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:26:58.831 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:26:58.832 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:26:58.836 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:26:58.838 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:26:58.845 +08:00 [DBG] Start discovery request
2019-04-13 10:26:58.851 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:26:59.103 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 10:26:59.111 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 10:26:59.114 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 10:26:59.118 +08:00 [DBG] Start authorize request
2019-04-13 10:26:59.119 +08:00 [DBG] No user present in authorize request
2019-04-13 10:26:59.121 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:26:59.128 +08:00 [DBG] js found in database: true
2019-04-13 10:26:59.129 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:26:59.144 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:26:59.265 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:26:59.276 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:26:59.285 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:26:59.287 +08:00 [ERR] Requested scope not allowed: role
2019-04-13 10:26:59.292 +08:00 [ERR] Request validation failed
2019-04-13 10:26:59.292 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"8abaab6a236f4c1b90358289ee800f8e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"8abaab6a236f4c1b90358289ee800f8e","nonce":"c8884cd0fb3b4b209fca4c88c85e369f"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 10:26:59.319 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid profile role api1","GrantType":"implicit","Error":"unauthorized_client","ErrorDescription":"Invalid scope for client","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLLVM58EGCS3:00000013","TimeStamp":"2019-04-13T02:26:59.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-04-13 10:31:53.635 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:31:53.642 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:31:53.651 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:31:53.656 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:31:53.658 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:31:53.664 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:31:53.666 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:31:53.669 +08:00 [DBG] Start discovery request
2019-04-13 10:31:53.676 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:31:53.918 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 10:31:53.928 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 10:31:53.938 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 10:31:53.943 +08:00 [DBG] Start authorize request
2019-04-13 10:31:53.946 +08:00 [DBG] No user present in authorize request
2019-04-13 10:31:53.947 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:31:53.953 +08:00 [DBG] js found in database: true
2019-04-13 10:31:53.955 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:31:53.964 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:31:53.973 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:31:53.977 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:31:53.981 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:31:53.983 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:31:53.990 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"6b6f0ace1ef646c4af86a4adb0bcb738","UiLocales":null,"Nonce":"aa9fcbfe57864d988e4e5cb45a6680c6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"6b6f0ace1ef646c4af86a4adb0bcb738","nonce":"aa9fcbfe57864d988e4e5cb45a6680c6"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 10:31:54.009 +08:00 [INF] Showing login: User is not authenticated
2019-04-13 10:31:54.016 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:31:54.022 +08:00 [DBG] js found in database: true
2019-04-13 10:31:54.023 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:31:54.028 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:31:54.032 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:31:54.035 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:31:54.041 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:31:54.043 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:31:54.049 +08:00 [DBG] js found in database: true
2019-04-13 10:31:54.051 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:32:03.388 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:32:03.391 +08:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-13 10:32:03.396 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:32:03.401 +08:00 [DBG] js found in database: true
2019-04-13 10:32:03.402 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:32:03.410 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:03.422 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:32:03.426 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:03.432 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:32:03.434 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:32:03.455 +08:00 [DBG] Augmenting SignInContext
2019-04-13 10:32:03.456 +08:00 [DBG] Adding idp claim with value: local
2019-04-13 10:32:03.459 +08:00 [DBG] Adding amr claim with value: pwd
2019-04-13 10:32:03.462 +08:00 [DBG] Adding auth_time claim with value: 1555122723
2019-04-13 10:32:03.464 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-13 10:32:03.471 +08:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"admin","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLLVM58EGCS6:00000003","TimeStamp":"2019-04-13T02:32:03.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-13 10:32:03.483 +08:00 [DBG] js found in database: true
2019-04-13 10:32:03.485 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:32:03.498 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-13 10:32:03.500 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-13 10:32:03.508 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-13 10:32:03.512 +08:00 [DBG] Start authorize callback request
2019-04-13 10:32:03.514 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 10:32:03.516 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:32:03.527 +08:00 [DBG] js found in database: true
2019-04-13 10:32:03.527 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:32:03.534 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:03.539 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:32:03.543 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:03.552 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:32:03.555 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:32:03.559 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"6b6f0ace1ef646c4af86a4adb0bcb738","UiLocales":null,"Nonce":"aa9fcbfe57864d988e4e5cb45a6680c6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fd6405d58051bd1a14cbec77bb336e35","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"6b6f0ace1ef646c4af86a4adb0bcb738","nonce":"aa9fcbfe57864d988e4e5cb45a6680c6"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 10:32:03.589 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-13 10:32:03.594 +08:00 [DBG] Consent found in consent store is different than current request, consent is required
2019-04-13 10:32:03.596 +08:00 [INF] Showing consent: User has not yet consented
2019-04-13 10:32:03.634 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:32:03.642 +08:00 [DBG] js found in database: true
2019-04-13 10:32:03.646 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:32:03.655 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:03.661 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:32:03.665 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:03.670 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:32:03.676 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:32:03.682 +08:00 [DBG] js found in database: true
2019-04-13 10:32:03.683 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:32:03.692 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:03.701 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:32:03.906 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:32:07.505 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:32:07.507 +08:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-13 10:32:07.529 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:32:07.536 +08:00 [DBG] js found in database: true
2019-04-13 10:32:07.537 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:32:07.548 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:07.554 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:32:07.558 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:07.564 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:32:07.565 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:32:07.573 +08:00 [INF] {"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RequestedScopes":["openid","profile","role","api1"],"GrantedScopes":["openid","profile","role","api1"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLLVM58EGCS6:00000007","TimeStamp":"2019-04-13T02:32:07.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-04-13 10:32:07.615 +08:00 [DBG] js found in database: true
2019-04-13 10:32:07.616 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:32:07.681 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-13 10:32:07.685 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-13 10:32:07.695 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-13 10:32:07.701 +08:00 [DBG] Start authorize callback request
2019-04-13 10:32:07.707 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 10:32:07.711 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 10:32:07.719 +08:00 [DBG] js found in database: true
2019-04-13 10:32:07.721 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:32:07.730 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:07.738 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:32:07.744 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:07.749 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 10:32:07.752 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 10:32:07.756 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"6b6f0ace1ef646c4af86a4adb0bcb738","UiLocales":null,"Nonce":"aa9fcbfe57864d988e4e5cb45a6680c6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fd6405d58051bd1a14cbec77bb336e35","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"6b6f0ace1ef646c4af86a4adb0bcb738","nonce":"aa9fcbfe57864d988e4e5cb45a6680c6"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 10:32:07.777 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-13 10:32:07.779 +08:00 [DBG] Consent found in consent store is different than current request, consent is required
2019-04-13 10:32:07.799 +08:00 [INF] User consented to scopes: ["openid","profile","role","api1"]
2019-04-13 10:32:07.800 +08:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","role","api1"]
2019-04-13 10:32:07.810 +08:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 10:32:07.840 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database
2019-04-13 10:32:08.052 +08:00 [DBG] Creating Implicit Flow response.
2019-04-13 10:32:08.053 +08:00 [DBG] Getting claims for access token for client: js
2019-04-13 10:32:08.059 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 10:32:08.086 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-13 10:32:08.090 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-13 10:32:08.108 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile role api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****0yrg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gF9g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGCS6:00000009","TimeStamp":"2019-04-13T02:32:08.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-13 10:32:08.138 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"6b6f0ace1ef646c4af86a4adb0bcb738","Scope":"openid profile role api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-13 10:32:08.150 +08:00 [DBG] Augmenting SignInContext
2019-04-13 10:32:08.151 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-13 10:32:08.695 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:32:08.700 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:32:08.704 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:32:08.709 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:32:08.711 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:32:08.713 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:32:08.717 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:32:08.721 +08:00 [DBG] Start discovery request
2019-04-13 10:32:08.728 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:32:08.757 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:32:08.762 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-13 10:32:08.767 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:32:08.770 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:32:08.775 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 10:32:08.776 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 10:32:08.783 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 10:32:08.788 +08:00 [DBG] Start key discovery request
2019-04-13 10:32:08.836 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:32:08.843 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:32:08.845 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-13 10:32:08.849 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:32:08.850 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:32:08.852 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-13 10:32:08.854 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-13 10:32:08.855 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-13 10:32:08.857 +08:00 [DBG] Start userinfo request
2019-04-13 10:32:08.859 +08:00 [DBG] Bearer token found in header
2019-04-13 10:32:08.870 +08:00 [DBG] js found in database: true
2019-04-13 10:32:08.871 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:32:08.878 +08:00 [DBG] js found in database: true
2019-04-13 10:32:08.878 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 10:32:08.883 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-13 10:32:08.884 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555122728,"exp":1555126328,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555122723,"idp":"local","scope":["openid","profile","role","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-13 10:32:08.893 +08:00 [DBG] Creating userinfo response
2019-04-13 10:32:08.894 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 10:32:08.897 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 10:32:08.900 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:08.905 +08:00 [DBG] Requested claim types: a b name rolel
2019-04-13 10:32:08.906 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 10:32:08.909 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 10:32:08.914 +08:00 [INF] Profile service returned the following claim types: name
2019-04-13 10:32:08.915 +08:00 [DBG] End userinfo request
2019-04-13 10:32:08.932 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:32:08.934 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:32:08.944 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:32:08.948 +08:00 [DBG] Rendering check session result
2019-04-13 10:32:09.923 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:32:09.931 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:32:09.938 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:32:09.942 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:32:09.944 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:32:09.946 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:32:09.948 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:32:09.957 +08:00 [DBG] Start discovery request
2019-04-13 10:32:09.966 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:32:09.970 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:32:09.972 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:32:09.975 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:32:09.977 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:32:09.979 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:32:09.980 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:32:09.981 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:32:09.985 +08:00 [DBG] Start discovery request
2019-04-13 10:32:09.992 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:32:10.182 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:32:10.187 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:32:10.191 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:32:10.194 +08:00 [DBG] Rendering check session result
2019-04-13 10:32:10.198 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:32:10.202 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:32:10.207 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:32:10.214 +08:00 [DBG] Rendering check session result
2019-04-13 10:33:35.589 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:33:35.596 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:33:35.600 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:33:35.603 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:33:35.605 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:33:35.610 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:33:35.615 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:33:35.620 +08:00 [DBG] Start discovery request
2019-04-13 10:33:35.626 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:33:35.633 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 10:33:35.635 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 10:33:35.641 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 10:33:35.642 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 10:33:35.644 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:33:35.644 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:33:35.647 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:33:35.648 +08:00 [DBG] Start discovery request
2019-04-13 10:33:35.651 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:33:35.916 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:33:35.921 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:33:35.921 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:33:35.922 +08:00 [DBG] Rendering check session result
2019-04-13 10:33:35.925 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 10:33:35.925 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 10:33:35.926 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 10:33:35.926 +08:00 [DBG] Rendering check session result
2019-04-13 10:33:46.402 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:33:46.406 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:33:46.406 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:33:46.407 +08:00 [DBG] Start discovery request
2019-04-13 10:33:46.412 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:33:46.533 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 10:33:46.537 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 10:33:46.538 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 10:33:46.539 +08:00 [DBG] Start key discovery request
2019-04-13 10:34:14.418 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:34:14.421 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:34:14.422 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:34:14.423 +08:00 [DBG] Start discovery request
2019-04-13 10:34:14.429 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:34:14.550 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 10:34:14.553 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 10:34:14.554 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 10:34:14.555 +08:00 [DBG] Start key discovery request
2019-04-13 10:35:17.582 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:35:17.585 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:35:17.586 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:35:17.586 +08:00 [DBG] Start discovery request
2019-04-13 10:35:17.591 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:35:17.703 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 10:35:17.709 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 10:35:17.710 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 10:35:17.711 +08:00 [DBG] Start key discovery request
2019-04-13 10:42:16.173 +08:00 [INF] Removing 0 grants
2019-04-13 10:44:26.798 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:44:26.800 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:44:26.800 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:44:26.801 +08:00 [DBG] Start discovery request
2019-04-13 10:44:26.808 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:44:26.931 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 10:44:26.934 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 10:44:26.935 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 10:44:26.936 +08:00 [DBG] Start key discovery request
2019-04-13 10:48:35.387 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:48:35.389 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:48:35.390 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:48:35.391 +08:00 [DBG] Start discovery request
2019-04-13 10:48:35.401 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:48:35.520 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 10:48:35.522 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 10:48:35.523 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 10:48:35.524 +08:00 [DBG] Start key discovery request
2019-04-13 10:55:24.724 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:55:24.727 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:55:24.728 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:55:24.729 +08:00 [DBG] Start discovery request
2019-04-13 10:55:24.741 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:55:24.845 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 10:55:24.847 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 10:55:24.848 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 10:55:24.849 +08:00 [DBG] Start key discovery request
2019-04-13 10:59:16.852 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 10:59:16.855 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 10:59:16.856 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 10:59:16.857 +08:00 [DBG] Start discovery request
2019-04-13 10:59:16.864 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 10:59:16.973 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 10:59:16.976 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 10:59:16.976 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 10:59:16.977 +08:00 [DBG] Start key discovery request
2019-04-13 11:08:48.715 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:08:48.718 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:08:48.719 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:08:48.720 +08:00 [DBG] Start discovery request
2019-04-13 11:08:48.735 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:08:48.851 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 11:08:48.854 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 11:08:48.855 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 11:08:48.857 +08:00 [DBG] Start key discovery request
2019-04-13 11:15:02.081 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:15:02.083 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:15:02.084 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:15:02.085 +08:00 [DBG] Start discovery request
2019-04-13 11:15:02.089 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:15:02.198 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 11:15:02.199 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 11:15:02.200 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 11:15:02.201 +08:00 [DBG] Start key discovery request
2019-04-13 11:15:49.787 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:15:49.788 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:15:49.789 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:15:49.789 +08:00 [DBG] Start discovery request
2019-04-13 11:15:49.797 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:15:49.908 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 11:15:49.910 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 11:15:49.911 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 11:15:49.912 +08:00 [DBG] Start key discovery request
2019-04-13 11:18:17.825 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:18:17.826 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 11:18:17.828 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 11:18:17.829 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 11:18:17.829 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:18:17.830 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:18:17.830 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:18:17.831 +08:00 [DBG] Start discovery request
2019-04-13 11:18:17.839 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:18:17.843 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:18:17.843 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 11:18:17.845 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 11:18:17.845 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 11:18:17.846 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:18:17.846 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:18:17.847 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:18:17.847 +08:00 [DBG] Start discovery request
2019-04-13 11:18:17.851 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:18:17.858 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 11:18:17.859 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 11:18:17.860 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 11:18:17.860 +08:00 [DBG] Rendering check session result
2019-04-13 11:18:17.864 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-13 11:18:17.865 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-13 11:18:17.865 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-13 11:18:17.866 +08:00 [DBG] Processing signout request for a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 11:18:17.866 +08:00 [DBG] Start end session request validation
2019-04-13 11:18:17.867 +08:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","PostLogOutUri":null,"State":null,"Raw":{"post_logout_redirect_uri":"http://localhost:5000"},"$type":"EndSessionRequestValidationLog"}
2019-04-13 11:18:17.869 +08:00 [DBG] Success validating end session request from null
2019-04-13 11:18:19.036 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:18:19.037 +08:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-13 11:18:19.039 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-13 11:18:19.040 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-13 11:18:19.040 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-13 11:18:19.041 +08:00 [INF] {"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLLVM58EGCSN:00000004","TimeStamp":"2019-04-13T03:18:19.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-13 11:18:19.069 +08:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-13 11:18:19.070 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-13 11:18:19.070 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-13 11:18:19.071 +08:00 [DBG] Processing signout callback request
2019-04-13 11:18:19.077 +08:00 [DBG] js found in database: true
2019-04-13 11:18:19.077 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 11:18:19.078 +08:00 [DBG] No client front-channel logout URLs
2019-04-13 11:18:19.079 +08:00 [DBG] No client back-channel logout URLs
2019-04-13 11:18:19.080 +08:00 [INF] Successful signout callback.
2019-04-13 11:18:19.080 +08:00 [DBG] No client front-channel iframe urls
2019-04-13 11:18:19.080 +08:00 [DBG] No client back-channel iframe urls
2019-04-13 11:18:26.149 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:18:26.150 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 11:18:26.151 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 11:18:26.152 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 11:18:26.153 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:18:26.154 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:18:26.155 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:18:26.156 +08:00 [DBG] Start discovery request
2019-04-13 11:18:26.160 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:18:26.433 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 11:18:26.436 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 11:18:26.437 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 11:18:26.439 +08:00 [DBG] Start authorize request
2019-04-13 11:18:26.440 +08:00 [DBG] No user present in authorize request
2019-04-13 11:18:26.440 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 11:18:26.445 +08:00 [DBG] js found in database: true
2019-04-13 11:18:26.446 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 11:18:26.448 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 11:18:26.472 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 11:18:26.475 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 11:18:26.479 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 11:18:26.480 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 11:18:26.481 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"5a49b2a5fc9a4501a04ecc65cf8aadef","UiLocales":null,"Nonce":"d7685ac166c341d8bc810125c53a215e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"5a49b2a5fc9a4501a04ecc65cf8aadef","nonce":"d7685ac166c341d8bc810125c53a215e"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 11:18:26.493 +08:00 [INF] Showing login: User is not authenticated
2019-04-13 11:18:26.499 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 11:18:26.504 +08:00 [DBG] js found in database: true
2019-04-13 11:18:26.505 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 11:18:26.507 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 11:18:26.511 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 11:18:26.513 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 11:18:26.516 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 11:18:26.518 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 11:18:26.523 +08:00 [DBG] js found in database: true
2019-04-13 11:18:26.523 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 11:18:34.398 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:18:34.399 +08:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-13 11:18:34.401 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 11:18:34.405 +08:00 [DBG] js found in database: true
2019-04-13 11:18:34.406 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 11:18:34.408 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 11:18:34.412 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 11:18:34.414 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 11:18:34.417 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 11:18:34.419 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 11:18:34.437 +08:00 [DBG] Augmenting SignInContext
2019-04-13 11:18:34.437 +08:00 [DBG] Adding idp claim with value: local
2019-04-13 11:18:34.438 +08:00 [DBG] Adding amr claim with value: pwd
2019-04-13 11:18:34.438 +08:00 [DBG] Adding auth_time claim with value: 1555125514
2019-04-13 11:18:34.439 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-13 11:18:34.440 +08:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"admin","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLLVM58EGCSN:00000008","TimeStamp":"2019-04-13T03:18:34.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-13 11:18:34.448 +08:00 [DBG] js found in database: true
2019-04-13 11:18:34.448 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 11:18:34.460 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-13 11:18:34.461 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-13 11:18:34.461 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-13 11:18:34.462 +08:00 [DBG] Start authorize callback request
2019-04-13 11:18:34.462 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 11:18:34.463 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 11:18:34.469 +08:00 [DBG] js found in database: true
2019-04-13 11:18:34.469 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 11:18:34.472 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 11:18:34.476 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 11:18:34.478 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 11:18:34.482 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 11:18:34.483 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 11:18:34.484 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"5a49b2a5fc9a4501a04ecc65cf8aadef","UiLocales":null,"Nonce":"d7685ac166c341d8bc810125c53a215e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"196427dba4d6029227d4647277c658db","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"5a49b2a5fc9a4501a04ecc65cf8aadef","nonce":"d7685ac166c341d8bc810125c53a215e"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 11:18:34.493 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-13 11:18:34.494 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-13 11:18:34.495 +08:00 [DBG] Creating Implicit Flow response.
2019-04-13 11:18:34.495 +08:00 [DBG] Getting claims for access token for client: js
2019-04-13 11:18:34.496 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 11:18:34.508 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-13 11:18:34.508 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-13 11:18:34.515 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile role api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****bfzg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****z2cg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGCSN:00000009","TimeStamp":"2019-04-13T03:18:34.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-13 11:18:34.522 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"5a49b2a5fc9a4501a04ecc65cf8aadef","Scope":"openid profile role api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-13 11:18:34.524 +08:00 [DBG] Augmenting SignInContext
2019-04-13 11:18:34.525 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-13 11:18:34.747 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:18:34.750 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 11:18:34.752 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 11:18:34.753 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 11:18:34.754 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:18:34.755 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:18:34.756 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:18:34.757 +08:00 [DBG] Start discovery request
2019-04-13 11:18:34.760 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:18:34.813 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:18:34.814 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-13 11:18:34.818 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 11:18:34.818 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 11:18:34.819 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 11:18:34.820 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 11:18:34.821 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 11:18:34.822 +08:00 [DBG] Start key discovery request
2019-04-13 11:18:34.861 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:18:34.866 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:18:34.867 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-13 11:18:34.869 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 11:18:34.870 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 11:18:34.871 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-13 11:18:34.872 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-13 11:18:34.873 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-13 11:18:34.875 +08:00 [DBG] Start userinfo request
2019-04-13 11:18:34.876 +08:00 [DBG] Bearer token found in header
2019-04-13 11:18:34.884 +08:00 [DBG] js found in database: true
2019-04-13 11:18:34.885 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 11:18:34.888 +08:00 [DBG] js found in database: true
2019-04-13 11:18:34.889 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 11:18:34.893 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-13 11:18:34.894 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555125514,"exp":1555129114,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555125514,"idp":"local","role":"admin","scope":["openid","profile","role","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-13 11:18:34.897 +08:00 [DBG] Creating userinfo response
2019-04-13 11:18:34.898 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 11:18:34.898 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 11:18:34.900 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 11:18:34.901 +08:00 [DBG] Requested claim types: a b name rolel
2019-04-13 11:18:34.902 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 11:18:34.904 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 11:18:34.908 +08:00 [INF] Profile service returned the following claim types: name
2019-04-13 11:18:34.909 +08:00 [DBG] End userinfo request
2019-04-13 11:18:34.932 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 11:18:34.933 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 11:18:34.935 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 11:18:34.936 +08:00 [DBG] Rendering check session result
2019-04-13 11:18:35.850 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:18:35.851 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 11:18:35.854 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 11:18:35.855 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 11:18:35.855 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:18:35.856 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:18:35.858 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:18:35.860 +08:00 [DBG] Start discovery request
2019-04-13 11:18:35.866 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:18:35.870 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:18:35.873 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 11:18:35.875 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 11:18:35.876 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 11:18:35.877 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:18:35.877 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:18:35.878 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:18:35.879 +08:00 [DBG] Start discovery request
2019-04-13 11:18:35.884 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:18:36.103 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 11:18:36.103 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 11:18:36.104 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 11:18:36.105 +08:00 [DBG] Rendering check session result
2019-04-13 11:18:36.107 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 11:18:36.109 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 11:18:36.110 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 11:18:36.111 +08:00 [DBG] Rendering check session result
2019-04-13 11:21:28.455 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:21:28.458 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:21:28.459 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:21:28.460 +08:00 [DBG] Start discovery request
2019-04-13 11:21:28.467 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:21:28.572 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 11:21:28.576 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 11:21:28.577 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 11:21:28.578 +08:00 [DBG] Start key discovery request
2019-04-13 11:24:34.696 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:24:34.698 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:24:34.699 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:24:34.699 +08:00 [DBG] Start discovery request
2019-04-13 11:24:34.706 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:24:34.815 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 11:24:34.818 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 11:24:34.820 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 11:24:34.820 +08:00 [DBG] Start key discovery request
2019-04-13 11:42:16.190 +08:00 [INF] Removing 0 grants
2019-04-13 11:46:42.956 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:46:42.958 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 11:46:42.960 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 11:46:42.961 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 11:46:42.962 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:46:42.962 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:46:42.963 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:46:42.964 +08:00 [DBG] Start discovery request
2019-04-13 11:46:42.968 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:46:42.973 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:46:42.974 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 11:46:42.976 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 11:46:42.977 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 11:46:42.977 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:46:42.978 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:46:42.981 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:46:42.981 +08:00 [DBG] Start discovery request
2019-04-13 11:46:42.986 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:46:43.302 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 11:46:43.305 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 11:46:43.306 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 11:46:43.307 +08:00 [DBG] Rendering check session result
2019-04-13 11:46:43.311 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 11:46:43.312 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 11:46:43.317 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 11:46:43.318 +08:00 [DBG] Rendering check session result
2019-04-13 11:49:37.071 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:49:37.073 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:49:37.073 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:49:37.074 +08:00 [DBG] Start discovery request
2019-04-13 11:49:37.080 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:49:37.201 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 11:49:37.206 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 11:49:37.207 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 11:49:37.208 +08:00 [DBG] Start key discovery request
2019-04-13 11:54:29.607 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:54:29.614 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:54:29.615 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:54:29.616 +08:00 [DBG] Start discovery request
2019-04-13 11:54:29.620 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:54:29.724 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 11:54:29.727 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 11:54:29.729 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 11:54:29.731 +08:00 [DBG] Start key discovery request
2019-04-13 11:55:17.344 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:55:17.347 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:55:17.349 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:55:17.349 +08:00 [DBG] Start discovery request
2019-04-13 11:55:17.355 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:55:17.468 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 11:55:17.471 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 11:55:17.472 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 11:55:17.473 +08:00 [DBG] Start key discovery request
2019-04-13 11:58:56.657 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:58:56.659 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 11:58:56.665 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 11:58:56.666 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 11:58:56.667 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:58:56.668 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:58:56.674 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:58:56.675 +08:00 [DBG] Start discovery request
2019-04-13 11:58:56.680 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:58:56.684 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 11:58:56.689 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 11:58:56.691 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 11:58:56.692 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 11:58:56.692 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:58:56.693 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:58:56.694 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:58:56.695 +08:00 [DBG] Start discovery request
2019-04-13 11:58:56.700 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:58:56.917 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 11:58:56.920 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 11:58:56.922 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 11:58:56.923 +08:00 [DBG] Rendering check session result
2019-04-13 11:58:56.931 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 11:58:56.932 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 11:58:56.933 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 11:58:56.934 +08:00 [DBG] Rendering check session result
2019-04-13 11:58:57.369 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 11:58:57.372 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 11:58:57.373 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 11:58:57.374 +08:00 [DBG] Start discovery request
2019-04-13 11:58:57.378 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 11:58:57.482 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 11:58:57.484 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 11:58:57.485 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 11:58:57.486 +08:00 [DBG] Start key discovery request
2019-04-13 12:16:38.078 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:16:38.082 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:16:38.083 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:16:38.084 +08:00 [DBG] Start discovery request
2019-04-13 12:16:38.098 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:16:38.199 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 12:16:38.204 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 12:16:38.206 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 12:16:38.207 +08:00 [DBG] Start key discovery request
2019-04-13 12:18:31.737 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:18:31.738 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:18:31.739 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:18:31.740 +08:00 [DBG] Start discovery request
2019-04-13 12:18:31.750 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:18:31.858 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 12:18:31.860 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 12:18:31.861 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 12:18:31.861 +08:00 [DBG] Start key discovery request
2019-04-13 12:18:38.623 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:18:38.628 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:18:38.631 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:18:38.632 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:18:38.633 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:18:38.634 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:18:38.634 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:18:38.635 +08:00 [DBG] Start discovery request
2019-04-13 12:18:38.641 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:18:38.644 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:18:38.645 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:18:38.648 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:18:38.648 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:18:38.649 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:18:38.650 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:18:38.654 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:18:38.656 +08:00 [DBG] Start discovery request
2019-04-13 12:18:38.663 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:18:38.873 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:18:38.878 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:18:38.879 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:18:38.880 +08:00 [DBG] Rendering check session result
2019-04-13 12:18:38.884 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:18:38.885 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:18:38.886 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:18:38.891 +08:00 [DBG] Rendering check session result
2019-04-13 12:36:02.320 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:36:02.323 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:36:02.331 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:36:02.334 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:36:02.335 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:36:02.336 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:36:02.337 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:36:02.337 +08:00 [DBG] Start discovery request
2019-04-13 12:36:02.344 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:36:02.349 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:36:02.350 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:36:02.353 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:36:02.353 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:36:02.354 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:36:02.356 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:36:02.362 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:36:02.363 +08:00 [DBG] Start discovery request
2019-04-13 12:36:02.370 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:36:02.670 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:36:02.672 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:36:02.672 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:36:02.673 +08:00 [DBG] Rendering check session result
2019-04-13 12:36:02.685 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:36:02.687 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:36:02.688 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:36:02.690 +08:00 [DBG] Rendering check session result
2019-04-13 12:36:03.140 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:36:03.143 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:36:03.145 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:36:03.146 +08:00 [DBG] Start discovery request
2019-04-13 12:36:03.153 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:36:03.271 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 12:36:03.272 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 12:36:03.274 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 12:36:03.274 +08:00 [DBG] Start key discovery request
2019-04-13 12:36:03.529 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 12:36:03.532 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 12:36:03.533 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 12:36:03.533 +08:00 [DBG] Start authorize request
2019-04-13 12:36:03.534 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 12:36:03.534 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 12:36:03.541 +08:00 [DBG] js found in database: true
2019-04-13 12:36:03.545 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 12:36:03.548 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 12:36:03.578 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 12:36:03.583 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 12:36:03.587 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 12:36:03.587 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 12:36:03.588 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"7c5b642d95474d5b9260cb9941d01d77","UiLocales":null,"Nonce":"c4aa3e535d0841f8a1a3754c57943ceb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"196427dba4d6029227d4647277c658db","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"7c5b642d95474d5b9260cb9941d01d77","nonce":"c4aa3e535d0841f8a1a3754c57943ceb"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 12:36:03.608 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-13 12:36:03.609 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-13 12:36:03.610 +08:00 [DBG] Creating Implicit Flow response.
2019-04-13 12:36:03.611 +08:00 [DBG] Getting claims for access token for client: js
2019-04-13 12:36:03.612 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 12:36:03.626 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-13 12:36:03.627 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-13 12:36:03.633 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile role api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****5JmA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Hv4A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGCTD:00000003","TimeStamp":"2019-04-13T04:36:03.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-13 12:36:03.642 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"7c5b642d95474d5b9260cb9941d01d77","Scope":"openid profile role api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-13 12:36:03.880 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:36:03.882 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:36:03.886 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:36:03.886 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:36:03.887 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:36:03.889 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:36:03.890 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:36:03.895 +08:00 [DBG] Start discovery request
2019-04-13 12:36:03.901 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:36:03.950 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:36:03.954 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-13 12:36:03.957 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:36:03.957 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:36:03.958 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 12:36:03.959 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 12:36:03.959 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 12:36:03.960 +08:00 [DBG] Start key discovery request
2019-04-13 12:36:03.990 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:36:03.993 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:36:03.994 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-13 12:36:03.997 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:36:03.999 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:36:04.000 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-13 12:36:04.005 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-13 12:36:04.006 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-13 12:36:04.008 +08:00 [DBG] Start userinfo request
2019-04-13 12:36:04.009 +08:00 [DBG] Bearer token found in header
2019-04-13 12:36:04.020 +08:00 [DBG] js found in database: true
2019-04-13 12:36:04.021 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 12:36:04.028 +08:00 [DBG] js found in database: true
2019-04-13 12:36:04.029 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 12:36:04.032 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-13 12:36:04.033 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555130163,"exp":1555133763,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555125514,"idp":"local","role":"admin","scope":["openid","profile","role","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-13 12:36:04.037 +08:00 [DBG] Creating userinfo response
2019-04-13 12:36:04.038 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 12:36:04.038 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 12:36:04.041 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 12:36:04.042 +08:00 [DBG] Requested claim types: a b name rolel
2019-04-13 12:36:04.043 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 12:36:04.046 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 12:36:04.054 +08:00 [INF] Profile service returned the following claim types: name
2019-04-13 12:36:04.054 +08:00 [DBG] End userinfo request
2019-04-13 12:36:04.069 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:36:04.071 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:36:04.071 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:36:04.072 +08:00 [DBG] Rendering check session result
2019-04-13 12:36:04.948 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:36:04.951 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:36:04.954 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:36:04.954 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:36:04.955 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:36:04.956 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:36:04.956 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:36:04.957 +08:00 [DBG] Start discovery request
2019-04-13 12:36:04.961 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:36:04.964 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:36:04.965 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:36:04.966 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:36:04.967 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:36:04.967 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:36:04.968 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:36:04.969 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:36:04.969 +08:00 [DBG] Start discovery request
2019-04-13 12:36:04.973 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:36:05.199 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:36:05.202 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:36:05.203 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:36:05.203 +08:00 [DBG] Rendering check session result
2019-04-13 12:36:05.206 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:36:05.207 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:36:05.208 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:36:05.209 +08:00 [DBG] Rendering check session result
2019-04-13 12:39:01.098 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:39:01.100 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:39:01.103 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:39:01.103 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:39:01.104 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:39:01.105 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:39:01.105 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:39:01.106 +08:00 [DBG] Start discovery request
2019-04-13 12:39:01.112 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:39:01.116 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:39:01.117 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:39:01.118 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:39:01.119 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:39:01.119 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:39:01.120 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:39:01.121 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:39:01.126 +08:00 [DBG] Start discovery request
2019-04-13 12:39:01.131 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:39:01.351 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:39:01.353 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:39:01.354 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:39:01.354 +08:00 [DBG] Rendering check session result
2019-04-13 12:39:01.357 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:39:01.358 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:39:01.358 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:39:01.359 +08:00 [DBG] Rendering check session result
2019-04-13 12:39:01.798 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:39:01.800 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:39:01.800 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:39:01.801 +08:00 [DBG] Start discovery request
2019-04-13 12:39:01.804 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:39:01.918 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 12:39:01.923 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 12:39:01.925 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 12:39:01.926 +08:00 [DBG] Start key discovery request
2019-04-13 12:40:17.054 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:40:17.057 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:40:17.058 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:40:17.060 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:40:17.060 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:40:17.062 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:40:17.062 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:40:17.063 +08:00 [DBG] Start discovery request
2019-04-13 12:40:17.068 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:40:17.072 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:40:17.073 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:40:17.075 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:40:17.077 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:40:17.078 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:40:17.084 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:40:17.084 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:40:17.085 +08:00 [DBG] Start discovery request
2019-04-13 12:40:17.089 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:40:17.303 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:40:17.306 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:40:17.306 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:40:17.307 +08:00 [DBG] Rendering check session result
2019-04-13 12:40:17.309 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:40:17.310 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:40:17.311 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:40:17.312 +08:00 [DBG] Rendering check session result
2019-04-13 12:40:17.752 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:40:17.754 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:40:17.754 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:40:17.755 +08:00 [DBG] Start discovery request
2019-04-13 12:40:17.760 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:40:17.865 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 12:40:17.868 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 12:40:17.869 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 12:40:17.869 +08:00 [DBG] Start key discovery request
2019-04-13 12:40:34.093 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:40:34.095 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:40:34.100 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:40:34.100 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:40:34.101 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:40:34.102 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:40:34.102 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:40:34.103 +08:00 [DBG] Start discovery request
2019-04-13 12:40:34.107 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:40:34.113 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:40:34.114 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:40:34.115 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:40:34.116 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:40:34.116 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:40:34.117 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:40:34.118 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:40:34.118 +08:00 [DBG] Start discovery request
2019-04-13 12:40:34.123 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:40:34.336 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:40:34.338 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:40:34.339 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:40:34.340 +08:00 [DBG] Rendering check session result
2019-04-13 12:40:34.344 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:40:34.344 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:40:34.345 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:40:34.345 +08:00 [DBG] Rendering check session result
2019-04-13 12:42:16.205 +08:00 [INF] Removing 0 grants
2019-04-13 12:43:07.532 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:43:07.535 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:43:07.537 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:43:07.538 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:43:07.539 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:43:07.539 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:43:07.540 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:43:07.540 +08:00 [DBG] Start discovery request
2019-04-13 12:43:07.546 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:43:07.551 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:43:07.552 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:43:07.553 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:43:07.554 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:43:07.555 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:43:07.556 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:43:07.556 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:43:07.560 +08:00 [DBG] Start discovery request
2019-04-13 12:43:07.566 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:43:07.788 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:43:07.790 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:43:07.791 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:43:07.792 +08:00 [DBG] Rendering check session result
2019-04-13 12:43:07.795 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:43:07.796 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:43:07.797 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:43:07.798 +08:00 [DBG] Rendering check session result
2019-04-13 12:43:18.888 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:43:18.890 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:43:18.894 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:43:18.895 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:43:18.896 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:43:18.896 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:43:18.897 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:43:18.898 +08:00 [DBG] Start discovery request
2019-04-13 12:43:18.903 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:43:18.906 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:43:18.907 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:43:18.908 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:43:18.909 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:43:18.909 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:43:18.910 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:43:18.910 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:43:18.911 +08:00 [DBG] Start discovery request
2019-04-13 12:43:18.915 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:43:19.142 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:43:19.146 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:43:19.147 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:43:19.148 +08:00 [DBG] Rendering check session result
2019-04-13 12:43:19.151 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:43:19.152 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:43:19.153 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:43:19.153 +08:00 [DBG] Rendering check session result
2019-04-13 12:43:56.391 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:43:56.396 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:43:56.399 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:43:56.399 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:43:56.400 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:43:56.400 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:43:56.401 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:43:56.402 +08:00 [DBG] Start discovery request
2019-04-13 12:43:56.407 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:43:56.409 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:43:56.410 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:43:56.412 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:43:56.413 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:43:56.414 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:43:56.415 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:43:56.418 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:43:56.420 +08:00 [DBG] Start discovery request
2019-04-13 12:43:56.425 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:43:56.632 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:43:56.634 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:43:56.635 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:43:56.635 +08:00 [DBG] Rendering check session result
2019-04-13 12:43:56.638 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:43:56.639 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:43:56.640 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:43:56.641 +08:00 [DBG] Rendering check session result
2019-04-13 12:44:27.967 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:44:27.972 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:44:27.975 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:44:27.976 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:44:27.977 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:44:27.978 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:44:27.979 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:44:27.980 +08:00 [DBG] Start discovery request
2019-04-13 12:44:27.991 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:44:27.995 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:44:27.997 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:44:28.000 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:44:28.000 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:44:28.001 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:44:28.002 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:44:28.002 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:44:28.003 +08:00 [DBG] Start discovery request
2019-04-13 12:44:28.008 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:44:28.212 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:44:28.214 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:44:28.216 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:44:28.217 +08:00 [DBG] Rendering check session result
2019-04-13 12:44:28.221 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:44:28.222 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:44:28.226 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:44:28.227 +08:00 [DBG] Rendering check session result
2019-04-13 12:51:24.370 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:51:24.374 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:51:24.380 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:51:24.381 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:51:24.381 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:51:24.382 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:51:24.384 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:51:24.384 +08:00 [DBG] Start discovery request
2019-04-13 12:51:24.389 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:51:24.392 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:51:24.395 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:51:24.396 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:51:24.397 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:51:24.397 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:51:24.398 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:51:24.398 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:51:24.399 +08:00 [DBG] Start discovery request
2019-04-13 12:51:24.402 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:51:24.616 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:51:24.618 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:51:24.618 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:51:24.619 +08:00 [DBG] Rendering check session result
2019-04-13 12:51:24.622 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:51:24.623 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:51:24.624 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:51:24.625 +08:00 [DBG] Rendering check session result
2019-04-13 12:51:25.504 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:51:25.507 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:51:25.508 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:51:25.508 +08:00 [DBG] Start discovery request
2019-04-13 12:51:25.513 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:51:25.623 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 12:51:25.627 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 12:51:25.628 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 12:51:25.629 +08:00 [DBG] Start key discovery request
2019-04-13 12:53:16.877 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:53:16.880 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:53:16.882 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:53:16.883 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:53:16.884 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:53:16.885 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:53:16.885 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:53:16.886 +08:00 [DBG] Start discovery request
2019-04-13 12:53:16.893 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:53:16.897 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:53:16.898 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:53:16.899 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:53:16.899 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:53:16.900 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:53:16.900 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:53:16.901 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:53:16.901 +08:00 [DBG] Start discovery request
2019-04-13 12:53:16.904 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:53:17.130 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:53:17.133 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:53:17.133 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:53:17.134 +08:00 [DBG] Rendering check session result
2019-04-13 12:53:17.137 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:53:17.138 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:53:17.140 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:53:17.141 +08:00 [DBG] Rendering check session result
2019-04-13 12:57:08.847 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:57:08.851 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:57:08.853 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:57:08.854 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:57:08.854 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:57:08.855 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:57:08.856 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:57:08.857 +08:00 [DBG] Start discovery request
2019-04-13 12:57:08.862 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:57:08.865 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:57:08.866 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:57:08.868 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:57:08.869 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:57:08.870 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:57:08.875 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:57:08.877 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:57:08.878 +08:00 [DBG] Start discovery request
2019-04-13 12:57:08.883 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:57:09.101 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:57:09.103 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:57:09.103 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:57:09.105 +08:00 [DBG] Rendering check session result
2019-04-13 12:57:09.108 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:57:09.109 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:57:09.110 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:57:09.110 +08:00 [DBG] Rendering check session result
2019-04-13 12:57:09.576 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:57:09.578 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:57:09.579 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:57:09.579 +08:00 [DBG] Start discovery request
2019-04-13 12:57:09.584 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:57:09.689 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 12:57:09.693 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 12:57:09.693 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 12:57:09.694 +08:00 [DBG] Start key discovery request
2019-04-13 12:57:57.952 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:57:57.956 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:57:57.959 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:57:57.960 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:57:57.960 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:57:57.961 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:57:57.961 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:57:57.962 +08:00 [DBG] Start discovery request
2019-04-13 12:57:57.966 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:57:57.971 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 12:57:57.972 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 12:57:57.974 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 12:57:57.974 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 12:57:57.975 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:57:57.976 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:57:57.977 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:57:57.983 +08:00 [DBG] Start discovery request
2019-04-13 12:57:57.988 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:57:58.262 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:57:58.265 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:57:58.267 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:57:58.267 +08:00 [DBG] Rendering check session result
2019-04-13 12:57:58.270 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 12:57:58.270 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 12:57:58.271 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 12:57:58.271 +08:00 [DBG] Rendering check session result
2019-04-13 12:57:58.764 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 12:57:58.767 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 12:57:58.768 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 12:57:58.768 +08:00 [DBG] Start discovery request
2019-04-13 12:57:58.772 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 12:57:58.890 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 12:57:58.893 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 12:57:58.894 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 12:57:58.895 +08:00 [DBG] Start key discovery request
2019-04-13 13:01:45.717 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:01:45.722 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:01:45.726 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:01:45.727 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:01:45.728 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:01:45.729 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:01:45.729 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:01:45.732 +08:00 [DBG] Start discovery request
2019-04-13 13:01:45.736 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:01:45.739 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:01:45.739 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:01:45.740 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:01:45.743 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:01:45.743 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:01:45.743 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:01:45.744 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:01:45.745 +08:00 [DBG] Start discovery request
2019-04-13 13:01:45.749 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:01:45.961 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:01:45.965 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:01:45.967 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:01:45.968 +08:00 [DBG] Rendering check session result
2019-04-13 13:01:45.971 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:01:45.972 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:01:45.972 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:01:45.973 +08:00 [DBG] Rendering check session result
2019-04-13 13:01:46.401 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:01:46.405 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:01:46.407 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:01:46.409 +08:00 [DBG] Start discovery request
2019-04-13 13:01:46.416 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:01:46.530 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 13:01:46.533 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 13:01:46.534 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 13:01:46.535 +08:00 [DBG] Start key discovery request
2019-04-13 13:02:48.902 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:02:48.908 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:02:48.910 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:02:48.911 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:02:48.912 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:02:48.913 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:02:48.914 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:02:48.915 +08:00 [DBG] Start discovery request
2019-04-13 13:02:48.920 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:02:48.924 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:02:48.925 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:02:48.926 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:02:48.927 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:02:48.927 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:02:48.929 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:02:48.929 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:02:48.930 +08:00 [DBG] Start discovery request
2019-04-13 13:02:48.935 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:02:49.227 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:02:49.228 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:02:49.230 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:02:49.232 +08:00 [DBG] Rendering check session result
2019-04-13 13:02:49.235 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:02:49.236 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:02:49.241 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:02:49.242 +08:00 [DBG] Rendering check session result
2019-04-13 13:02:49.699 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:02:49.701 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:02:49.703 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:02:49.704 +08:00 [DBG] Start discovery request
2019-04-13 13:02:49.708 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:02:49.815 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 13:02:49.817 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 13:02:49.817 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 13:02:49.818 +08:00 [DBG] Start key discovery request
2019-04-13 13:10:04.888 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:10:04.891 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:10:04.892 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:10:04.893 +08:00 [DBG] Start discovery request
2019-04-13 13:10:04.904 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:10:05.007 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 13:10:05.011 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 13:10:05.013 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 13:10:05.015 +08:00 [DBG] Start key discovery request
2019-04-13 13:13:10.574 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:13:10.580 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:13:10.582 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:13:10.583 +08:00 [DBG] Start discovery request
2019-04-13 13:13:10.589 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:13:10.709 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 13:13:10.710 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 13:13:10.712 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 13:13:10.713 +08:00 [DBG] Start key discovery request
2019-04-13 13:16:06.032 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:16:06.035 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:16:06.037 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:16:06.038 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:16:06.039 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:16:06.040 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:16:06.040 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:16:06.041 +08:00 [DBG] Start discovery request
2019-04-13 13:16:06.045 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:16:06.051 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:16:06.052 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:16:06.054 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:16:06.054 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:16:06.055 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:16:06.056 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:16:06.060 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:16:06.061 +08:00 [DBG] Start discovery request
2019-04-13 13:16:06.066 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:16:06.296 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:16:06.299 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:16:06.300 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:16:06.301 +08:00 [DBG] Rendering check session result
2019-04-13 13:16:06.312 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:16:06.313 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:16:06.314 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:16:06.314 +08:00 [DBG] Rendering check session result
2019-04-13 13:16:06.726 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:16:06.729 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:16:06.731 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:16:06.732 +08:00 [DBG] Start discovery request
2019-04-13 13:16:06.739 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:16:06.845 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 13:16:06.847 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 13:16:06.847 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 13:16:06.848 +08:00 [DBG] Start key discovery request
2019-04-13 13:17:08.643 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:17:08.645 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:17:08.646 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:17:08.647 +08:00 [DBG] Start discovery request
2019-04-13 13:17:08.652 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:17:08.772 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 13:17:08.774 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 13:17:08.775 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 13:17:08.776 +08:00 [DBG] Start key discovery request
2019-04-13 13:17:48.978 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:17:48.982 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:17:48.984 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:17:48.986 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:17:48.987 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:17:48.988 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:17:48.988 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:17:48.989 +08:00 [DBG] Start discovery request
2019-04-13 13:17:49.000 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:17:49.010 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:17:49.011 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:17:49.012 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:17:49.014 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:17:49.015 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:17:49.020 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:17:49.021 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:17:49.021 +08:00 [DBG] Start discovery request
2019-04-13 13:17:49.025 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:17:49.233 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:17:49.237 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:17:49.238 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:17:49.239 +08:00 [DBG] Rendering check session result
2019-04-13 13:17:49.242 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:17:49.243 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:17:49.244 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:17:49.244 +08:00 [DBG] Rendering check session result
2019-04-13 13:18:46.373 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:18:46.378 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:18:46.381 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:18:46.382 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:18:46.383 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:18:46.384 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:18:46.384 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:18:46.385 +08:00 [DBG] Start discovery request
2019-04-13 13:18:46.389 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:18:46.392 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:18:46.393 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:18:46.394 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:18:46.394 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:18:46.395 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:18:46.395 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:18:46.396 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:18:46.396 +08:00 [DBG] Start discovery request
2019-04-13 13:18:46.401 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:18:46.623 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:18:46.627 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:18:46.628 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:18:46.629 +08:00 [DBG] Rendering check session result
2019-04-13 13:18:46.632 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:18:46.632 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:18:46.633 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:18:46.633 +08:00 [DBG] Rendering check session result
2019-04-13 13:18:52.669 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:18:52.673 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:18:52.676 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:18:52.676 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:18:52.677 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:18:52.677 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:18:52.678 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:18:52.678 +08:00 [DBG] Start discovery request
2019-04-13 13:18:52.681 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:18:52.692 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:18:52.692 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:18:52.694 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:18:52.695 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:18:52.696 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:18:52.696 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:18:52.697 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:18:52.698 +08:00 [DBG] Start discovery request
2019-04-13 13:18:52.708 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:18:52.919 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:18:52.923 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:18:52.924 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:18:52.924 +08:00 [DBG] Rendering check session result
2019-04-13 13:18:52.927 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:18:52.927 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:18:52.928 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:18:52.928 +08:00 [DBG] Rendering check session result
2019-04-13 13:18:53.367 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:18:53.369 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:18:53.370 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:18:53.371 +08:00 [DBG] Start discovery request
2019-04-13 13:18:53.377 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:18:53.482 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 13:18:53.486 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 13:18:53.487 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 13:18:53.488 +08:00 [DBG] Start key discovery request
2019-04-13 13:24:18.556 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:24:18.558 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:24:18.566 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:24:18.567 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:24:18.569 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:24:18.569 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:24:18.570 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:24:18.571 +08:00 [DBG] Start discovery request
2019-04-13 13:24:18.575 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:24:18.579 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:24:18.581 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:24:18.582 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:24:18.583 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:24:18.583 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:24:18.584 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:24:18.584 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:24:18.585 +08:00 [DBG] Start discovery request
2019-04-13 13:24:18.588 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:24:18.807 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:24:18.808 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:24:18.810 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:24:18.810 +08:00 [DBG] Rendering check session result
2019-04-13 13:24:18.814 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:24:18.814 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:24:18.815 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:24:18.816 +08:00 [DBG] Rendering check session result
2019-04-13 13:39:44.023 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:39:44.026 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:39:44.026 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:39:44.027 +08:00 [DBG] Start discovery request
2019-04-13 13:39:44.037 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:39:44.146 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 13:39:44.148 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 13:39:44.150 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 13:39:44.151 +08:00 [DBG] Start key discovery request
2019-04-13 13:42:16.217 +08:00 [INF] Removing 0 grants
2019-04-13 13:53:37.234 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:53:37.239 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:53:37.250 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:53:37.252 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:53:37.253 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:53:37.255 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:53:37.256 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:53:37.259 +08:00 [DBG] Start discovery request
2019-04-13 13:53:37.266 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:53:37.270 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:53:37.271 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:53:37.273 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:53:37.274 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:53:37.275 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:53:37.276 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:53:37.276 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:53:37.277 +08:00 [DBG] Start discovery request
2019-04-13 13:53:37.281 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:53:37.514 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:53:37.518 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:53:37.519 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:53:37.520 +08:00 [DBG] Rendering check session result
2019-04-13 13:53:37.531 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:53:37.533 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:53:37.534 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:53:37.535 +08:00 [DBG] Rendering check session result
2019-04-13 13:53:37.861 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:53:37.863 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:53:37.864 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:53:37.864 +08:00 [DBG] Start discovery request
2019-04-13 13:53:37.868 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:53:37.976 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 13:53:37.979 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 13:53:37.980 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 13:53:37.982 +08:00 [DBG] Start key discovery request
2019-04-13 13:53:38.205 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 13:53:38.207 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 13:53:38.208 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 13:53:38.208 +08:00 [DBG] Start authorize request
2019-04-13 13:53:38.209 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 13:53:38.209 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 13:53:38.216 +08:00 [DBG] js found in database: true
2019-04-13 13:53:38.219 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 13:53:38.222 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 13:53:38.255 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 13:53:38.260 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 13:53:38.265 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 13:53:38.266 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 13:53:38.269 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"6fedf0fa99654291ac36c21aff1222ce","UiLocales":null,"Nonce":"b3ec0b0bdb904de69acf0fe30028a9ed","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"196427dba4d6029227d4647277c658db","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"6fedf0fa99654291ac36c21aff1222ce","nonce":"b3ec0b0bdb904de69acf0fe30028a9ed"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 13:53:38.277 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-13 13:53:38.282 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-13 13:53:38.283 +08:00 [DBG] Creating Implicit Flow response.
2019-04-13 13:53:38.284 +08:00 [DBG] Getting claims for access token for client: js
2019-04-13 13:53:38.285 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 13:53:38.296 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-13 13:53:38.297 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-13 13:53:38.302 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile role api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Duiw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****TrOQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGCUT:00000003","TimeStamp":"2019-04-13T05:53:38.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-13 13:53:38.305 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"6fedf0fa99654291ac36c21aff1222ce","Scope":"openid profile role api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-13 13:53:38.520 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:53:38.523 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:53:38.525 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:53:38.526 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:53:38.526 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:53:38.527 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:53:38.528 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:53:38.529 +08:00 [DBG] Start discovery request
2019-04-13 13:53:38.534 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:53:38.585 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:53:38.588 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-13 13:53:38.591 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:53:38.592 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:53:38.593 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 13:53:38.594 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 13:53:38.595 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 13:53:38.595 +08:00 [DBG] Start key discovery request
2019-04-13 13:53:38.626 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:53:38.635 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:53:38.636 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-13 13:53:38.638 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:53:38.643 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:53:38.644 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-13 13:53:38.646 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-13 13:53:38.647 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-13 13:53:38.647 +08:00 [DBG] Start userinfo request
2019-04-13 13:53:38.648 +08:00 [DBG] Bearer token found in header
2019-04-13 13:53:38.657 +08:00 [DBG] js found in database: true
2019-04-13 13:53:38.659 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 13:53:38.664 +08:00 [DBG] js found in database: true
2019-04-13 13:53:38.665 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 13:53:38.668 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-13 13:53:38.669 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555134818,"exp":1555138418,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555125514,"idp":"local","role":"admin","scope":["openid","profile","role","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-13 13:53:38.675 +08:00 [DBG] Creating userinfo response
2019-04-13 13:53:38.676 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 13:53:38.676 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 13:53:38.678 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 13:53:38.679 +08:00 [DBG] Requested claim types: a b name rolel
2019-04-13 13:53:38.679 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 13:53:38.681 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 13:53:38.685 +08:00 [INF] Profile service returned the following claim types: name
2019-04-13 13:53:38.688 +08:00 [DBG] End userinfo request
2019-04-13 13:53:38.699 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:53:38.701 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:53:38.702 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:53:38.703 +08:00 [DBG] Rendering check session result
2019-04-13 13:53:39.572 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:53:39.575 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:53:39.578 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:53:39.578 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:53:39.579 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:53:39.580 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:53:39.581 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:53:39.581 +08:00 [DBG] Start discovery request
2019-04-13 13:53:39.586 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:53:39.589 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:53:39.591 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:53:39.593 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:53:39.594 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:53:39.596 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:53:39.601 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:53:39.602 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:53:39.603 +08:00 [DBG] Start discovery request
2019-04-13 13:53:39.607 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:53:39.898 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:53:39.900 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:53:39.901 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:53:39.902 +08:00 [DBG] Rendering check session result
2019-04-13 13:53:39.905 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:53:39.905 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:53:39.906 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:53:39.906 +08:00 [DBG] Rendering check session result
2019-04-13 13:53:45.646 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:53:45.649 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:53:45.651 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:53:45.653 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:53:45.654 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:53:45.655 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:53:45.656 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:53:45.656 +08:00 [DBG] Start discovery request
2019-04-13 13:53:45.661 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:53:45.663 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:53:45.664 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:53:45.665 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:53:45.666 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:53:45.667 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:53:45.668 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:53:45.669 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:53:45.674 +08:00 [DBG] Start discovery request
2019-04-13 13:53:45.678 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:53:45.908 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:53:45.912 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:53:45.914 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:53:45.915 +08:00 [DBG] Rendering check session result
2019-04-13 13:53:45.920 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:53:45.925 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:53:45.926 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:53:45.927 +08:00 [DBG] Rendering check session result
2019-04-13 13:56:01.487 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:56:01.489 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:56:01.491 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:56:01.491 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:56:01.492 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:56:01.493 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:56:01.493 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:56:01.494 +08:00 [DBG] Start discovery request
2019-04-13 13:56:01.498 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:56:01.503 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:56:01.504 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:56:01.506 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:56:01.506 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:56:01.506 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:56:01.507 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:56:01.507 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:56:01.508 +08:00 [DBG] Start discovery request
2019-04-13 13:56:01.511 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:56:01.730 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:56:01.731 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:56:01.732 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:56:01.733 +08:00 [DBG] Rendering check session result
2019-04-13 13:56:01.736 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:56:01.737 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:56:01.738 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:56:01.739 +08:00 [DBG] Rendering check session result
2019-04-13 13:56:02.109 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:56:02.113 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:56:02.114 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:56:02.114 +08:00 [DBG] Start discovery request
2019-04-13 13:56:02.119 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:56:02.238 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 13:56:02.241 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 13:56:02.242 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 13:56:02.243 +08:00 [DBG] Start key discovery request
2019-04-13 13:56:58.033 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:56:58.036 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:56:58.038 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:56:58.038 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:56:58.039 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:56:58.040 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:56:58.041 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:56:58.043 +08:00 [DBG] Start discovery request
2019-04-13 13:56:58.048 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:56:58.053 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:56:58.053 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:56:58.055 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:56:58.055 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:56:58.056 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:56:58.057 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:56:58.057 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:56:58.058 +08:00 [DBG] Start discovery request
2019-04-13 13:56:58.061 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:56:58.335 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:56:58.336 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:56:58.337 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:56:58.338 +08:00 [DBG] Rendering check session result
2019-04-13 13:56:58.341 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:56:58.342 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:56:58.342 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:56:58.343 +08:00 [DBG] Rendering check session result
2019-04-13 13:57:06.430 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:57:06.432 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:57:06.434 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:57:06.435 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:57:06.436 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:57:06.437 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:57:06.438 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:57:06.438 +08:00 [DBG] Start discovery request
2019-04-13 13:57:06.442 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:57:06.445 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 13:57:06.446 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 13:57:06.447 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 13:57:06.448 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 13:57:06.448 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:57:06.449 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:57:06.449 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:57:06.450 +08:00 [DBG] Start discovery request
2019-04-13 13:57:06.455 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:57:06.667 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:57:06.670 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:57:06.670 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:57:06.671 +08:00 [DBG] Rendering check session result
2019-04-13 13:57:06.675 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 13:57:06.676 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 13:57:06.677 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 13:57:06.678 +08:00 [DBG] Rendering check session result
2019-04-13 13:57:07.031 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 13:57:07.033 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 13:57:07.033 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 13:57:07.034 +08:00 [DBG] Start discovery request
2019-04-13 13:57:07.038 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 13:57:07.145 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 13:57:07.149 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 13:57:07.150 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 13:57:07.151 +08:00 [DBG] Start key discovery request
2019-04-13 14:42:16.230 +08:00 [INF] Removing 0 grants
2019-04-13 15:42:16.243 +08:00 [INF] Removing 0 grants
2019-04-13 16:42:16.256 +08:00 [INF] Removing 0 grants
2019-04-13 17:42:16.277 +08:00 [INF] Removing 0 grants
2019-04-13 18:42:16.291 +08:00 [INF] Removing 0 grants
2019-04-13 19:29:41.201 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 19:29:41.205 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 19:29:41.206 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 19:29:41.207 +08:00 [DBG] Start authorize request
2019-04-13 19:29:41.208 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 19:29:41.208 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 19:29:41.217 +08:00 [DBG] js found in database: true
2019-04-13 19:29:41.219 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 19:29:41.224 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 19:29:41.232 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 19:29:41.234 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 19:29:41.238 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 19:29:41.239 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 19:29:41.240 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"0a1a8e33ea1f4f558f643fa95690de5d","UiLocales":null,"Nonce":"e3eff18dd7024a99b3857fd790837e6e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"196427dba4d6029227d4647277c658db","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"0a1a8e33ea1f4f558f643fa95690de5d","nonce":"e3eff18dd7024a99b3857fd790837e6e"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 19:29:41.246 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-13 19:29:41.254 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-13 19:29:41.255 +08:00 [DBG] Creating Implicit Flow response.
2019-04-13 19:29:41.255 +08:00 [DBG] Getting claims for access token for client: js
2019-04-13 19:29:41.256 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 19:29:41.268 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-13 19:29:41.270 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-13 19:29:41.276 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile role api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****2ePw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****TCCg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGCV6:00000001","TimeStamp":"2019-04-13T11:29:41.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-13 19:29:41.287 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"0a1a8e33ea1f4f558f643fa95690de5d","Scope":"openid profile role api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-13 19:29:41.526 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 19:29:41.530 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 19:29:41.533 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 19:29:41.533 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 19:29:41.534 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 19:29:41.534 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 19:29:41.535 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 19:29:41.536 +08:00 [DBG] Start discovery request
2019-04-13 19:29:41.539 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 19:29:41.587 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 19:29:41.589 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-13 19:29:41.593 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 19:29:41.595 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 19:29:41.596 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 19:29:41.597 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 19:29:41.599 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 19:29:41.599 +08:00 [DBG] Start key discovery request
2019-04-13 19:29:41.637 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 19:29:41.642 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 19:29:41.643 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-13 19:29:41.646 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 19:29:41.646 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 19:29:41.647 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-13 19:29:41.649 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-13 19:29:41.650 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-13 19:29:41.650 +08:00 [DBG] Start userinfo request
2019-04-13 19:29:41.651 +08:00 [DBG] Bearer token found in header
2019-04-13 19:29:41.658 +08:00 [DBG] js found in database: true
2019-04-13 19:29:41.658 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 19:29:41.665 +08:00 [DBG] js found in database: true
2019-04-13 19:29:41.665 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 19:29:41.667 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-13 19:29:41.669 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555154981,"exp":1555158581,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555125514,"idp":"local","role":"admin","scope":["openid","profile","role","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-13 19:29:41.674 +08:00 [DBG] Creating userinfo response
2019-04-13 19:29:41.674 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 19:29:41.675 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 19:29:41.677 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 19:29:41.678 +08:00 [DBG] Requested claim types: a b name rolel
2019-04-13 19:29:41.678 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 19:29:41.680 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 19:29:41.684 +08:00 [INF] Profile service returned the following claim types: name
2019-04-13 19:29:41.685 +08:00 [DBG] End userinfo request
2019-04-13 19:29:41.696 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 19:29:41.697 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 19:29:41.698 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 19:29:41.699 +08:00 [DBG] Rendering check session result
2019-04-13 19:29:42.530 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 19:29:42.536 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 19:29:42.540 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 19:29:42.543 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 19:29:42.545 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 19:29:42.549 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 19:29:42.550 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 19:29:42.551 +08:00 [DBG] Start discovery request
2019-04-13 19:29:42.559 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 19:29:42.565 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 19:29:42.566 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 19:29:42.569 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 19:29:42.572 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 19:29:42.573 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 19:29:42.575 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 19:29:42.576 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 19:29:42.578 +08:00 [DBG] Start discovery request
2019-04-13 19:29:42.583 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 19:29:42.790 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 19:29:42.792 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 19:29:42.793 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 19:29:42.794 +08:00 [DBG] Rendering check session result
2019-04-13 19:29:42.798 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 19:29:42.799 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 19:29:42.801 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 19:29:42.805 +08:00 [DBG] Rendering check session result
2019-04-13 19:42:16.307 +08:00 [INF] Removing 0 grants
2019-04-13 20:42:16.329 +08:00 [INF] Removing 0 grants
2019-04-13 21:42:16.351 +08:00 [INF] Removing 0 grants
2019-04-13 22:41:31.002 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 22:41:31.005 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 22:41:31.006 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 22:41:31.006 +08:00 [DBG] Start authorize request
2019-04-13 22:41:31.007 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 22:41:31.008 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 22:41:31.046 +08:00 [DBG] js found in database: true
2019-04-13 22:41:31.047 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 22:41:31.063 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 22:41:31.191 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 22:41:31.196 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 22:41:31.201 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 22:41:31.202 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 22:41:31.208 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"18913314fd05459a8aabe0582fa7b8fd","UiLocales":null,"Nonce":"e3c40b6e491e42dbb8f0638c90894ef7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"196427dba4d6029227d4647277c658db","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"18913314fd05459a8aabe0582fa7b8fd","nonce":"e3c40b6e491e42dbb8f0638c90894ef7"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 22:41:31.218 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-13 22:41:31.221 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-13 22:41:31.222 +08:00 [DBG] Creating Implicit Flow response.
2019-04-13 22:41:31.222 +08:00 [DBG] Getting claims for access token for client: js
2019-04-13 22:41:31.223 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 22:41:31.233 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-13 22:41:31.235 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-13 22:41:31.245 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile role api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****EPdw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****jOqA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGCV9:00000001","TimeStamp":"2019-04-13T14:41:31.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-13 22:41:31.257 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"18913314fd05459a8aabe0582fa7b8fd","Scope":"openid profile role api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-13 22:41:31.501 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 22:41:31.505 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 22:41:31.510 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 22:41:31.511 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 22:41:31.512 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 22:41:31.515 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 22:41:31.516 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 22:41:31.517 +08:00 [DBG] Start discovery request
2019-04-13 22:41:31.543 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 22:41:31.563 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 22:41:31.564 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-13 22:41:31.566 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 22:41:31.569 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 22:41:31.570 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 22:41:31.570 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 22:41:31.571 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 22:41:31.571 +08:00 [DBG] Start key discovery request
2019-04-13 22:41:31.602 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 22:41:31.607 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 22:41:31.609 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-13 22:41:31.612 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 22:41:31.613 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 22:41:31.613 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-13 22:41:31.616 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-13 22:41:31.617 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-13 22:41:31.617 +08:00 [DBG] Start userinfo request
2019-04-13 22:41:31.618 +08:00 [DBG] Bearer token found in header
2019-04-13 22:41:31.628 +08:00 [DBG] js found in database: true
2019-04-13 22:41:31.629 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 22:41:31.636 +08:00 [DBG] js found in database: true
2019-04-13 22:41:31.636 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 22:41:31.640 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-13 22:41:31.645 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555166491,"exp":1555170091,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555125514,"idp":"local","role":"admin","scope":["openid","profile","role","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-13 22:41:31.652 +08:00 [DBG] Creating userinfo response
2019-04-13 22:41:31.655 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 22:41:31.656 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 22:41:31.658 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 22:41:31.659 +08:00 [DBG] Requested claim types: a b name rolel
2019-04-13 22:41:31.659 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 22:41:31.661 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 22:41:31.665 +08:00 [INF] Profile service returned the following claim types: name
2019-04-13 22:41:31.666 +08:00 [DBG] End userinfo request
2019-04-13 22:41:31.687 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 22:41:31.691 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 22:41:31.693 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 22:41:31.695 +08:00 [DBG] Rendering check session result
2019-04-13 22:41:32.568 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 22:41:32.572 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 22:41:32.575 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 22:41:32.576 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 22:41:32.577 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 22:41:32.579 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 22:41:32.580 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 22:41:32.585 +08:00 [DBG] Start discovery request
2019-04-13 22:41:32.589 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 22:41:32.592 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 22:41:32.593 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 22:41:32.595 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 22:41:32.597 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 22:41:32.597 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 22:41:32.598 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 22:41:32.599 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 22:41:32.599 +08:00 [DBG] Start discovery request
2019-04-13 22:41:32.603 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 22:41:32.847 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 22:41:32.849 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 22:41:32.850 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 22:41:32.851 +08:00 [DBG] Rendering check session result
2019-04-13 22:41:32.854 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 22:41:32.855 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 22:41:32.856 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 22:41:32.856 +08:00 [DBG] Rendering check session result
2019-04-13 22:42:16.362 +08:00 [INF] Removing 0 grants
2019-04-13 23:06:02.090 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:06:02.093 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 23:06:02.127 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:06:02.129 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:06:02.130 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:06:02.130 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:06:02.131 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:06:02.131 +08:00 [DBG] Start discovery request
2019-04-13 23:06:02.155 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:06:02.159 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:06:02.160 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 23:06:02.162 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:06:02.163 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:06:02.163 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:06:02.164 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:06:02.164 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:06:02.165 +08:00 [DBG] Start discovery request
2019-04-13 23:06:02.168 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:06:02.350 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 23:06:02.352 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 23:06:02.352 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 23:06:02.353 +08:00 [DBG] Rendering check session result
2019-04-13 23:06:02.356 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 23:06:02.356 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 23:06:02.357 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 23:06:02.358 +08:00 [DBG] Rendering check session result
2019-04-13 23:06:51.018 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:06:51.020 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:06:51.021 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:06:51.022 +08:00 [DBG] Start discovery request
2019-04-13 23:06:51.043 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:06:51.164 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 23:06:51.168 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 23:06:51.169 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 23:06:51.170 +08:00 [DBG] Start key discovery request
2019-04-13 23:08:48.989 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:08:48.991 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:08:48.991 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:08:48.992 +08:00 [DBG] Start discovery request
2019-04-13 23:08:49.017 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:08:49.138 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 23:08:49.142 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 23:08:49.144 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 23:08:49.145 +08:00 [DBG] Start key discovery request
2019-04-13 23:13:00.539 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:13:00.543 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:13:00.545 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:13:00.546 +08:00 [DBG] Start discovery request
2019-04-13 23:13:00.570 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:13:00.688 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 23:13:00.694 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 23:13:00.695 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 23:13:00.697 +08:00 [DBG] Start key discovery request
2019-04-13 23:23:17.564 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:23:17.566 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:23:17.567 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:23:17.568 +08:00 [DBG] Start discovery request
2019-04-13 23:23:17.598 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:23:17.711 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 23:23:17.714 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 23:23:17.716 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 23:23:17.717 +08:00 [DBG] Start key discovery request
2019-04-13 23:26:32.325 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:26:32.329 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 23:26:32.334 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:26:32.335 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:26:32.335 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:26:32.336 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:26:32.337 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:26:32.337 +08:00 [DBG] Start discovery request
2019-04-13 23:26:32.367 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:26:32.372 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:26:32.373 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 23:26:32.375 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:26:32.376 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:26:32.376 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:26:32.377 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:26:32.380 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:26:32.380 +08:00 [DBG] Start discovery request
2019-04-13 23:26:32.386 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:26:32.620 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 23:26:32.622 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 23:26:32.624 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 23:26:32.625 +08:00 [DBG] Rendering check session result
2019-04-13 23:26:32.636 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 23:26:32.638 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 23:26:32.639 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 23:26:32.640 +08:00 [DBG] Rendering check session result
2019-04-13 23:32:44.774 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:32:44.777 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 23:32:44.786 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:32:44.788 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:32:44.788 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:32:44.789 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:32:44.790 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:32:44.790 +08:00 [DBG] Start discovery request
2019-04-13 23:32:44.812 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:32:44.817 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:32:44.817 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 23:32:44.819 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:32:44.820 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:32:44.821 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:32:44.822 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:32:44.822 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:32:44.823 +08:00 [DBG] Start discovery request
2019-04-13 23:32:44.831 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:32:45.060 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 23:32:45.063 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 23:32:45.064 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 23:32:45.066 +08:00 [DBG] Rendering check session result
2019-04-13 23:32:45.069 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 23:32:45.070 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 23:32:45.071 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 23:32:45.076 +08:00 [DBG] Rendering check session result
2019-04-13 23:32:45.362 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:32:45.366 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:32:45.366 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:32:45.367 +08:00 [DBG] Start discovery request
2019-04-13 23:32:45.371 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:32:45.478 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 23:32:45.480 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 23:32:45.481 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 23:32:45.482 +08:00 [DBG] Start key discovery request
2019-04-13 23:36:35.408 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:36:35.411 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 23:36:35.416 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:36:35.416 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:36:35.417 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:36:35.418 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:36:35.418 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:36:35.423 +08:00 [DBG] Start discovery request
2019-04-13 23:36:35.444 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:36:35.449 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:36:35.451 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 23:36:35.453 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:36:35.454 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:36:35.457 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:36:35.458 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:36:35.458 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:36:35.459 +08:00 [DBG] Start discovery request
2019-04-13 23:36:35.463 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:36:35.688 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 23:36:35.690 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 23:36:35.690 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 23:36:35.691 +08:00 [DBG] Rendering check session result
2019-04-13 23:36:35.693 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 23:36:35.694 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 23:36:35.695 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 23:36:35.695 +08:00 [DBG] Rendering check session result
2019-04-13 23:42:16.378 +08:00 [INF] Removing 0 grants
2019-04-13 23:49:47.326 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:49:47.331 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:49:47.333 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:49:47.333 +08:00 [DBG] Start discovery request
2019-04-13 23:49:47.362 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:49:47.477 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 23:49:47.480 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 23:49:47.483 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 23:49:47.484 +08:00 [DBG] Start key discovery request
2019-04-13 23:49:47.704 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-13 23:49:47.707 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-13 23:49:47.708 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-13 23:49:47.708 +08:00 [DBG] Start authorize request
2019-04-13 23:49:47.709 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 23:49:47.710 +08:00 [DBG] Start authorize request protocol validation
2019-04-13 23:49:47.751 +08:00 [DBG] js found in database: true
2019-04-13 23:49:47.752 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 23:49:47.763 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 23:49:47.889 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 23:49:47.895 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 23:49:47.901 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-13 23:49:47.902 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-13 23:49:47.903 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"fde1c3474ded4434bff329870d5639da","UiLocales":null,"Nonce":"d64202720bb94e2298ca5fbff3e8402e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"196427dba4d6029227d4647277c658db","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"fde1c3474ded4434bff329870d5639da","nonce":"d64202720bb94e2298ca5fbff3e8402e"},"$type":"AuthorizeRequestValidationLog"}
2019-04-13 23:49:47.924 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-13 23:49:47.927 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-13 23:49:47.929 +08:00 [DBG] Creating Implicit Flow response.
2019-04-13 23:49:47.930 +08:00 [DBG] Getting claims for access token for client: js
2019-04-13 23:49:47.931 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-13 23:49:47.948 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-13 23:49:47.952 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-13 23:49:47.958 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile role api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****N-pA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****41JA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGCVU:00000001","TimeStamp":"2019-04-13T15:49:47.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-13 23:49:47.970 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"fde1c3474ded4434bff329870d5639da","Scope":"openid profile role api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-13 23:49:48.190 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:49:48.193 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 23:49:48.197 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:49:48.197 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:49:48.198 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:49:48.199 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:49:48.200 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:49:48.201 +08:00 [DBG] Start discovery request
2019-04-13 23:49:48.206 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:49:48.251 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:49:48.253 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-13 23:49:48.255 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:49:48.255 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:49:48.256 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 23:49:48.256 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 23:49:48.257 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 23:49:48.258 +08:00 [DBG] Start key discovery request
2019-04-13 23:49:48.296 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:49:48.301 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:49:48.301 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-13 23:49:48.303 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:49:48.303 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:49:48.304 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-13 23:49:48.305 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-13 23:49:48.305 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-13 23:49:48.306 +08:00 [DBG] Start userinfo request
2019-04-13 23:49:48.306 +08:00 [DBG] Bearer token found in header
2019-04-13 23:49:48.314 +08:00 [DBG] js found in database: true
2019-04-13 23:49:48.315 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 23:49:48.318 +08:00 [DBG] js found in database: true
2019-04-13 23:49:48.319 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-13 23:49:48.322 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-13 23:49:48.323 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555170587,"exp":1555174187,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555125514,"idp":"local","role":"admin","scope":["openid","profile","role","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-13 23:49:48.329 +08:00 [DBG] Creating userinfo response
2019-04-13 23:49:48.331 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 23:49:48.332 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 23:49:48.334 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 23:49:48.335 +08:00 [DBG] Requested claim types: a b name rolel
2019-04-13 23:49:48.335 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-13 23:49:48.337 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-13 23:49:48.341 +08:00 [INF] Profile service returned the following claim types: name
2019-04-13 23:49:48.345 +08:00 [DBG] End userinfo request
2019-04-13 23:49:48.356 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 23:49:48.357 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 23:49:48.358 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 23:49:48.359 +08:00 [DBG] Rendering check session result
2019-04-13 23:49:49.256 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:49:49.258 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 23:49:49.259 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:49:49.260 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:49:49.261 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:49:49.262 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:49:49.263 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:49:49.264 +08:00 [DBG] Start discovery request
2019-04-13 23:49:49.268 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:49:49.271 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 23:49:49.272 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 23:49:49.273 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 23:49:49.274 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 23:49:49.274 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 23:49:49.275 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 23:49:49.275 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 23:49:49.276 +08:00 [DBG] Start discovery request
2019-04-13 23:49:49.279 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 23:49:49.589 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 23:49:49.594 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 23:49:49.595 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 23:49:49.596 +08:00 [DBG] Rendering check session result
2019-04-13 23:49:49.599 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 23:49:49.600 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 23:49:49.600 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 23:49:49.601 +08:00 [DBG] Rendering check session result
2019-04-14 00:05:16.089 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:05:16.095 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:05:16.096 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:05:16.098 +08:00 [DBG] Start discovery request
2019-04-14 00:05:16.124 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:05:16.234 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 00:05:16.239 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 00:05:16.240 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 00:05:16.243 +08:00 [DBG] Start key discovery request
2019-04-14 00:23:54.883 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:23:54.886 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:23:54.888 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:23:54.889 +08:00 [DBG] Start discovery request
2019-04-14 00:23:54.912 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:23:55.032 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 00:23:55.036 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 00:23:55.037 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 00:23:55.038 +08:00 [DBG] Start key discovery request
2019-04-14 00:31:16.539 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 00:31:16.541 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 00:31:16.551 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 00:31:16.553 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 00:31:16.554 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:31:16.555 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:31:16.556 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:31:16.557 +08:00 [DBG] Start discovery request
2019-04-14 00:31:16.575 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:31:16.582 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 00:31:16.583 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 00:31:16.586 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 00:31:16.589 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 00:31:16.590 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:31:16.592 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:31:16.592 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:31:16.593 +08:00 [DBG] Start discovery request
2019-04-14 00:31:16.599 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:31:16.818 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 00:31:16.820 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 00:31:16.820 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 00:31:16.821 +08:00 [DBG] Rendering check session result
2019-04-14 00:31:16.829 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 00:31:16.831 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 00:31:16.832 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 00:31:16.833 +08:00 [DBG] Rendering check session result
2019-04-14 00:37:10.917 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 00:37:10.921 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 00:37:10.926 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 00:37:10.927 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 00:37:10.928 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:37:10.929 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:37:10.931 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:37:10.932 +08:00 [DBG] Start discovery request
2019-04-14 00:37:10.951 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:37:10.959 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 00:37:10.960 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 00:37:10.963 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 00:37:10.963 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 00:37:10.964 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:37:10.970 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:37:10.971 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:37:10.972 +08:00 [DBG] Start discovery request
2019-04-14 00:37:10.976 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:37:11.173 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 00:37:11.177 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 00:37:11.178 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 00:37:11.179 +08:00 [DBG] Rendering check session result
2019-04-14 00:37:11.182 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 00:37:11.183 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 00:37:11.184 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 00:37:11.190 +08:00 [DBG] Rendering check session result
2019-04-14 00:41:27.319 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:41:27.321 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:41:27.322 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:41:27.322 +08:00 [DBG] Start discovery request
2019-04-14 00:41:27.346 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:41:27.458 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 00:41:27.462 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 00:41:27.463 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 00:41:27.465 +08:00 [DBG] Start key discovery request
2019-04-14 00:42:16.389 +08:00 [INF] Removing 0 grants
2019-04-14 00:43:29.284 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:43:29.287 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:43:29.288 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:43:29.289 +08:00 [DBG] Start discovery request
2019-04-14 00:43:29.315 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:43:29.419 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 00:43:29.421 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 00:43:29.423 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 00:43:29.425 +08:00 [DBG] Start key discovery request
2019-04-14 00:44:29.042 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:44:29.044 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:44:29.045 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:44:29.046 +08:00 [DBG] Start discovery request
2019-04-14 00:44:29.063 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:44:29.170 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 00:44:29.176 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 00:44:29.178 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 00:44:29.180 +08:00 [DBG] Start key discovery request
2019-04-14 00:55:16.384 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:55:16.386 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:55:16.386 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:55:16.387 +08:00 [DBG] Start discovery request
2019-04-14 00:55:16.415 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:55:16.527 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 00:55:16.535 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 00:55:16.536 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 00:55:16.539 +08:00 [DBG] Start key discovery request
2019-04-14 00:55:28.935 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-14 00:55:28.940 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-14 00:55:28.942 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-14 00:55:28.944 +08:00 [DBG] Start authorize request
2019-04-14 00:55:28.945 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-14 00:55:28.946 +08:00 [DBG] Start authorize request protocol validation
2019-04-14 00:55:28.981 +08:00 [DBG] js found in database: true
2019-04-14 00:55:28.982 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 00:55:28.996 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 00:55:29.118 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 00:55:29.124 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 00:55:29.128 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 00:55:29.129 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-14 00:55:29.133 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"934c1f7fe5a643c4b3d3dd584ff43656","UiLocales":null,"Nonce":"b273dfa88d4d450ba34d3af925faceab","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"196427dba4d6029227d4647277c658db","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"934c1f7fe5a643c4b3d3dd584ff43656","nonce":"b273dfa88d4d450ba34d3af925faceab"},"$type":"AuthorizeRequestValidationLog"}
2019-04-14 00:55:29.146 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-14 00:55:29.150 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-14 00:55:29.151 +08:00 [DBG] Creating Implicit Flow response.
2019-04-14 00:55:29.153 +08:00 [DBG] Getting claims for access token for client: js
2019-04-14 00:55:29.154 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-14 00:55:29.173 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-14 00:55:29.179 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-14 00:55:29.189 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile role api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****TS7A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Fx-g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGD0D:00000001","TimeStamp":"2019-04-13T16:55:29.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-14 00:55:29.206 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"934c1f7fe5a643c4b3d3dd584ff43656","Scope":"openid profile role api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-14 00:55:29.440 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 00:55:29.442 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 00:55:29.446 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 00:55:29.447 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 00:55:29.448 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:55:29.449 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:55:29.450 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:55:29.451 +08:00 [DBG] Start discovery request
2019-04-14 00:55:29.469 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:55:29.504 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 00:55:29.507 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-14 00:55:29.509 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 00:55:29.510 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 00:55:29.511 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 00:55:29.512 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 00:55:29.512 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 00:55:29.513 +08:00 [DBG] Start key discovery request
2019-04-14 00:55:29.545 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 00:55:29.555 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 00:55:29.555 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-14 00:55:29.557 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 00:55:29.558 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 00:55:29.561 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-14 00:55:29.562 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-14 00:55:29.563 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-14 00:55:29.564 +08:00 [DBG] Start userinfo request
2019-04-14 00:55:29.565 +08:00 [DBG] Bearer token found in header
2019-04-14 00:55:29.573 +08:00 [DBG] js found in database: true
2019-04-14 00:55:29.573 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 00:55:29.580 +08:00 [DBG] js found in database: true
2019-04-14 00:55:29.581 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 00:55:29.585 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-14 00:55:29.586 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555174529,"exp":1555178129,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555125514,"idp":"local","role":"admin","scope":["openid","profile","role","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-14 00:55:29.589 +08:00 [DBG] Creating userinfo response
2019-04-14 00:55:29.590 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-14 00:55:29.596 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-14 00:55:29.599 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 00:55:29.600 +08:00 [DBG] Requested claim types: a b name rolel
2019-04-14 00:55:29.600 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-14 00:55:29.603 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 00:55:29.607 +08:00 [INF] Profile service returned the following claim types: name
2019-04-14 00:55:29.608 +08:00 [DBG] End userinfo request
2019-04-14 00:55:29.624 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 00:55:29.625 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 00:55:29.627 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 00:55:29.628 +08:00 [DBG] Rendering check session result
2019-04-14 00:55:31.006 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 00:55:31.009 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 00:55:31.012 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 00:55:31.013 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 00:55:31.014 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:55:31.015 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:55:31.017 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:55:31.024 +08:00 [DBG] Start discovery request
2019-04-14 00:55:31.029 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:55:31.032 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 00:55:31.033 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 00:55:31.036 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 00:55:31.037 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 00:55:31.037 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 00:55:31.038 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 00:55:31.038 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 00:55:31.039 +08:00 [DBG] Start discovery request
2019-04-14 00:55:31.043 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 00:55:31.270 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 00:55:31.273 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 00:55:31.274 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 00:55:31.274 +08:00 [DBG] Rendering check session result
2019-04-14 00:55:31.276 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 00:55:31.277 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 00:55:31.278 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 00:55:31.279 +08:00 [DBG] Rendering check session result
2019-04-14 01:42:16.413 +08:00 [INF] Removing 0 grants
2019-04-14 01:50:58.704 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 01:50:58.707 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 01:50:58.708 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 01:50:58.709 +08:00 [DBG] Start discovery request
2019-04-14 01:50:58.741 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 01:50:58.858 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 01:50:58.862 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 01:50:58.863 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 01:50:58.865 +08:00 [DBG] Start key discovery request
2019-04-14 01:51:23.461 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 01:51:23.464 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 01:51:23.469 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 01:51:23.470 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 01:51:23.471 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 01:51:23.474 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 01:51:23.475 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 01:51:23.475 +08:00 [DBG] Start discovery request
2019-04-14 01:51:23.481 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 01:51:23.491 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 01:51:23.493 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 01:51:23.495 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 01:51:23.495 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 01:51:23.496 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 01:51:23.502 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 01:51:23.503 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 01:51:23.504 +08:00 [DBG] Start discovery request
2019-04-14 01:51:23.510 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 01:51:23.746 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 01:51:23.748 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 01:51:23.749 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 01:51:23.750 +08:00 [DBG] Rendering check session result
2019-04-14 01:51:23.760 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 01:51:23.760 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 01:51:23.761 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 01:51:23.761 +08:00 [DBG] Rendering check session result
2019-04-14 01:54:24.309 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 01:54:24.316 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 01:54:24.321 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 01:54:24.322 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 01:54:24.323 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 01:54:24.327 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 01:54:24.328 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 01:54:24.330 +08:00 [DBG] Start discovery request
2019-04-14 01:54:24.362 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 01:54:24.367 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 01:54:24.367 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 01:54:24.369 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 01:54:24.370 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 01:54:24.370 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 01:54:24.371 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 01:54:24.373 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 01:54:24.382 +08:00 [DBG] Start discovery request
2019-04-14 01:54:24.388 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 01:54:24.634 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 01:54:24.637 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 01:54:24.640 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 01:54:24.641 +08:00 [DBG] Rendering check session result
2019-04-14 01:54:24.645 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 01:54:24.648 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 01:54:24.649 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 01:54:24.650 +08:00 [DBG] Rendering check session result
2019-04-14 01:54:25.056 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 01:54:25.058 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 01:54:25.059 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 01:54:25.060 +08:00 [DBG] Start discovery request
2019-04-14 01:54:25.064 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 01:54:25.199 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 01:54:25.203 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 01:54:25.205 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 01:54:25.206 +08:00 [DBG] Start key discovery request
2019-04-14 02:15:23.578 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 02:15:23.581 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 02:15:23.582 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 02:15:23.583 +08:00 [DBG] Start discovery request
2019-04-14 02:15:23.610 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 02:15:23.720 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 02:15:23.726 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 02:15:23.727 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 02:15:23.728 +08:00 [DBG] Start key discovery request
2019-04-14 02:15:23.938 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-14 02:15:23.941 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-14 02:15:23.942 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-14 02:15:23.943 +08:00 [DBG] Start authorize request
2019-04-14 02:15:23.944 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-14 02:15:23.945 +08:00 [DBG] Start authorize request protocol validation
2019-04-14 02:15:23.979 +08:00 [DBG] js found in database: true
2019-04-14 02:15:23.981 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 02:15:23.996 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:15:24.126 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 02:15:24.131 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:15:24.135 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 02:15:24.135 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-14 02:15:24.136 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"44f87c7c7550483f99a90a2f9d3f0f67","UiLocales":null,"Nonce":"5fbf7718589c4f64a10c3f649904f15e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"196427dba4d6029227d4647277c658db","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"44f87c7c7550483f99a90a2f9d3f0f67","nonce":"5fbf7718589c4f64a10c3f649904f15e"},"$type":"AuthorizeRequestValidationLog"}
2019-04-14 02:15:24.152 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-14 02:15:24.153 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-14 02:15:24.154 +08:00 [DBG] Creating Implicit Flow response.
2019-04-14 02:15:24.154 +08:00 [DBG] Getting claims for access token for client: js
2019-04-14 02:15:24.155 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-14 02:15:24.169 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-14 02:15:24.171 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-14 02:15:24.177 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile role api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****qvYA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****cb1g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGD0P:00000001","TimeStamp":"2019-04-13T18:15:24.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-14 02:15:24.183 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"44f87c7c7550483f99a90a2f9d3f0f67","Scope":"openid profile role api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-14 02:15:24.401 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:15:24.403 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 02:15:24.407 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:15:24.408 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:15:24.409 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 02:15:24.411 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 02:15:24.411 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 02:15:24.416 +08:00 [DBG] Start discovery request
2019-04-14 02:15:24.419 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 02:15:24.463 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:15:24.467 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-14 02:15:24.469 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:15:24.469 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:15:24.470 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 02:15:24.470 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 02:15:24.471 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 02:15:24.471 +08:00 [DBG] Start key discovery request
2019-04-14 02:15:24.504 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:15:24.509 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:15:24.510 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-14 02:15:24.512 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:15:24.513 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:15:24.513 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-14 02:15:24.514 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-14 02:15:24.518 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-14 02:15:24.519 +08:00 [DBG] Start userinfo request
2019-04-14 02:15:24.519 +08:00 [DBG] Bearer token found in header
2019-04-14 02:15:24.527 +08:00 [DBG] js found in database: true
2019-04-14 02:15:24.530 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 02:15:24.534 +08:00 [DBG] js found in database: true
2019-04-14 02:15:24.535 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 02:15:24.537 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-14 02:15:24.537 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555179324,"exp":1555182924,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555125514,"idp":"local","role":"admin","scope":["openid","profile","role","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-14 02:15:24.542 +08:00 [DBG] Creating userinfo response
2019-04-14 02:15:24.542 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-14 02:15:24.543 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-14 02:15:24.546 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:15:24.547 +08:00 [DBG] Requested claim types: a b name rolel
2019-04-14 02:15:24.548 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-14 02:15:24.549 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:15:24.556 +08:00 [INF] Profile service returned the following claim types: name
2019-04-14 02:15:24.557 +08:00 [DBG] End userinfo request
2019-04-14 02:15:24.577 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 02:15:24.580 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 02:15:24.581 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 02:15:24.582 +08:00 [DBG] Rendering check session result
2019-04-14 02:15:25.915 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:15:25.918 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 02:15:25.921 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:15:25.923 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:15:25.924 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 02:15:25.925 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 02:15:25.926 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 02:15:25.930 +08:00 [DBG] Start discovery request
2019-04-14 02:15:25.934 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 02:15:25.936 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:15:25.937 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 02:15:25.938 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:15:25.944 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:15:25.946 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 02:15:25.946 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 02:15:25.947 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 02:15:25.948 +08:00 [DBG] Start discovery request
2019-04-14 02:15:25.953 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 02:15:26.178 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 02:15:26.181 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 02:15:26.182 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 02:15:26.182 +08:00 [DBG] Rendering check session result
2019-04-14 02:15:26.184 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 02:15:26.185 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 02:15:26.185 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 02:15:26.186 +08:00 [DBG] Rendering check session result
2019-04-14 02:17:51.706 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:17:51.708 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 02:17:51.713 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:17:51.713 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:17:51.714 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 02:17:51.715 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 02:17:51.717 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 02:17:51.723 +08:00 [DBG] Start discovery request
2019-04-14 02:17:51.743 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 02:17:51.749 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:17:51.751 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 02:17:51.753 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:17:51.755 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:17:51.758 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 02:17:51.759 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 02:17:51.760 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 02:17:51.760 +08:00 [DBG] Start discovery request
2019-04-14 02:17:51.765 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 02:17:51.842 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 02:17:51.846 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 02:17:51.847 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 02:17:51.848 +08:00 [DBG] Rendering check session result
2019-04-14 02:17:51.851 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 02:17:51.852 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 02:17:51.853 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 02:17:51.854 +08:00 [DBG] Rendering check session result
2019-04-14 02:17:54.289 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:17:54.291 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 02:17:54.293 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:17:54.294 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:17:54.295 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 02:17:54.296 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 02:17:54.296 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 02:17:54.297 +08:00 [DBG] Start discovery request
2019-04-14 02:17:54.300 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 02:17:54.304 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:17:54.305 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 02:17:54.306 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:17:54.307 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:17:54.308 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 02:17:54.309 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 02:17:54.309 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 02:17:54.310 +08:00 [DBG] Start discovery request
2019-04-14 02:17:54.310 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 02:17:54.313 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 02:17:54.315 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 02:17:54.317 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 02:17:54.318 +08:00 [DBG] Rendering check session result
2019-04-14 02:17:54.326 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-14 02:17:54.327 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-14 02:17:54.328 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-14 02:17:54.329 +08:00 [DBG] Processing signout request for a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-14 02:17:54.329 +08:00 [DBG] Start end session request validation
2019-04-14 02:17:54.330 +08:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","PostLogOutUri":null,"State":null,"Raw":{"post_logout_redirect_uri":"http://localhost:5000"},"$type":"EndSessionRequestValidationLog"}
2019-04-14 02:17:54.331 +08:00 [DBG] Success validating end session request from null
2019-04-14 02:17:55.844 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:17:55.848 +08:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-14 02:17:55.851 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-14 02:17:55.852 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-14 02:17:55.852 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-14 02:17:55.853 +08:00 [INF] {"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLLVM58EGD0T:00000006","TimeStamp":"2019-04-13T18:17:55.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-14 02:17:55.883 +08:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-14 02:17:55.886 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-14 02:17:55.887 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-14 02:17:55.889 +08:00 [DBG] Processing signout callback request
2019-04-14 02:17:55.932 +08:00 [DBG] js found in database: true
2019-04-14 02:17:55.932 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 02:17:55.935 +08:00 [DBG] No client front-channel logout URLs
2019-04-14 02:17:55.936 +08:00 [DBG] No client back-channel logout URLs
2019-04-14 02:17:55.937 +08:00 [INF] Successful signout callback.
2019-04-14 02:17:55.938 +08:00 [DBG] No client front-channel iframe urls
2019-04-14 02:17:55.939 +08:00 [DBG] No client back-channel iframe urls
2019-04-14 02:18:06.132 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:18:06.134 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 02:18:06.136 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:18:06.137 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:18:06.138 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 02:18:06.141 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 02:18:06.148 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 02:18:06.150 +08:00 [DBG] Start discovery request
2019-04-14 02:18:06.156 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 02:18:06.182 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-14 02:18:06.186 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-14 02:18:06.187 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-14 02:18:06.188 +08:00 [DBG] Start authorize request
2019-04-14 02:18:06.189 +08:00 [DBG] No user present in authorize request
2019-04-14 02:18:06.190 +08:00 [DBG] Start authorize request protocol validation
2019-04-14 02:18:06.198 +08:00 [DBG] js found in database: true
2019-04-14 02:18:06.199 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 02:18:06.216 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:18:06.341 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 02:18:06.348 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:18:06.353 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 02:18:06.357 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-14 02:18:06.359 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"49965265b46a4f1b865e44e487453212","UiLocales":null,"Nonce":"13a9002928814ebdb5e542d7e1723a28","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"49965265b46a4f1b865e44e487453212","nonce":"13a9002928814ebdb5e542d7e1723a28"},"$type":"AuthorizeRequestValidationLog"}
2019-04-14 02:18:06.370 +08:00 [INF] Showing login: User is not authenticated
2019-04-14 02:18:06.376 +08:00 [DBG] Start authorize request protocol validation
2019-04-14 02:18:06.382 +08:00 [DBG] js found in database: true
2019-04-14 02:18:06.383 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 02:18:06.386 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:18:06.390 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 02:18:06.393 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:18:06.397 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 02:18:06.398 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-14 02:18:06.402 +08:00 [DBG] js found in database: true
2019-04-14 02:18:06.403 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 02:18:13.150 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:18:13.152 +08:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-14 02:18:13.154 +08:00 [DBG] Start authorize request protocol validation
2019-04-14 02:18:13.184 +08:00 [DBG] js found in database: true
2019-04-14 02:18:13.185 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 02:18:13.196 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:18:13.317 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 02:18:13.329 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:18:13.432 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 02:18:13.436 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-14 02:18:13.468 +08:00 [DBG] Augmenting SignInContext
2019-04-14 02:18:13.469 +08:00 [DBG] Adding idp claim with value: local
2019-04-14 02:18:13.470 +08:00 [DBG] Adding amr claim with value: pwd
2019-04-14 02:18:13.471 +08:00 [DBG] Adding auth_time claim with value: 1555179493
2019-04-14 02:18:13.471 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-14 02:18:13.473 +08:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"admin","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLLVM58EGD0T:0000000B","TimeStamp":"2019-04-13T18:18:13.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-14 02:18:13.503 +08:00 [DBG] js found in database: true
2019-04-14 02:18:13.505 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 02:18:13.514 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-14 02:18:13.518 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-14 02:18:13.519 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-14 02:18:13.520 +08:00 [DBG] Start authorize callback request
2019-04-14 02:18:13.521 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-14 02:18:13.521 +08:00 [DBG] Start authorize request protocol validation
2019-04-14 02:18:13.526 +08:00 [DBG] js found in database: true
2019-04-14 02:18:13.526 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 02:18:13.531 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:18:13.536 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 02:18:13.538 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:18:13.542 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 02:18:13.544 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-14 02:18:13.545 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"49965265b46a4f1b865e44e487453212","UiLocales":null,"Nonce":"13a9002928814ebdb5e542d7e1723a28","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"dc26a1b7a5a5601e7ed704ac7dd3a364","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"49965265b46a4f1b865e44e487453212","nonce":"13a9002928814ebdb5e542d7e1723a28"},"$type":"AuthorizeRequestValidationLog"}
2019-04-14 02:18:13.561 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-14 02:18:13.562 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-14 02:18:13.563 +08:00 [DBG] Creating Implicit Flow response.
2019-04-14 02:18:13.563 +08:00 [DBG] Getting claims for access token for client: js
2019-04-14 02:18:13.564 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-14 02:18:13.579 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-14 02:18:13.580 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-14 02:18:13.586 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile role api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****XSAg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3u5g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGD0T:0000000C","TimeStamp":"2019-04-13T18:18:13.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-14 02:18:13.589 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"49965265b46a4f1b865e44e487453212","Scope":"openid profile role api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-14 02:18:13.594 +08:00 [DBG] Augmenting SignInContext
2019-04-14 02:18:13.595 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-14 02:18:14.067 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:18:14.069 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 02:18:14.072 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:18:14.073 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:18:14.074 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 02:18:14.075 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 02:18:14.075 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 02:18:14.076 +08:00 [DBG] Start discovery request
2019-04-14 02:18:14.098 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 02:18:14.105 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:18:14.106 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-14 02:18:14.110 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:18:14.111 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:18:14.111 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 02:18:14.112 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 02:18:14.113 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 02:18:14.113 +08:00 [DBG] Start key discovery request
2019-04-14 02:18:14.142 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:18:14.146 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:18:14.147 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-14 02:18:14.150 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:18:14.151 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:18:14.152 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-14 02:18:14.152 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-14 02:18:14.156 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-14 02:18:14.157 +08:00 [DBG] Start userinfo request
2019-04-14 02:18:14.158 +08:00 [DBG] Bearer token found in header
2019-04-14 02:18:14.193 +08:00 [DBG] js found in database: true
2019-04-14 02:18:14.193 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 02:18:14.199 +08:00 [DBG] js found in database: true
2019-04-14 02:18:14.200 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 02:18:14.204 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-14 02:18:14.208 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555179493,"exp":1555183093,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555179493,"idp":"local","role":"admin","scope":["openid","profile","role","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-14 02:18:14.221 +08:00 [DBG] Creating userinfo response
2019-04-14 02:18:14.221 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-14 02:18:14.222 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-14 02:18:14.233 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:18:14.234 +08:00 [DBG] Requested claim types: a b name rolel
2019-04-14 02:18:14.235 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-14 02:18:14.238 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 02:18:14.251 +08:00 [INF] Profile service returned the following claim types: name
2019-04-14 02:18:14.253 +08:00 [DBG] End userinfo request
2019-04-14 02:18:14.278 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 02:18:14.280 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 02:18:14.281 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 02:18:14.281 +08:00 [DBG] Rendering check session result
2019-04-14 02:18:14.632 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:18:14.634 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 02:18:14.637 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:18:14.638 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:18:14.639 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 02:18:14.640 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 02:18:14.640 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 02:18:14.641 +08:00 [DBG] Start discovery request
2019-04-14 02:18:14.661 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 02:18:14.664 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 02:18:14.665 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 02:18:14.666 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 02:18:14.667 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 02:18:14.667 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 02:18:14.668 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 02:18:14.669 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 02:18:14.670 +08:00 [DBG] Start discovery request
2019-04-14 02:18:14.674 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 02:18:14.680 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 02:18:14.681 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 02:18:14.681 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 02:18:14.682 +08:00 [DBG] Rendering check session result
2019-04-14 02:18:14.684 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 02:18:14.686 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 02:18:14.688 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 02:18:14.689 +08:00 [DBG] Rendering check session result
2019-04-14 02:42:16.425 +08:00 [INF] Removing 0 grants
2019-04-14 03:23:21.493 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-14 03:23:21.497 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-14 03:23:21.499 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-14 03:23:21.500 +08:00 [DBG] Start authorize request
2019-04-14 03:23:21.501 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-14 03:23:21.502 +08:00 [DBG] Start authorize request protocol validation
2019-04-14 03:23:21.539 +08:00 [DBG] js found in database: true
2019-04-14 03:23:21.539 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 03:23:21.551 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 03:23:21.664 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 03:23:21.668 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 03:23:21.674 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-14 03:23:21.678 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-14 03:23:21.679 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile role api1","State":"bb5dbf41ed5f401d8c59802cf345bc7b","UiLocales":null,"Nonce":"2b263e0118b946c2b880c444be716064","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"dc26a1b7a5a5601e7ed704ac7dd3a364","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile role api1","state":"bb5dbf41ed5f401d8c59802cf345bc7b","nonce":"2b263e0118b946c2b880c444be716064"},"$type":"AuthorizeRequestValidationLog"}
2019-04-14 03:23:21.700 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-14 03:23:21.702 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-14 03:23:21.709 +08:00 [DBG] Creating Implicit Flow response.
2019-04-14 03:23:21.710 +08:00 [DBG] Getting claims for access token for client: js
2019-04-14 03:23:21.711 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-14 03:23:21.728 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-14 03:23:21.729 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-14 03:23:21.740 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile role api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****VQqg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vcpw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVM58EGD10:00000001","TimeStamp":"2019-04-13T19:23:21.0000000Z","ProcessId":17860,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-14 03:23:21.759 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"bb5dbf41ed5f401d8c59802cf345bc7b","Scope":"openid profile role api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-14 03:23:21.969 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 03:23:21.974 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 03:23:21.980 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 03:23:21.982 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 03:23:21.983 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 03:23:21.986 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 03:23:21.988 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 03:23:21.988 +08:00 [DBG] Start discovery request
2019-04-14 03:23:22.009 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 03:23:22.017 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 03:23:22.019 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-14 03:23:22.024 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 03:23:22.025 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 03:23:22.026 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-14 03:23:22.026 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-14 03:23:22.028 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-14 03:23:22.029 +08:00 [DBG] Start key discovery request
2019-04-14 03:23:22.068 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 03:23:22.074 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 03:23:22.075 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-14 03:23:22.078 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 03:23:22.079 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 03:23:22.080 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-14 03:23:22.083 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-14 03:23:22.083 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-14 03:23:22.084 +08:00 [DBG] Start userinfo request
2019-04-14 03:23:22.084 +08:00 [DBG] Bearer token found in header
2019-04-14 03:23:22.094 +08:00 [DBG] js found in database: true
2019-04-14 03:23:22.095 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 03:23:22.101 +08:00 [DBG] js found in database: true
2019-04-14 03:23:22.102 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-14 03:23:22.104 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-14 03:23:22.105 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555183401,"exp":1555187001,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555179493,"idp":"local","role":"admin","scope":["openid","profile","role","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-14 03:23:22.110 +08:00 [DBG] Creating userinfo response
2019-04-14 03:23:22.111 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-14 03:23:22.111 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-14 03:23:22.114 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 03:23:22.118 +08:00 [DBG] Requested claim types: a b name rolel
2019-04-14 03:23:22.118 +08:00 [DBG] Scopes in access token: openid profile role api1
2019-04-14 03:23:22.121 +08:00 [DBG] Found ["openid","profile","role"] identity scopes in database
2019-04-14 03:23:22.127 +08:00 [INF] Profile service returned the following claim types: name
2019-04-14 03:23:22.128 +08:00 [DBG] End userinfo request
2019-04-14 03:23:22.152 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 03:23:22.157 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 03:23:22.159 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 03:23:22.160 +08:00 [DBG] Rendering check session result
2019-04-14 03:23:22.751 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 03:23:22.754 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 03:23:22.756 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 03:23:22.757 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 03:23:22.758 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 03:23:22.759 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 03:23:22.760 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 03:23:22.761 +08:00 [DBG] Start discovery request
2019-04-14 03:23:22.776 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 03:23:22.779 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-14 03:23:22.782 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-14 03:23:22.784 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-14 03:23:22.785 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-14 03:23:22.786 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-14 03:23:22.787 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-14 03:23:22.788 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-14 03:23:22.789 +08:00 [DBG] Start discovery request
2019-04-14 03:23:22.789 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 03:23:22.794 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-14 03:23:22.795 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 03:23:22.798 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 03:23:22.799 +08:00 [DBG] Rendering check session result
2019-04-14 03:23:22.806 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-14 03:23:22.806 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-14 03:23:22.807 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-14 03:23:22.808 +08:00 [DBG] Rendering check session result
2019-04-14 03:42:16.443 +08:00 [INF] Removing 0 grants
