2019-04-11 22:06:06.746 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-11 22:06:07.007 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-11 22:06:07.020 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-11 22:06:07.022 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-11 22:06:07.027 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-11 22:06:07.027 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-11 22:06:07.029 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-11 22:06:07.163 +08:00 [DBG] Starting grant removal
2019-04-11 22:06:12.997 +08:00 [DBG] Login Url: /Account/Login
2019-04-11 22:06:13.002 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-11 22:06:13.008 +08:00 [DBG] Logout Url: /Account/Logout
2019-04-11 22:06:13.010 +08:00 [DBG] ConsentUrl Url: /consent
2019-04-11 22:06:13.011 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-11 22:06:13.012 +08:00 [DBG] Error Url: /home/error
2019-04-11 22:06:13.018 +08:00 [DBG] Error Id Parameter: errorId
2019-04-11 22:06:13.058 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-11 22:06:13.085 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-11 22:06:13.090 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-11 22:06:13.107 +08:00 [DBG] Start discovery request
2019-04-11 22:06:14.901 +08:00 [DBG] Found [] as all scopes in database
2019-04-11 22:06:16.538 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-11 22:06:16.541 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-11 22:06:16.543 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-11 22:06:16.545 +08:00 [DBG] Start discovery request
2019-04-11 22:06:16.553 +08:00 [DBG] Found [] as all scopes in database
2019-04-11 22:06:25.389 +08:00 [DBG] TaskCanceledException. Exiting.
2019-04-11 22:06:25.428 +08:00 [DBG] Stopping grant removal
2019-04-11 22:35:15.248 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-11 22:35:15.535 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-11 22:35:15.541 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-11 22:35:15.544 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-11 22:35:15.545 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-11 22:35:15.548 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-11 22:35:15.565 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-11 22:35:15.717 +08:00 [DBG] Starting grant removal
2019-04-11 22:36:39.120 +08:00 [DBG] CORS request made for path: /api/Configuration/client/create from origin: http://127.0.0.1:8080 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-11 22:36:39.181 +08:00 [DBG] Login Url: /Account/Login
2019-04-11 22:36:39.182 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-11 22:36:39.197 +08:00 [DBG] Logout Url: /Account/Logout
2019-04-11 22:36:39.204 +08:00 [DBG] ConsentUrl Url: /consent
2019-04-11 22:36:39.206 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-11 22:36:39.208 +08:00 [DBG] Error Url: /home/error
2019-04-11 22:36:39.210 +08:00 [DBG] Error Id Parameter: errorId
2019-04-11 22:36:43.782 +08:00 [DBG] CORS request made for path: /api/Configuration/client/create from origin: http://127.0.0.1:8080 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-11 22:38:14.316 +08:00 [DBG] TaskCanceledException. Exiting.
2019-04-11 22:38:14.330 +08:00 [DBG] Stopping grant removal
2019-04-11 22:38:41.145 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-11 22:38:41.407 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-11 22:38:41.411 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-11 22:38:41.413 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-11 22:38:41.414 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-11 22:38:41.416 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-11 22:38:41.419 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-11 22:38:41.562 +08:00 [DBG] Starting grant removal
2019-04-11 23:17:12.555 +08:00 [DBG] TaskCanceledException. Exiting.
2019-04-11 23:17:12.579 +08:00 [DBG] Stopping grant removal
2019-04-11 23:17:22.810 +08:00 [WRN] User c97b3e8e-8320-4753-9838-dfa0706ad0a3 password validation failed: PasswordRequiresNonAlphanumeric;PasswordRequiresLower;PasswordRequiresUpper.
2019-04-11 23:20:47.651 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-11 23:20:47.908 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-11 23:20:47.913 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-11 23:20:47.916 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-11 23:20:47.917 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-11 23:20:47.918 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-11 23:20:47.920 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-11 23:20:48.063 +08:00 [DBG] Starting grant removal
2019-04-12 00:20:49.309 +08:00 [INF] Removing 0 grants
2019-04-12 01:20:49.363 +08:00 [INF] Removing 0 grants
2019-04-12 21:06:55.132 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-12 21:06:55.471 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-12 21:06:55.476 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-12 21:06:55.479 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-12 21:06:55.481 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-12 21:06:55.498 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-12 21:06:55.504 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-12 21:06:55.690 +08:00 [DBG] Starting grant removal
2019-04-12 22:06:56.991 +08:00 [INF] Removing 0 grants
2019-04-12 22:07:51.478 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://127.0.0.1:8080
2019-04-12 22:07:52.136 +08:00 [DBG] Origin http://127.0.0.1:8080 is allowed: false
2019-04-12 22:07:52.145 +08:00 [WRN] CorsPolicyService did not allow origin: http://127.0.0.1:8080
2019-04-12 22:07:52.185 +08:00 [DBG] Login Url: /Account/Login
2019-04-12 22:07:52.187 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-12 22:07:52.193 +08:00 [DBG] Logout Url: /Account/Logout
2019-04-12 22:07:52.194 +08:00 [DBG] ConsentUrl Url: /consent
2019-04-12 22:07:52.196 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-12 22:07:52.197 +08:00 [DBG] Error Url: /home/error
2019-04-12 22:07:52.199 +08:00 [DBG] Error Id Parameter: errorId
2019-04-12 22:07:52.240 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:07:52.262 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:07:52.269 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:07:52.278 +08:00 [DBG] Start discovery request
2019-04-12 22:07:53.213 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:08:27.071 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://127.0.0.1:8080
2019-04-12 22:08:27.087 +08:00 [DBG] Origin http://127.0.0.1:8080 is allowed: false
2019-04-12 22:08:27.096 +08:00 [WRN] CorsPolicyService did not allow origin: http://127.0.0.1:8080
2019-04-12 22:08:27.099 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:08:27.101 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:08:27.102 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:08:27.104 +08:00 [DBG] Start discovery request
2019-04-12 22:08:27.109 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:10:24.390 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-12 22:10:24.639 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-12 22:10:24.658 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-12 22:10:24.663 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-12 22:10:24.665 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-12 22:10:24.668 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-12 22:10:24.688 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-12 22:10:24.860 +08:00 [DBG] Starting grant removal
2019-04-12 22:10:36.086 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-12 22:10:36.363 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-12 22:10:36.366 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-12 22:10:36.370 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-12 22:10:36.376 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-12 22:10:36.385 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-12 22:10:36.392 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-12 22:10:36.527 +08:00 [DBG] Starting grant removal
2019-04-12 22:10:44.214 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:10:44.264 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://127.0.0.1:8080
2019-04-12 22:10:45.810 +08:00 [DBG] Origin http://127.0.0.1:8080 is allowed: false
2019-04-12 22:10:45.820 +08:00 [WRN] CorsPolicyService did not allow origin: http://127.0.0.1:8080
2019-04-12 22:10:45.858 +08:00 [DBG] Login Url: /Account/Login
2019-04-12 22:10:45.861 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-12 22:10:45.865 +08:00 [DBG] Logout Url: /Account/Logout
2019-04-12 22:10:45.867 +08:00 [DBG] ConsentUrl Url: /consent
2019-04-12 22:10:45.869 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-12 22:10:45.870 +08:00 [DBG] Error Url: /home/error
2019-04-12 22:10:45.877 +08:00 [DBG] Error Id Parameter: errorId
2019-04-12 22:10:45.935 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:10:45.960 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:10:45.962 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:10:45.979 +08:00 [DBG] Start discovery request
2019-04-12 22:10:46.965 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:10:47.087 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-12 22:10:47.108 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-12 22:10:47.112 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-12 22:10:47.131 +08:00 [DBG] Processing signout request for anonymous
2019-04-12 22:10:47.139 +08:00 [DBG] Start end session request validation
2019-04-12 22:10:47.163 +08:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"unknown","PostLogOutUri":null,"State":null,"Raw":{"post_logout_redirect_uri":"http://localhost:8080/index.html"},"$type":"EndSessionRequestValidationLog"}
2019-04-12 22:10:47.185 +08:00 [DBG] Success validating end session request from null
2019-04-12 22:14:05.750 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:14:05.753 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:14:05.763 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:14:05.765 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:14:05.767 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:14:05.769 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:14:05.770 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:14:05.771 +08:00 [DBG] Start discovery request
2019-04-12 22:14:05.778 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:14:05.796 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-12 22:14:05.799 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-12 22:14:05.802 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-12 22:14:05.804 +08:00 [DBG] Processing signout request for anonymous
2019-04-12 22:14:05.805 +08:00 [DBG] Start end session request validation
2019-04-12 22:14:05.806 +08:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"unknown","PostLogOutUri":null,"State":null,"Raw":{"post_logout_redirect_uri":"http://localhost:8080/index.html"},"$type":"EndSessionRequestValidationLog"}
2019-04-12 22:14:05.811 +08:00 [DBG] Success validating end session request from null
2019-04-12 22:16:09.734 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:16:09.736 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:16:09.740 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:16:09.742 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:16:09.744 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:16:09.750 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:16:09.751 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:16:09.753 +08:00 [DBG] Start discovery request
2019-04-12 22:16:09.759 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:16:09.776 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:16:09.786 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:16:09.789 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:16:09.797 +08:00 [DBG] Start authorize request
2019-04-12 22:16:09.804 +08:00 [DBG] No user present in authorize request
2019-04-12 22:16:09.817 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:16:10.492 +08:00 [DBG] js found in database: true
2019-04-12 22:16:10.502 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:16:10.516 +08:00 [ERR] Invalid redirect_uri: http://localhost:8080/login/notify
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:5003/callback.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/login/notify","response_type":"id_token token","scope":"openid profile api1","state":"b03e552b1a7e409282eed47972c19886","nonce":"8f8637212cc4467a97a1682e6564e7ee"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:16:10.560 +08:00 [ERR] Request validation failed
2019-04-12 22:16:10.563 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:5003/callback.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/login/notify","response_type":"id_token token","scope":"openid profile api1","state":"b03e552b1a7e409282eed47972c19886","nonce":"8f8637212cc4467a97a1682e6564e7ee"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:16:10.643 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLLVA2JHF7LA:00000004","TimeStamp":"2019-04-12T14:16:10.0000000Z","ProcessId":17944,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-04-12 22:20:28.987 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:20:28.990 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:20:28.998 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:20:29.002 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:20:29.005 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:20:29.007 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:20:29.008 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:20:29.013 +08:00 [DBG] Start discovery request
2019-04-12 22:20:29.020 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:20:29.041 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:20:29.052 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:20:29.055 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:20:29.057 +08:00 [DBG] Start authorize request
2019-04-12 22:20:29.060 +08:00 [DBG] No user present in authorize request
2019-04-12 22:20:29.062 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:20:29.077 +08:00 [DBG] js found in database: true
2019-04-12 22:20:29.078 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:20:29.086 +08:00 [ERR] Invalid grant type for client: implicit
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"","State":"c84971e74cca44a6ad4f90f557aed52a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"c84971e74cca44a6ad4f90f557aed52a","nonce":"9730e11e64c24e07941741bcb4498282"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:20:29.111 +08:00 [ERR] Request validation failed
2019-04-12 22:20:29.112 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"","State":"c84971e74cca44a6ad4f90f557aed52a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"c84971e74cca44a6ad4f90f557aed52a","nonce":"9730e11e64c24e07941741bcb4498282"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:20:29.145 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":"implicit","Error":"unauthorized_client","ErrorDescription":"Invalid grant type for client","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLLVA2JHF7LE:00000002","TimeStamp":"2019-04-12T14:20:29.0000000Z","ProcessId":17944,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-04-12 22:21:26.064 +08:00 [INF] Starting IdentityServer4 version 2.4.0.0
2019-04-12 22:21:26.321 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-04-12 22:21:26.338 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-04-12 22:21:26.349 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-04-12 22:21:26.351 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-04-12 22:21:26.354 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-04-12 22:21:26.360 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-04-12 22:21:26.510 +08:00 [DBG] Starting grant removal
2019-04-12 22:21:30.502 +08:00 [DBG] Login Url: /Account/Login
2019-04-12 22:21:30.506 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-04-12 22:21:30.510 +08:00 [DBG] Logout Url: /Account/Logout
2019-04-12 22:21:30.513 +08:00 [DBG] ConsentUrl Url: /consent
2019-04-12 22:21:30.520 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2019-04-12 22:21:30.523 +08:00 [DBG] Error Url: /home/error
2019-04-12 22:21:30.524 +08:00 [DBG] Error Id Parameter: errorId
2019-04-12 22:21:40.358 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:21:40.373 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:21:41.966 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:21:41.979 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:21:41.992 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:21:42.012 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:21:42.019 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:21:42.031 +08:00 [DBG] Start discovery request
2019-04-12 22:21:43.087 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:21:43.151 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:21:43.165 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:21:43.179 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:21:43.207 +08:00 [DBG] Start authorize request
2019-04-12 22:21:43.228 +08:00 [DBG] No user present in authorize request
2019-04-12 22:21:43.240 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:21:43.632 +08:00 [DBG] js found in database: true
2019-04-12 22:21:43.642 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:21:43.682 +08:00 [ERR] Client requested access token - but client is not configured to receive access tokens via browser
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"","State":"e3e6cc6785db4d859f522680a654b52e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"e3e6cc6785db4d859f522680a654b52e","nonce":"f638e4019b8d4d168f3f2916d8945b2f"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:21:43.728 +08:00 [ERR] Request validation failed
2019-04-12 22:21:43.729 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"","State":"e3e6cc6785db4d859f522680a654b52e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"e3e6cc6785db4d859f522680a654b52e","nonce":"f638e4019b8d4d168f3f2916d8945b2f"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:21:43.792 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":"implicit","Error":"invalid_request","ErrorDescription":"Client not configured to receive access tokens via browser","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLLVA8K4CFUJ:00000003","TimeStamp":"2019-04-12T14:21:43.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-04-12 22:23:20.604 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:20.611 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:20.618 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:20.620 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:20.621 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:20.628 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:20.631 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:20.633 +08:00 [DBG] Start discovery request
2019-04-12 22:23:20.638 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:20.661 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:20.663 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:20.667 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:20.669 +08:00 [DBG] Start authorize request
2019-04-12 22:23:20.669 +08:00 [DBG] No user present in authorize request
2019-04-12 22:23:20.670 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:20.677 +08:00 [DBG] js found in database: true
2019-04-12 22:23:20.678 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:20.774 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:21.120 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:21.150 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:21.166 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:21.188 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:21.192 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"24af2c0f1f6d4b3cace311559db054fb","UiLocales":null,"Nonce":"448a3b204e4742b18bc635dd3008678b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"24af2c0f1f6d4b3cace311559db054fb","nonce":"448a3b204e4742b18bc635dd3008678b"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:21.271 +08:00 [INF] Showing login: User is not authenticated
2019-04-12 22:23:21.327 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:21.337 +08:00 [DBG] js found in database: true
2019-04-12 22:23:21.338 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:21.353 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:21.363 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:21.380 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:21.387 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:21.392 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:21.410 +08:00 [DBG] js found in database: true
2019-04-12 22:23:21.411 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:44.221 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:44.224 +08:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-12 22:23:44.287 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:44.292 +08:00 [DBG] js found in database: true
2019-04-12 22:23:44.293 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:44.302 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:44.306 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:44.312 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:44.320 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:44.322 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:44.723 +08:00 [DBG] Augmenting SignInContext
2019-04-12 22:23:44.726 +08:00 [DBG] Adding idp claim with value: local
2019-04-12 22:23:44.727 +08:00 [DBG] Adding amr claim with value: pwd
2019-04-12 22:23:44.728 +08:00 [DBG] Adding auth_time claim with value: 1555079024
2019-04-12 22:23:44.745 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-12 22:23:44.757 +08:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"admin","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLLVA8K4CFUJ:00000008","TimeStamp":"2019-04-12T14:23:44.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-12 22:23:44.805 +08:00 [DBG] js found in database: true
2019-04-12 22:23:44.810 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:44.874 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-12 22:23:44.880 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-12 22:23:44.884 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-12 22:23:44.905 +08:00 [DBG] Start authorize callback request
2019-04-12 22:23:44.915 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:44.917 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:44.940 +08:00 [DBG] js found in database: true
2019-04-12 22:23:44.944 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:44.972 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:44.990 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:44.998 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:45.006 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:45.021 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:45.030 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"24af2c0f1f6d4b3cace311559db054fb","UiLocales":null,"Nonce":"448a3b204e4742b18bc635dd3008678b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"24af2c0f1f6d4b3cace311559db054fb","nonce":"448a3b204e4742b18bc635dd3008678b"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:45.225 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: false
2019-04-12 22:23:45.243 +08:00 [DBG] user_consent grant with value: js|a23e8a2b-b91b-434a-8270-69230f1246a1 not found in store.
2019-04-12 22:23:45.268 +08:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-12 22:23:45.284 +08:00 [INF] Showing consent: User has not yet consented
2019-04-12 22:23:45.339 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:45.351 +08:00 [DBG] js found in database: true
2019-04-12 22:23:45.354 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:45.374 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:45.404 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:45.411 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:45.438 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:45.451 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:45.477 +08:00 [DBG] js found in database: true
2019-04-12 22:23:45.478 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:45.486 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:45.492 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:45.718 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:47.432 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:47.438 +08:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-12 22:23:47.461 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:47.469 +08:00 [DBG] js found in database: true
2019-04-12 22:23:47.475 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:47.481 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:47.486 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:47.490 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:47.496 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:47.501 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:47.507 +08:00 [INF] {"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RequestedScopes":["openid","profile","api1"],"GrantedScopes":["openid","profile","api1"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000004","TimeStamp":"2019-04-12T14:23:47.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-04-12 22:23:47.560 +08:00 [DBG] js found in database: true
2019-04-12 22:23:47.564 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:47.649 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-12 22:23:47.650 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-12 22:23:47.653 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-12 22:23:47.659 +08:00 [DBG] Start authorize callback request
2019-04-12 22:23:47.663 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:47.675 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:47.684 +08:00 [DBG] js found in database: true
2019-04-12 22:23:47.686 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:47.693 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:47.699 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:47.710 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:47.715 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:47.717 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:47.723 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"24af2c0f1f6d4b3cace311559db054fb","UiLocales":null,"Nonce":"448a3b204e4742b18bc635dd3008678b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"24af2c0f1f6d4b3cace311559db054fb","nonce":"448a3b204e4742b18bc635dd3008678b"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:47.765 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: false
2019-04-12 22:23:47.774 +08:00 [DBG] user_consent grant with value: js|a23e8a2b-b91b-434a-8270-69230f1246a1 not found in store.
2019-04-12 22:23:47.777 +08:00 [DBG] Found no prior consent from consent store, consent is required
2019-04-12 22:23:47.788 +08:00 [INF] User consented to scopes: ["openid","profile","api1"]
2019-04-12 22:23:47.792 +08:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2019-04-12 22:23:47.803 +08:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:47.851 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= not found in database
2019-04-12 22:23:48.043 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:48.073 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:48.074 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:48.219 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:48.227 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:48.261 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****sdJQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****c0Dg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000006","TimeStamp":"2019-04-12T14:23:48.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:48.305 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"24af2c0f1f6d4b3cace311559db054fb","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:48.352 +08:00 [DBG] Augmenting SignInContext
2019-04-12 22:23:48.354 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-12 22:23:50.409 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:50.413 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:50.417 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:50.420 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:50.431 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:50.437 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:50.444 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:50.445 +08:00 [DBG] Start discovery request
2019-04-12 22:23:50.454 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:50.669 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:50.673 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:50.677 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:50.679 +08:00 [DBG] Start authorize request
2019-04-12 22:23:50.680 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:50.687 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:50.696 +08:00 [DBG] js found in database: true
2019-04-12 22:23:50.697 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:50.702 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:50.713 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:50.720 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:50.727 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:50.729 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:50.731 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"2d7ddc0f0dae49308fcec49bdae9b652","UiLocales":null,"Nonce":"71c5748fd5734779a33d1987952b73b3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"2d7ddc0f0dae49308fcec49bdae9b652","nonce":"71c5748fd5734779a33d1987952b73b3"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:50.769 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:50.774 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:50.776 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:50.780 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:50.784 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:50.795 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:50.802 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:50.812 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****TtIw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aEHQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000007","TimeStamp":"2019-04-12T14:23:50.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:50.830 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"2d7ddc0f0dae49308fcec49bdae9b652","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:51.714 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:51.722 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:51.731 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:51.739 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:51.743 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:51.745 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:51.751 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:51.753 +08:00 [DBG] Start discovery request
2019-04-12 22:23:51.759 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:52.037 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:52.041 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:52.049 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:52.052 +08:00 [DBG] Start authorize request
2019-04-12 22:23:52.053 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:52.055 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:52.061 +08:00 [DBG] js found in database: true
2019-04-12 22:23:52.062 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:52.068 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:52.072 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:52.077 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:52.082 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:52.083 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:52.085 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"d5f98e7b211a443c9bf4474f2a4e3497","UiLocales":null,"Nonce":"954e9b227c524fdc8f2085e7f4f971c5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"d5f98e7b211a443c9bf4474f2a4e3497","nonce":"954e9b227c524fdc8f2085e7f4f971c5"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:52.104 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:52.106 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:52.110 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:52.114 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:52.116 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:52.124 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:52.127 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:52.136 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****gtUA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****PoDw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000008","TimeStamp":"2019-04-12T14:23:52.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:52.156 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"d5f98e7b211a443c9bf4474f2a4e3497","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:53.033 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:53.039 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:53.049 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:53.054 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:53.057 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:53.067 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:53.069 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:53.071 +08:00 [DBG] Start discovery request
2019-04-12 22:23:53.077 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:53.299 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:53.304 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:53.307 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:53.316 +08:00 [DBG] Start authorize request
2019-04-12 22:23:53.317 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:53.318 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:53.324 +08:00 [DBG] js found in database: true
2019-04-12 22:23:53.328 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:53.333 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:53.337 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:53.339 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:53.344 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:53.350 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:53.352 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"6706fb459d874d978c597e4987b03eab","UiLocales":null,"Nonce":"5789f3df878d490ea4226155237ef2e0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"6706fb459d874d978c597e4987b03eab","nonce":"5789f3df878d490ea4226155237ef2e0"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:53.373 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:53.378 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:53.381 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:53.382 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:53.383 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:53.391 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:53.394 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:53.400 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****pCKg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****adfA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000009","TimeStamp":"2019-04-12T14:23:53.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:53.416 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"6706fb459d874d978c597e4987b03eab","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:54.215 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:54.219 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:54.224 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:54.226 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:54.228 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:54.235 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:54.244 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:54.254 +08:00 [DBG] Start discovery request
2019-04-12 22:23:54.263 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:54.479 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:54.488 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:54.491 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:54.495 +08:00 [DBG] Start authorize request
2019-04-12 22:23:54.499 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:54.509 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:54.520 +08:00 [DBG] js found in database: true
2019-04-12 22:23:54.520 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:54.529 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:54.542 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:54.545 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:54.551 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:54.555 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:54.557 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"644fa121ee704458bcc295913c5f7842","UiLocales":null,"Nonce":"7e5126fff7c6409397d36013092a928b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"644fa121ee704458bcc295913c5f7842","nonce":"7e5126fff7c6409397d36013092a928b"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:54.583 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:54.585 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:54.586 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:54.588 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:54.589 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:54.616 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:54.618 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:54.641 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****hxJw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****bzDQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000000A","TimeStamp":"2019-04-12T14:23:54.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:54.654 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"644fa121ee704458bcc295913c5f7842","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:55.638 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:55.647 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:55.652 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:55.654 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:55.661 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:55.666 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:55.671 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:55.680 +08:00 [DBG] Start discovery request
2019-04-12 22:23:55.688 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:55.915 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:55.918 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:55.926 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:55.930 +08:00 [DBG] Start authorize request
2019-04-12 22:23:55.931 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:55.935 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:55.940 +08:00 [DBG] js found in database: true
2019-04-12 22:23:55.940 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:55.944 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:55.948 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:55.952 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:55.962 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:55.963 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:55.966 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"4e897defe4524d29a510016eab7ce64e","UiLocales":null,"Nonce":"57a61e3a9cd047fa9d19743f7c85f41a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"4e897defe4524d29a510016eab7ce64e","nonce":"57a61e3a9cd047fa9d19743f7c85f41a"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:55.996 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:56.002 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:56.008 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:56.009 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:56.010 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:56.032 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:56.035 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:56.047 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****CS8w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5JqA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000000B","TimeStamp":"2019-04-12T14:23:56.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:56.056 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"4e897defe4524d29a510016eab7ce64e","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:56.883 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:56.892 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:56.896 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:56.897 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:56.898 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:56.899 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:56.901 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:56.907 +08:00 [DBG] Start discovery request
2019-04-12 22:23:56.919 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:57.154 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:57.158 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:57.165 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:57.166 +08:00 [DBG] Start authorize request
2019-04-12 22:23:57.170 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:57.172 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:57.183 +08:00 [DBG] js found in database: true
2019-04-12 22:23:57.186 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:57.199 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:57.211 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:57.213 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:57.218 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:57.224 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:57.228 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"c30d63153ac248a6a3e833ddb04b1a19","UiLocales":null,"Nonce":"fb2f4a05052d4f7ea78b31c97073a485","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"c30d63153ac248a6a3e833ddb04b1a19","nonce":"fb2f4a05052d4f7ea78b31c97073a485"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:57.262 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:57.264 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:57.269 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:57.270 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:57.271 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:57.292 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:57.298 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:57.310 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****P3Vw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9SRA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000000C","TimeStamp":"2019-04-12T14:23:57.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:57.347 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"c30d63153ac248a6a3e833ddb04b1a19","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:58.132 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:58.138 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:58.150 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:58.154 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:58.161 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:58.179 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:58.186 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:58.195 +08:00 [DBG] Start discovery request
2019-04-12 22:23:58.199 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:58.400 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:58.413 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:58.417 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:58.419 +08:00 [DBG] Start authorize request
2019-04-12 22:23:58.420 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:58.425 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:58.433 +08:00 [DBG] js found in database: true
2019-04-12 22:23:58.436 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:58.447 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:58.454 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:58.457 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:58.468 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:58.488 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:58.508 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"53d3049fee50406980f453598277212b","UiLocales":null,"Nonce":"11d5093710bf453d85642c9726f0c698","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"53d3049fee50406980f453598277212b","nonce":"11d5093710bf453d85642c9726f0c698"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:58.542 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:58.546 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:58.549 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:58.550 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:58.551 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:58.568 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:58.570 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:58.592 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****sJzA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****4Sbg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000000D","TimeStamp":"2019-04-12T14:23:58.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:58.615 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"53d3049fee50406980f453598277212b","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:23:59.440 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:23:59.443 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:23:59.448 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:23:59.450 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:23:59.451 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:23:59.456 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:23:59.471 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:23:59.477 +08:00 [DBG] Start discovery request
2019-04-12 22:23:59.485 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:23:59.730 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:23:59.733 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:23:59.739 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:23:59.743 +08:00 [DBG] Start authorize request
2019-04-12 22:23:59.744 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:59.746 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:23:59.759 +08:00 [DBG] js found in database: true
2019-04-12 22:23:59.763 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:23:59.788 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:59.809 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:59.816 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:23:59.824 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:23:59.827 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:23:59.837 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"df2b22c5b68c47c5ab7b3e4758410f5b","UiLocales":null,"Nonce":"9bcbf1ad33ad4882b9b01b41cb8b1180","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"df2b22c5b68c47c5ab7b3e4758410f5b","nonce":"9bcbf1ad33ad4882b9b01b41cb8b1180"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:23:59.869 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:23:59.871 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:23:59.880 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:23:59.881 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:23:59.882 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:23:59.897 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:23:59.899 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:23:59.914 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****lzhg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Cpdw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000000E","TimeStamp":"2019-04-12T14:23:59.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:23:59.936 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"df2b22c5b68c47c5ab7b3e4758410f5b","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:00.790 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:00.795 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:00.805 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:00.816 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:00.820 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:00.825 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:00.835 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:00.846 +08:00 [DBG] Start discovery request
2019-04-12 22:24:00.860 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:01.084 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:01.087 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:01.092 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:01.097 +08:00 [DBG] Start authorize request
2019-04-12 22:24:01.100 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:01.102 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:01.111 +08:00 [DBG] js found in database: true
2019-04-12 22:24:01.112 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:01.116 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:01.123 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:01.134 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:01.140 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:01.143 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:01.146 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"65c385f8103f40b9bb3ab7b1b2f45e36","UiLocales":null,"Nonce":"27183f6f40db4d76aa9b25e8555a27d8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"65c385f8103f40b9bb3ab7b1b2f45e36","nonce":"27183f6f40db4d76aa9b25e8555a27d8"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:01.174 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:01.177 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:01.182 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:01.185 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:01.191 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:01.203 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:01.205 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:01.219 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****4dkg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qLIw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000000F","TimeStamp":"2019-04-12T14:24:01.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:01.233 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"65c385f8103f40b9bb3ab7b1b2f45e36","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:02.086 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:02.103 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:02.116 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:02.119 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:02.120 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:02.129 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:02.131 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:02.132 +08:00 [DBG] Start discovery request
2019-04-12 22:24:02.138 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:02.384 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:02.393 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:02.394 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:02.396 +08:00 [DBG] Start authorize request
2019-04-12 22:24:02.397 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:02.400 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:02.411 +08:00 [DBG] js found in database: true
2019-04-12 22:24:02.412 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:02.416 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:02.422 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:02.434 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:02.446 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:02.447 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:02.450 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"61da377b59bd4c09a7f2cf4c7e0d6482","UiLocales":null,"Nonce":"3087d43bc3b74a82813048d080de5ca4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"61da377b59bd4c09a7f2cf4c7e0d6482","nonce":"3087d43bc3b74a82813048d080de5ca4"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:02.480 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:02.483 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:02.487 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:02.488 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:02.491 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:02.505 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:02.507 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:02.518 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****sDqQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2ZgQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000010","TimeStamp":"2019-04-12T14:24:02.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:02.539 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"61da377b59bd4c09a7f2cf4c7e0d6482","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:03.347 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:03.355 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:03.366 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:03.368 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:03.370 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:03.381 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:03.385 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:03.396 +08:00 [DBG] Start discovery request
2019-04-12 22:24:03.402 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:03.605 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:03.609 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:03.611 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:03.613 +08:00 [DBG] Start authorize request
2019-04-12 22:24:03.614 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:03.616 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:03.625 +08:00 [DBG] js found in database: true
2019-04-12 22:24:03.626 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:03.630 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:03.634 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:03.638 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:03.644 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:03.645 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:03.646 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"b2ebb42f609c46e9a5fb2dd7448546e5","UiLocales":null,"Nonce":"3621d1e2f5354ca49449deb58c0d3c7c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"b2ebb42f609c46e9a5fb2dd7448546e5","nonce":"3621d1e2f5354ca49449deb58c0d3c7c"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:03.672 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:03.673 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:03.679 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:03.681 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:03.683 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:03.704 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:03.709 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:03.723 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****7-IQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5M5Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000011","TimeStamp":"2019-04-12T14:24:03.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:03.739 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"b2ebb42f609c46e9a5fb2dd7448546e5","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:04.563 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:04.569 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:04.580 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:04.584 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:04.586 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:04.587 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:04.594 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:04.600 +08:00 [DBG] Start discovery request
2019-04-12 22:24:04.607 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:04.821 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:04.831 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:04.833 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:04.837 +08:00 [DBG] Start authorize request
2019-04-12 22:24:04.839 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:04.845 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:04.853 +08:00 [DBG] js found in database: true
2019-04-12 22:24:04.853 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:04.857 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:04.867 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:04.870 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:04.879 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:04.880 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:04.883 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"5f93e52259864b218de8b1528ebd1198","UiLocales":null,"Nonce":"c854d1a52daf44e786f692bfb5a237a2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"5f93e52259864b218de8b1528ebd1198","nonce":"c854d1a52daf44e786f692bfb5a237a2"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:04.903 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:04.908 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:04.912 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:04.913 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:04.914 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:04.924 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:04.926 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:04.936 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****sOfQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****k71g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000012","TimeStamp":"2019-04-12T14:24:04.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:04.947 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"5f93e52259864b218de8b1528ebd1198","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:05.803 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:05.808 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:05.822 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:05.827 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:05.830 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:05.836 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:05.838 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:05.851 +08:00 [DBG] Start discovery request
2019-04-12 22:24:05.858 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:06.118 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:06.123 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:06.131 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:06.134 +08:00 [DBG] Start authorize request
2019-04-12 22:24:06.135 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:06.143 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:06.154 +08:00 [DBG] js found in database: true
2019-04-12 22:24:06.156 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:06.165 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:06.172 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:06.181 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:06.200 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:06.203 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:06.206 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"fcd18cdf13214f97af02ba5f1d296513","UiLocales":null,"Nonce":"4e6c1bbc7bba4268968415119462de87","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"fcd18cdf13214f97af02ba5f1d296513","nonce":"4e6c1bbc7bba4268968415119462de87"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:06.232 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:06.241 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:06.245 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:06.249 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:06.253 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:06.264 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:06.268 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:06.277 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3KYA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****0vNQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000013","TimeStamp":"2019-04-12T14:24:06.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:06.296 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"fcd18cdf13214f97af02ba5f1d296513","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:07.079 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:07.084 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:07.087 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:07.088 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:07.094 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:07.099 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:07.100 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:07.104 +08:00 [DBG] Start discovery request
2019-04-12 22:24:07.111 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:07.366 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:07.369 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:07.372 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:07.378 +08:00 [DBG] Start authorize request
2019-04-12 22:24:07.380 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:07.382 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:07.387 +08:00 [DBG] js found in database: true
2019-04-12 22:24:07.389 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:07.395 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:07.399 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:07.401 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:07.408 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:07.411 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:07.414 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"a4c951f53e4f464b990b9d80cabb2265","UiLocales":null,"Nonce":"8bd4074bb28142b5b09fbc83a63613f6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"a4c951f53e4f464b990b9d80cabb2265","nonce":"8bd4074bb28142b5b09fbc83a63613f6"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:07.436 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:07.442 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:07.444 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:07.445 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:07.446 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:07.464 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:07.466 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:07.477 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****XeVg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9qcA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000014","TimeStamp":"2019-04-12T14:24:07.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:07.498 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"a4c951f53e4f464b990b9d80cabb2265","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:08.328 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:08.334 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:08.350 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:08.353 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:08.364 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:08.369 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:08.374 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:08.383 +08:00 [DBG] Start discovery request
2019-04-12 22:24:08.395 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:08.620 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:08.624 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:08.632 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:08.638 +08:00 [DBG] Start authorize request
2019-04-12 22:24:08.641 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:08.643 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:08.650 +08:00 [DBG] js found in database: true
2019-04-12 22:24:08.651 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:08.664 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:08.668 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:08.670 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:08.678 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:08.681 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:08.687 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"567bdd42464145f79df2c4432af03c10","UiLocales":null,"Nonce":"ef0e29257d1d49ccbc47a426e8e1e16d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"567bdd42464145f79df2c4432af03c10","nonce":"ef0e29257d1d49ccbc47a426e8e1e16d"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:08.703 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:08.705 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:08.710 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:08.713 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:08.714 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:08.730 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:08.734 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:08.744 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Ey8Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****nxag","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000015","TimeStamp":"2019-04-12T14:24:08.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:08.764 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"567bdd42464145f79df2c4432af03c10","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:09.583 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:09.588 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:09.604 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:09.606 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:09.611 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:09.617 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:09.620 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:09.628 +08:00 [DBG] Start discovery request
2019-04-12 22:24:09.635 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:09.887 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:09.891 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:09.895 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:09.898 +08:00 [DBG] Start authorize request
2019-04-12 22:24:09.900 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:09.909 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:09.915 +08:00 [DBG] js found in database: true
2019-04-12 22:24:09.915 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:09.918 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:09.927 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:09.931 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:09.935 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:09.941 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:09.944 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"46085f5fc6cc4296876ff55bf0581e57","UiLocales":null,"Nonce":"36747ec37fbc4325b7b1e6969891f333","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"46085f5fc6cc4296876ff55bf0581e57","nonce":"36747ec37fbc4325b7b1e6969891f333"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:09.964 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:09.966 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:09.971 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:09.973 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:09.974 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:09.985 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:09.988 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:09.995 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ngUA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****rDhA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000016","TimeStamp":"2019-04-12T14:24:09.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:10.017 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"46085f5fc6cc4296876ff55bf0581e57","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:10.822 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:10.829 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:10.833 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:10.842 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:10.852 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:10.858 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:10.869 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:10.876 +08:00 [DBG] Start discovery request
2019-04-12 22:24:10.882 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:11.089 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:11.095 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:11.102 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:11.105 +08:00 [DBG] Start authorize request
2019-04-12 22:24:11.107 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:11.113 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:11.123 +08:00 [DBG] js found in database: true
2019-04-12 22:24:11.124 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:11.133 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:11.141 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:11.149 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:11.155 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:11.157 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:11.164 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"40492a09eeaf4277bb33862256da2ad5","UiLocales":null,"Nonce":"8e7ae6bf266744ca8efd73557af04d27","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"40492a09eeaf4277bb33862256da2ad5","nonce":"8e7ae6bf266744ca8efd73557af04d27"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:11.196 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:11.197 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:11.198 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:11.199 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:11.199 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:11.214 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:11.217 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:11.224 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3wMQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kkyQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000017","TimeStamp":"2019-04-12T14:24:11.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:11.229 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"40492a09eeaf4277bb33862256da2ad5","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:12.064 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:12.067 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:12.071 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:12.072 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:12.074 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:12.075 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:12.080 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:12.082 +08:00 [DBG] Start discovery request
2019-04-12 22:24:12.091 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:12.370 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:12.375 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:12.376 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:12.377 +08:00 [DBG] Start authorize request
2019-04-12 22:24:12.377 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:12.378 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:12.383 +08:00 [DBG] js found in database: true
2019-04-12 22:24:12.386 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:12.388 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:12.392 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:12.396 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:12.399 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:12.399 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:12.400 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"d72a0d01edc744aba7ef414524f176ad","UiLocales":null,"Nonce":"6d1f8932d68c4212a92117b42cbed2d2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"d72a0d01edc744aba7ef414524f176ad","nonce":"6d1f8932d68c4212a92117b42cbed2d2"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:12.416 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:12.416 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:12.421 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:12.422 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:12.423 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:12.430 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:12.433 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:12.439 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****KlbA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kofA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000018","TimeStamp":"2019-04-12T14:24:12.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:12.445 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"d72a0d01edc744aba7ef414524f176ad","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:13.264 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:13.268 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:13.271 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:13.272 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:13.273 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:13.274 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:13.275 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:13.276 +08:00 [DBG] Start discovery request
2019-04-12 22:24:13.292 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:13.528 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:13.532 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:13.533 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:13.534 +08:00 [DBG] Start authorize request
2019-04-12 22:24:13.535 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:13.535 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:13.544 +08:00 [DBG] js found in database: true
2019-04-12 22:24:13.544 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:13.548 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:13.554 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:13.557 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:13.562 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:13.565 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:13.565 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"23bf99db0b5446f497dd9340ee3b63ae","UiLocales":null,"Nonce":"656b5e89d8524432920c7764041d7d56","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"23bf99db0b5446f497dd9340ee3b63ae","nonce":"656b5e89d8524432920c7764041d7d56"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:13.573 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:13.577 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:13.578 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:13.579 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:13.580 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:13.589 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:13.591 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:13.599 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****B5SA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****jzyw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000019","TimeStamp":"2019-04-12T14:24:13.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:13.603 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"23bf99db0b5446f497dd9340ee3b63ae","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:14.410 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:14.412 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:14.414 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:14.414 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:14.415 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:14.416 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:14.417 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:14.417 +08:00 [DBG] Start discovery request
2019-04-12 22:24:14.421 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:14.683 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:14.686 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:14.687 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:14.688 +08:00 [DBG] Start authorize request
2019-04-12 22:24:14.689 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:14.690 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:14.697 +08:00 [DBG] js found in database: true
2019-04-12 22:24:14.698 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:14.701 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:14.706 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:14.711 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:14.715 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:14.717 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:14.720 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"dfa174da661c4be0a2af339dc59aae93","UiLocales":null,"Nonce":"8708434524cc4fbe988407f42e83dc0b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"dfa174da661c4be0a2af339dc59aae93","nonce":"8708434524cc4fbe988407f42e83dc0b"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:14.729 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:14.731 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:14.732 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:14.732 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:14.733 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:14.745 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:14.745 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:14.754 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Axkg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****mKdw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000001A","TimeStamp":"2019-04-12T14:24:14.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:14.758 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"dfa174da661c4be0a2af339dc59aae93","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:15.565 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:15.569 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:15.571 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:15.572 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:15.573 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:15.574 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:15.575 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:15.581 +08:00 [DBG] Start discovery request
2019-04-12 22:24:15.588 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:15.833 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:15.835 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:15.836 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:15.836 +08:00 [DBG] Start authorize request
2019-04-12 22:24:15.837 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:15.837 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:15.842 +08:00 [DBG] js found in database: true
2019-04-12 22:24:15.843 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:15.848 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:15.852 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:15.854 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:15.857 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:15.858 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:15.859 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"17402f5d6b684d60bda716347936faf6","UiLocales":null,"Nonce":"468d227b33a04f46a934894157aef781","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"17402f5d6b684d60bda716347936faf6","nonce":"468d227b33a04f46a934894157aef781"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:15.866 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:15.869 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:15.869 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:15.870 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:15.870 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:15.877 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:15.881 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:15.886 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3kcQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****yXfA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000001B","TimeStamp":"2019-04-12T14:24:15.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:15.895 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"17402f5d6b684d60bda716347936faf6","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:16.712 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:16.716 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:16.720 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:16.722 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:16.724 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:16.728 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:16.729 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:16.730 +08:00 [DBG] Start discovery request
2019-04-12 22:24:16.737 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:17.011 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:17.014 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:17.015 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:17.016 +08:00 [DBG] Start authorize request
2019-04-12 22:24:17.017 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:17.017 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:17.022 +08:00 [DBG] js found in database: true
2019-04-12 22:24:17.025 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:17.027 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:17.031 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:17.033 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:17.038 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:17.038 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:17.039 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"2b5b7406c05f485ebb7a611768ccaf3a","UiLocales":null,"Nonce":"50e9c7133d1b4610b375163b088a8c47","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"2b5b7406c05f485ebb7a611768ccaf3a","nonce":"50e9c7133d1b4610b375163b088a8c47"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:17.046 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:17.047 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:17.047 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:17.048 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:17.048 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:17.055 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:17.058 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:17.064 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****os_A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****HFMw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000001C","TimeStamp":"2019-04-12T14:24:17.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:17.070 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"2b5b7406c05f485ebb7a611768ccaf3a","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:17.877 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:17.880 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:17.883 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:17.884 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:17.885 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:17.887 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:17.894 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:17.895 +08:00 [DBG] Start discovery request
2019-04-12 22:24:17.901 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:18.147 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:18.149 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:18.149 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:18.149 +08:00 [DBG] Start authorize request
2019-04-12 22:24:18.150 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:18.150 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:18.155 +08:00 [DBG] js found in database: true
2019-04-12 22:24:18.156 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:18.158 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:18.163 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:18.165 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:18.168 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:18.170 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:18.170 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"1baea013a48b488395663b48b8f9c0a0","UiLocales":null,"Nonce":"1d23c2e719444e11a73869160a697d87","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"1baea013a48b488395663b48b8f9c0a0","nonce":"1d23c2e719444e11a73869160a697d87"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:18.187 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:18.188 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:18.189 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:18.189 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:18.190 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:18.199 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:18.200 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:18.205 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_lVg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_Nfw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000001D","TimeStamp":"2019-04-12T14:24:18.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:18.212 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"1baea013a48b488395663b48b8f9c0a0","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:19.012 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:19.017 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:19.020 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:19.021 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:19.022 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:19.023 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:19.024 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:19.031 +08:00 [DBG] Start discovery request
2019-04-12 22:24:19.036 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:19.294 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:19.299 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:19.300 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:19.301 +08:00 [DBG] Start authorize request
2019-04-12 22:24:19.301 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:19.301 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:19.306 +08:00 [DBG] js found in database: true
2019-04-12 22:24:19.307 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:19.314 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:19.318 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:19.320 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:19.323 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:19.324 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:19.325 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"cc20f95a997a4623b8a8300cf586877f","UiLocales":null,"Nonce":"94322fc2baa84a6c9a17c397e5a52581","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"cc20f95a997a4623b8a8300cf586877f","nonce":"94322fc2baa84a6c9a17c397e5a52581"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:19.335 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:19.335 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:19.336 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:19.336 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:19.336 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:19.343 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:19.344 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:19.352 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****bCiA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****551A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000001E","TimeStamp":"2019-04-12T14:24:19.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:19.361 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"cc20f95a997a4623b8a8300cf586877f","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:20.171 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:20.178 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:20.181 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:20.182 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:20.184 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:20.185 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:20.186 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:20.191 +08:00 [DBG] Start discovery request
2019-04-12 22:24:20.195 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:20.430 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:20.431 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:20.432 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:20.434 +08:00 [DBG] Start authorize request
2019-04-12 22:24:20.435 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:20.436 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:20.442 +08:00 [DBG] js found in database: true
2019-04-12 22:24:20.444 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:20.446 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:20.449 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:20.451 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:20.454 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:20.457 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:20.458 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"8b5797314e984386acf3cb0399dd76fe","UiLocales":null,"Nonce":"ecc73107e441495991f75010899453ae","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"8b5797314e984386acf3cb0399dd76fe","nonce":"ecc73107e441495991f75010899453ae"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:20.464 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:20.470 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:20.471 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:20.472 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:20.472 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:20.479 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:20.480 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:20.485 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****mC3A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****TBEQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:0000001F","TimeStamp":"2019-04-12T14:24:20.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:20.493 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"8b5797314e984386acf3cb0399dd76fe","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:21.294 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:21.297 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:21.300 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:21.302 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:21.303 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:21.304 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:21.305 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:21.311 +08:00 [DBG] Start discovery request
2019-04-12 22:24:21.317 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:21.550 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:21.553 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:21.554 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:21.555 +08:00 [DBG] Start authorize request
2019-04-12 22:24:21.555 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:21.556 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:21.563 +08:00 [DBG] js found in database: true
2019-04-12 22:24:21.564 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:21.567 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:21.573 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:21.580 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:21.586 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:21.587 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:21.588 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"cd13c6f0fa5348ef8fc3a3b5f2658522","UiLocales":null,"Nonce":"6f6c782d22b043cabee81421b595312c","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"cd13c6f0fa5348ef8fc3a3b5f2658522","nonce":"6f6c782d22b043cabee81421b595312c"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:21.603 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:21.603 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:21.604 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:21.604 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:21.606 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:21.619 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:21.621 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:21.626 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****m02A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_a-w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000020","TimeStamp":"2019-04-12T14:24:21.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:21.636 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"cd13c6f0fa5348ef8fc3a3b5f2658522","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:22.437 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:22.441 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:22.444 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:22.445 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:22.447 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:22.448 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:22.449 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:22.454 +08:00 [DBG] Start discovery request
2019-04-12 22:24:22.460 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:22.699 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:22.701 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:22.702 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:22.703 +08:00 [DBG] Start authorize request
2019-04-12 22:24:22.703 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:22.704 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:22.709 +08:00 [DBG] js found in database: true
2019-04-12 22:24:22.709 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:22.713 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:22.717 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:22.719 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:22.722 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:22.723 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:22.723 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"545765eef7a544cdaf56b19b086c749c","UiLocales":null,"Nonce":"304f1795eb2d41408c373ba076f9ca8d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"545765eef7a544cdaf56b19b086c749c","nonce":"304f1795eb2d41408c373ba076f9ca8d"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:22.730 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:22.730 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:22.734 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:22.735 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:22.736 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:22.743 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:22.744 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:22.749 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****otGQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****wrsg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000021","TimeStamp":"2019-04-12T14:24:22.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:22.756 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"545765eef7a544cdaf56b19b086c749c","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:23.588 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:23.595 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:23.599 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:23.601 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:23.602 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:23.608 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:23.610 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:23.611 +08:00 [DBG] Start discovery request
2019-04-12 22:24:23.619 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:23.853 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:23.857 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:23.859 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:23.860 +08:00 [DBG] Start authorize request
2019-04-12 22:24:23.861 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:23.861 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:23.866 +08:00 [DBG] js found in database: true
2019-04-12 22:24:23.868 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:23.870 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:23.873 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:23.876 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:23.884 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:23.885 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:23.886 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"f9162f8137704852b5991711485af808","UiLocales":null,"Nonce":"d0aff72313a14c3b97de972e8b3ff6e5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"f9162f8137704852b5991711485af808","nonce":"d0aff72313a14c3b97de972e8b3ff6e5"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:23.904 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:23.905 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:23.906 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:23.907 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:23.908 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:23.922 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:23.927 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:23.936 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****jcsw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****yWRw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000022","TimeStamp":"2019-04-12T14:24:23.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:23.942 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"f9162f8137704852b5991711485af808","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:24:24.744 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:24:24.746 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:24:24.749 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:24:24.750 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:24:24.751 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:24:24.752 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:24:24.753 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:24:24.753 +08:00 [DBG] Start discovery request
2019-04-12 22:24:24.757 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:24:24.993 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:24:24.995 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:24:24.996 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:24:24.996 +08:00 [DBG] Start authorize request
2019-04-12 22:24:24.997 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:24.997 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:24:25.003 +08:00 [DBG] js found in database: true
2019-04-12 22:24:25.003 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:24:25.005 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:25.010 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:25.012 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:24:25.016 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:24:25.017 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:24:25.018 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"71bc482309d645e69929da5bedc57956","UiLocales":null,"Nonce":"6b3a1f026e984f6aa99c64268529ac47","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"71bc482309d645e69929da5bedc57956","nonce":"6b3a1f026e984f6aa99c64268529ac47"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:24:25.025 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:24:25.025 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:24:25.026 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:24:25.030 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:24:25.030 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:24:25.038 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:24:25.045 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:24:25.051 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ix5w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LvFQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUO:00000023","TimeStamp":"2019-04-12T14:24:25.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:24:25.057 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"71bc482309d645e69929da5bedc57956","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:27:10.517 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:27:10.521 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:27:10.525 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:27:10.527 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:27:10.529 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:27:10.537 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:27:10.539 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:27:10.540 +08:00 [DBG] Start discovery request
2019-04-12 22:27:10.546 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:27:10.777 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:27:10.778 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:27:10.780 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:27:10.781 +08:00 [DBG] Start authorize request
2019-04-12 22:27:10.782 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:27:10.783 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:27:10.792 +08:00 [DBG] js found in database: true
2019-04-12 22:27:10.793 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:27:10.797 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:27:10.804 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:27:10.808 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:27:10.817 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:27:10.818 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:27:10.819 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"c4e702956e1d43908a87b9f3a5873990","UiLocales":null,"Nonce":"e329632026e44191a71a9c0537ed2b69","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"c4e702956e1d43908a87b9f3a5873990","nonce":"e329632026e44191a71a9c0537ed2b69"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:27:10.833 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:27:10.834 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:27:10.835 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:27:10.835 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:27:10.836 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:27:10.845 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:27:10.847 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:27:10.853 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****OwTQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****KL2Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFUQ:00000001","TimeStamp":"2019-04-12T14:27:10.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:27:10.859 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"c4e702956e1d43908a87b9f3a5873990","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:27:45.669 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:27:45.676 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:27:45.680 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:27:45.681 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:27:45.683 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:27:45.688 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:27:45.690 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:27:45.691 +08:00 [DBG] Start discovery request
2019-04-12 22:27:45.696 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:27:45.742 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:27:45.745 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-12 22:27:45.749 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:27:45.750 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:27:45.751 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 22:27:45.753 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 22:27:45.755 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 22:27:45.765 +08:00 [DBG] Start key discovery request
2019-04-12 22:27:45.856 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:27:45.863 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:27:45.864 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-12 22:27:45.866 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:27:45.867 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:27:45.867 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-12 22:27:45.874 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-12 22:27:45.876 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-12 22:27:45.894 +08:00 [DBG] Start userinfo request
2019-04-12 22:27:45.900 +08:00 [DBG] Bearer token found in header
2019-04-12 22:27:45.945 +08:00 [DBG] js found in database: true
2019-04-12 22:27:45.946 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:27:45.960 +08:00 [DBG] js found in database: true
2019-04-12 22:27:45.961 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:27:45.971 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-12 22:27:45.977 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555079230,"exp":1555082830,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555079024,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-12 22:27:46.011 +08:00 [DBG] Creating userinfo response
2019-04-12 22:27:46.018 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 22:27:46.026 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 22:27:46.033 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:27:46.036 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-12 22:27:46.037 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 22:27:46.041 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:27:46.055 +08:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-12 22:27:46.056 +08:00 [DBG] End userinfo request
2019-04-12 22:27:46.097 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:27:46.102 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:27:46.104 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:27:46.107 +08:00 [DBG] Rendering check session result
2019-04-12 22:27:47.748 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:27:47.754 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:27:47.758 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:27:47.759 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:27:47.760 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:27:47.761 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:27:47.770 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:27:47.771 +08:00 [DBG] Start discovery request
2019-04-12 22:27:47.777 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:27:48.010 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:27:48.014 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:27:48.015 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:27:48.017 +08:00 [DBG] Rendering check session result
2019-04-12 22:28:09.599 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:28:09.603 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:28:09.605 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:28:09.606 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:28:09.607 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:28:09.608 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:28:09.608 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:28:09.610 +08:00 [DBG] Start discovery request
2019-04-12 22:28:09.616 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:28:09.651 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:28:09.655 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:28:09.656 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:28:09.657 +08:00 [DBG] Rendering check session result
2019-04-12 22:30:38.799 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:30:38.805 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:30:38.808 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:30:38.810 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:30:38.811 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:30:38.816 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:30:38.817 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:30:38.818 +08:00 [DBG] Start discovery request
2019-04-12 22:30:38.823 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:30:39.068 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:30:39.071 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:30:39.072 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:30:39.073 +08:00 [DBG] Rendering check session result
2019-04-12 22:37:20.701 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:37:20.707 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:37:20.725 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:37:20.728 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:37:20.731 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:37:20.732 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:37:20.733 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:37:20.735 +08:00 [DBG] Start discovery request
2019-04-12 22:37:20.744 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:37:21.042 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:37:21.045 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:37:21.046 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:37:21.046 +08:00 [DBG] Rendering check session result
2019-04-12 22:39:07.688 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:39:07.691 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:39:07.693 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:39:07.694 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:39:07.695 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:39:07.696 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:39:07.697 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:39:07.698 +08:00 [DBG] Start discovery request
2019-04-12 22:39:07.703 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:39:07.958 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:39:07.960 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:39:07.960 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:39:07.961 +08:00 [DBG] Rendering check session result
2019-04-12 22:56:42.620 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:56:42.625 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:56:42.636 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:56:42.638 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:56:42.640 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:56:42.642 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:56:42.644 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:56:42.648 +08:00 [DBG] Start discovery request
2019-04-12 22:56:42.653 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:56:42.905 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:56:42.906 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:56:42.907 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:56:42.908 +08:00 [DBG] Rendering check session result
2019-04-12 22:56:48.558 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:56:48.567 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:56:48.571 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:56:48.573 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:56:48.574 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:56:48.580 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:56:48.581 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:56:48.582 +08:00 [DBG] Start discovery request
2019-04-12 22:56:48.588 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:56:48.825 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:56:48.829 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:56:48.830 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:56:48.830 +08:00 [DBG] Rendering check session result
2019-04-12 22:57:12.583 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:57:12.585 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:57:12.588 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:57:12.588 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:57:12.589 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:57:12.590 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:57:12.591 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:57:12.592 +08:00 [DBG] Start discovery request
2019-04-12 22:57:12.599 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:57:12.672 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 22:57:12.674 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 22:57:12.675 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 22:57:12.676 +08:00 [DBG] Start authorize request
2019-04-12 22:57:12.677 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:57:12.678 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 22:57:12.686 +08:00 [DBG] js found in database: true
2019-04-12 22:57:12.687 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:57:12.690 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:57:12.694 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:57:12.697 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:57:12.700 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 22:57:12.701 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 22:57:12.702 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"3b9b7a5677f747988a20af745ea179ee","UiLocales":null,"Nonce":"05211b1d6a764455b2efe2f576675071","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"3b9b7a5677f747988a20af745ea179ee","nonce":"05211b1d6a764455b2efe2f576675071"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 22:57:12.711 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 22:57:12.712 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 22:57:12.712 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 22:57:12.713 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 22:57:12.713 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 22:57:12.720 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 22:57:12.720 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 22:57:12.726 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****hsYQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****teCg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFV3:00000003","TimeStamp":"2019-04-12T14:57:12.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 22:57:12.733 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"3b9b7a5677f747988a20af745ea179ee","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 22:57:13.000 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:57:13.003 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:57:13.006 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:57:13.006 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:57:13.007 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:57:13.007 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:57:13.008 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:57:13.009 +08:00 [DBG] Start discovery request
2019-04-12 22:57:13.014 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:57:13.027 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:57:13.029 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-12 22:57:13.033 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:57:13.034 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:57:13.035 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 22:57:13.040 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 22:57:13.041 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 22:57:13.043 +08:00 [DBG] Start key discovery request
2019-04-12 22:57:13.089 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:57:13.101 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:57:13.103 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-12 22:57:13.105 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:57:13.108 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:57:13.109 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-12 22:57:13.111 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-12 22:57:13.112 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-12 22:57:13.114 +08:00 [DBG] Start userinfo request
2019-04-12 22:57:13.115 +08:00 [DBG] Bearer token found in header
2019-04-12 22:57:13.126 +08:00 [DBG] js found in database: true
2019-04-12 22:57:13.127 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:57:13.134 +08:00 [DBG] js found in database: true
2019-04-12 22:57:13.134 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 22:57:13.138 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-12 22:57:13.141 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555081032,"exp":1555084632,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555079024,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-12 22:57:13.144 +08:00 [DBG] Creating userinfo response
2019-04-12 22:57:13.144 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 22:57:13.145 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 22:57:13.148 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:57:13.149 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-12 22:57:13.153 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 22:57:13.156 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 22:57:13.161 +08:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-04-12 22:57:13.164 +08:00 [DBG] End userinfo request
2019-04-12 22:57:13.175 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:57:13.176 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:57:13.176 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:57:13.177 +08:00 [DBG] Rendering check session result
2019-04-12 22:57:13.624 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:57:13.628 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:57:13.632 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:57:13.633 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:57:13.634 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:57:13.636 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:57:13.643 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:57:13.644 +08:00 [DBG] Start discovery request
2019-04-12 22:57:13.652 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:57:13.776 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:57:13.780 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:57:13.781 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:57:13.783 +08:00 [DBG] Rendering check session result
2019-04-12 22:58:16.338 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 22:58:16.343 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 22:58:16.347 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 22:58:16.349 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 22:58:16.351 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 22:58:16.356 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 22:58:16.357 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 22:58:16.359 +08:00 [DBG] Start discovery request
2019-04-12 22:58:16.365 +08:00 [DBG] Found ["openid","profile","api1"] as all scopes in database
2019-04-12 22:58:16.678 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 22:58:16.679 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 22:58:16.680 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 22:58:16.680 +08:00 [DBG] Rendering check session result
2019-04-12 23:04:07.492 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:04:07.497 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:04:07.507 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:04:07.508 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:04:07.510 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:04:07.511 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:04:07.513 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:04:07.515 +08:00 [DBG] Start discovery request
2019-04-12 23:04:07.528 +08:00 [DBG] Found ["openid","profile","role","aa","api1"] as all scopes in database
2019-04-12 23:04:07.538 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:04:07.540 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:04:07.542 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:04:07.547 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:04:07.549 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:04:07.551 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:04:07.552 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:04:07.557 +08:00 [DBG] Start discovery request
2019-04-12 23:04:07.562 +08:00 [DBG] Found ["openid","profile","role","aa","api1"] as all scopes in database
2019-04-12 23:04:07.763 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:04:07.765 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:04:07.766 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:04:07.767 +08:00 [DBG] Rendering check session result
2019-04-12 23:04:07.770 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:04:07.770 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:04:07.771 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:04:07.771 +08:00 [DBG] Rendering check session result
2019-04-12 23:04:07.972 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:04:07.974 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:04:07.974 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:04:07.975 +08:00 [DBG] Start discovery request
2019-04-12 23:04:07.979 +08:00 [DBG] Found ["openid","profile","role","aa","api1"] as all scopes in database
2019-04-12 23:04:08.079 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:04:08.081 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:04:08.081 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:04:08.082 +08:00 [DBG] Start key discovery request
2019-04-12 23:04:15.069 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:04:15.072 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:04:15.075 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:04:15.077 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:04:15.079 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:04:15.085 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:04:15.085 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:04:15.086 +08:00 [DBG] Start discovery request
2019-04-12 23:04:15.090 +08:00 [DBG] Found ["openid","profile","role","aa","api1"] as all scopes in database
2019-04-12 23:04:15.095 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:04:15.098 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:04:15.099 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:04:15.100 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:04:15.100 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:04:15.101 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:04:15.101 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:04:15.102 +08:00 [DBG] Start discovery request
2019-04-12 23:04:15.106 +08:00 [DBG] Found ["openid","profile","role","aa","api1"] as all scopes in database
2019-04-12 23:04:15.384 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:04:15.385 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:04:15.386 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:04:15.387 +08:00 [DBG] Rendering check session result
2019-04-12 23:04:15.389 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:04:15.390 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:04:15.390 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:04:15.390 +08:00 [DBG] Rendering check session result
2019-04-12 23:14:49.245 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:14:49.249 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:14:49.251 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:14:49.253 +08:00 [DBG] Start discovery request
2019-04-12 23:14:49.266 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:14:49.396 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:14:49.400 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:14:49.401 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:14:49.402 +08:00 [DBG] Start key discovery request
2019-04-12 23:15:17.202 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:15:17.206 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:15:17.207 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:15:17.209 +08:00 [DBG] Start discovery request
2019-04-12 23:15:17.217 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:15:17.321 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:15:17.325 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:15:17.327 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:15:17.330 +08:00 [DBG] Start key discovery request
2019-04-12 23:17:59.944 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:17:59.947 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:17:59.950 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:17:59.952 +08:00 [DBG] Start discovery request
2019-04-12 23:17:59.959 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:18:00.064 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:18:00.070 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:18:00.071 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:18:00.072 +08:00 [DBG] Start key discovery request
2019-04-12 23:20:06.165 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:20:06.168 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:20:06.169 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:20:06.172 +08:00 [DBG] Start discovery request
2019-04-12 23:20:06.181 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:20:06.302 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:20:06.306 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:20:06.307 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:20:06.310 +08:00 [DBG] Start key discovery request
2019-04-12 23:21:26.555 +08:00 [INF] Removing 0 grants
2019-04-12 23:21:54.850 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:21:54.854 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:21:54.856 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:21:54.858 +08:00 [DBG] Start discovery request
2019-04-12 23:21:54.865 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:21:54.980 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:21:54.987 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:21:54.989 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:21:54.991 +08:00 [DBG] Start key discovery request
2019-04-12 23:29:07.576 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:29:07.582 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:29:07.584 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:29:07.585 +08:00 [DBG] Start discovery request
2019-04-12 23:29:07.597 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:29:07.716 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:29:07.724 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:29:07.725 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:29:07.727 +08:00 [DBG] Start key discovery request
2019-04-12 23:29:34.013 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:29:34.017 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:29:34.019 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:29:34.021 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:29:34.022 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:29:34.023 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:29:34.024 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:29:34.024 +08:00 [DBG] Start discovery request
2019-04-12 23:29:34.029 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:29:34.034 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:29:34.036 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:29:34.038 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:29:34.041 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:29:34.042 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:29:34.043 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:29:34.045 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:29:34.048 +08:00 [DBG] Start discovery request
2019-04-12 23:29:34.055 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:29:34.289 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:29:34.290 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:29:34.291 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:29:34.291 +08:00 [DBG] Rendering check session result
2019-04-12 23:29:34.299 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:29:34.301 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:29:34.302 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:29:34.303 +08:00 [DBG] Rendering check session result
2019-04-12 23:32:38.340 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:32:38.346 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:32:38.350 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:32:38.352 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:32:38.353 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:32:38.354 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:32:38.359 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:32:38.361 +08:00 [DBG] Start discovery request
2019-04-12 23:32:38.367 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:32:38.375 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:32:38.377 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:32:38.380 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:32:38.382 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:32:38.383 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:32:38.384 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:32:38.386 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:32:38.388 +08:00 [DBG] Start discovery request
2019-04-12 23:32:38.395 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:32:38.617 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:32:38.619 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:32:38.619 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:32:38.620 +08:00 [DBG] Rendering check session result
2019-04-12 23:32:38.623 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:32:38.624 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:32:38.625 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:32:38.626 +08:00 [DBG] Rendering check session result
2019-04-12 23:39:44.523 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:39:44.527 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:39:44.529 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:39:44.531 +08:00 [DBG] Start discovery request
2019-04-12 23:39:44.545 +08:00 [DBG] Found ["openid","profile","role","aa","bb","api1"] as all scopes in database
2019-04-12 23:39:44.649 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:39:44.654 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:39:44.656 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:39:44.658 +08:00 [DBG] Start key discovery request
2019-04-12 23:44:29.258 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:29.263 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:44:29.267 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:29.269 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:29.271 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:44:29.276 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:44:29.276 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:44:29.277 +08:00 [DBG] Start discovery request
2019-04-12 23:44:29.282 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:44:29.286 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:29.288 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:44:29.290 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:29.291 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:29.292 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:44:29.294 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:44:29.295 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:44:29.301 +08:00 [DBG] Start discovery request
2019-04-12 23:44:29.305 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:44:29.509 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:44:29.511 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:44:29.511 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:44:29.512 +08:00 [DBG] Rendering check session result
2019-04-12 23:44:29.516 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:44:29.516 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:44:29.517 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:44:29.517 +08:00 [DBG] Rendering check session result
2019-04-12 23:44:31.633 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:44:31.637 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:44:31.640 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:44:31.642 +08:00 [DBG] Start discovery request
2019-04-12 23:44:31.648 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:44:31.767 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:44:31.770 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:44:31.771 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:44:31.773 +08:00 [DBG] Start key discovery request
2019-04-12 23:44:31.979 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 23:44:31.981 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 23:44:31.982 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 23:44:31.983 +08:00 [DBG] Start authorize request
2019-04-12 23:44:31.984 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 23:44:31.986 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 23:44:31.996 +08:00 [DBG] js found in database: true
2019-04-12 23:44:31.997 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:44:32.001 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:44:32.009 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:44:32.011 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:44:32.015 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:44:32.016 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 23:44:32.017 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"e78e5662cf5a4a34b8ee8262526ca817","UiLocales":null,"Nonce":"b924616a60b344f1b569b8deb1297111","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"773488ea409d509b3a71e8c59416b609","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"e78e5662cf5a4a34b8ee8262526ca817","nonce":"b924616a60b344f1b569b8deb1297111"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 23:44:32.026 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 23:44:32.028 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 23:44:32.029 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 23:44:32.031 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 23:44:32.032 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 23:44:32.047 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 23:44:32.051 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 23:44:32.062 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****GERw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gGkg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFVN:00000003","TimeStamp":"2019-04-12T15:44:32.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 23:44:32.069 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"e78e5662cf5a4a34b8ee8262526ca817","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 23:44:32.320 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:32.324 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:44:32.327 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:32.328 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:32.330 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:44:32.331 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:44:32.335 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:44:32.336 +08:00 [DBG] Start discovery request
2019-04-12 23:44:32.341 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:44:32.386 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:32.392 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-12 23:44:32.396 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:32.396 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:32.397 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:44:32.398 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:44:32.399 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:44:32.400 +08:00 [DBG] Start key discovery request
2019-04-12 23:44:32.456 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:32.462 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:32.462 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-12 23:44:32.464 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:32.465 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:32.466 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-12 23:44:32.467 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-12 23:44:32.470 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-12 23:44:32.471 +08:00 [DBG] Start userinfo request
2019-04-12 23:44:32.471 +08:00 [DBG] Bearer token found in header
2019-04-12 23:44:32.487 +08:00 [DBG] js found in database: true
2019-04-12 23:44:32.488 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:44:32.498 +08:00 [DBG] js found in database: true
2019-04-12 23:44:32.502 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:44:32.507 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-12 23:44:32.508 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555083872,"exp":1555087472,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555079024,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-12 23:44:32.513 +08:00 [DBG] Creating userinfo response
2019-04-12 23:44:32.513 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 23:44:32.514 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 23:44:32.517 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:44:32.519 +08:00 [DBG] Requested claim types: name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-12 23:44:32.521 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 23:44:32.527 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:44:32.532 +08:00 [INF] Profile service returned the following claim types: name given_name family_name website preferred_username
2019-04-12 23:44:32.534 +08:00 [DBG] End userinfo request
2019-04-12 23:44:32.559 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:44:32.561 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:44:32.562 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:44:32.562 +08:00 [DBG] Rendering check session result
2019-04-12 23:44:33.412 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:33.414 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:44:33.417 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:33.417 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:33.418 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:44:33.420 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:44:33.421 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:44:33.422 +08:00 [DBG] Start discovery request
2019-04-12 23:44:33.431 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:44:33.436 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:44:33.444 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:44:33.447 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:44:33.448 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:44:33.449 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:44:33.454 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:44:33.455 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:44:33.456 +08:00 [DBG] Start discovery request
2019-04-12 23:44:33.461 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:44:33.759 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:44:33.761 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:44:33.762 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:44:33.763 +08:00 [DBG] Rendering check session result
2019-04-12 23:44:33.766 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:44:33.768 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:44:33.769 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:44:33.772 +08:00 [DBG] Rendering check session result
2019-04-12 23:45:52.142 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:45:52.144 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:45:52.146 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:45:52.146 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:45:52.147 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:45:52.147 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:45:52.148 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:45:52.148 +08:00 [DBG] Start discovery request
2019-04-12 23:45:52.153 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:45:52.159 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:45:52.159 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:45:52.161 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:45:52.162 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:45:52.162 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:45:52.163 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:45:52.164 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:45:52.165 +08:00 [DBG] Start discovery request
2019-04-12 23:45:52.165 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:45:52.172 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:45:52.173 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:45:52.174 +08:00 [DBG] Rendering check session result
2019-04-12 23:45:52.177 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:45:52.192 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-04-12 23:45:52.195 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-04-12 23:45:52.195 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-04-12 23:45:52.204 +08:00 [DBG] Processing signout request for a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 23:45:52.215 +08:00 [DBG] Start end session request validation
2019-04-12 23:45:52.219 +08:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","PostLogOutUri":null,"State":null,"Raw":{"post_logout_redirect_uri":"http://localhost:5000"},"$type":"EndSessionRequestValidationLog"}
2019-04-12 23:45:52.222 +08:00 [DBG] Success validating end session request from null
2019-04-12 23:45:54.209 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:45:54.211 +08:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-12 23:45:54.233 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-04-12 23:45:54.237 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-04-12 23:45:54.238 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-04-12 23:45:54.239 +08:00 [INF] {"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLLVA8K4CFVO:00000005","TimeStamp":"2019-04-12T15:45:54.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-04-12 23:45:54.284 +08:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-04-12 23:45:54.289 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-04-12 23:45:54.290 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-04-12 23:45:54.296 +08:00 [DBG] Processing signout callback request
2019-04-12 23:45:54.315 +08:00 [DBG] js found in database: true
2019-04-12 23:45:54.316 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:45:54.317 +08:00 [DBG] No client front-channel logout URLs
2019-04-12 23:45:54.318 +08:00 [DBG] No client back-channel logout URLs
2019-04-12 23:45:54.318 +08:00 [INF] Successful signout callback.
2019-04-12 23:45:54.318 +08:00 [DBG] No client front-channel iframe urls
2019-04-12 23:45:54.319 +08:00 [DBG] No client back-channel iframe urls
2019-04-12 23:46:03.421 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:03.426 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:46:03.429 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:46:03.430 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:46:03.430 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:46:03.432 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:46:03.433 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:46:03.441 +08:00 [DBG] Start discovery request
2019-04-12 23:46:03.446 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:46:03.684 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-04-12 23:46:03.688 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-04-12 23:46:03.689 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-04-12 23:46:03.689 +08:00 [DBG] Start authorize request
2019-04-12 23:46:03.690 +08:00 [DBG] No user present in authorize request
2019-04-12 23:46:03.690 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 23:46:03.699 +08:00 [DBG] js found in database: true
2019-04-12 23:46:03.700 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:03.704 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:03.711 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:03.714 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:03.722 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:03.723 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 23:46:03.724 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"8997d0332ec647c7b5faf01710f557b6","UiLocales":null,"Nonce":"b459eee5633b4b6dae2c109240902ebf","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"8997d0332ec647c7b5faf01710f557b6","nonce":"b459eee5633b4b6dae2c109240902ebf"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 23:46:03.731 +08:00 [INF] Showing login: User is not authenticated
2019-04-12 23:46:03.737 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 23:46:03.745 +08:00 [DBG] js found in database: true
2019-04-12 23:46:03.746 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:03.750 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:03.758 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:03.762 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:03.767 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:03.769 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 23:46:03.780 +08:00 [DBG] js found in database: true
2019-04-12 23:46:03.782 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:12.809 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:12.810 +08:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-04-12 23:46:12.812 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 23:46:12.817 +08:00 [DBG] js found in database: true
2019-04-12 23:46:12.818 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:12.820 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:12.824 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:12.826 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:12.829 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:12.830 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 23:46:12.902 +08:00 [DBG] Augmenting SignInContext
2019-04-12 23:46:12.905 +08:00 [DBG] Adding idp claim with value: local
2019-04-12 23:46:12.912 +08:00 [DBG] Adding amr claim with value: pwd
2019-04-12 23:46:12.914 +08:00 [DBG] Adding auth_time claim with value: 1555083972
2019-04-12 23:46:12.916 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-12 23:46:12.920 +08:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","DisplayName":"admin","Endpoint":"UI","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLLVA8K4CFVO:0000000A","TimeStamp":"2019-04-12T15:46:12.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-04-12 23:46:12.938 +08:00 [DBG] js found in database: true
2019-04-12 23:46:12.940 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:12.953 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-04-12 23:46:12.956 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-04-12 23:46:12.961 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-04-12 23:46:12.963 +08:00 [DBG] Start authorize callback request
2019-04-12 23:46:12.964 +08:00 [DBG] User in authorize request: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 23:46:12.965 +08:00 [DBG] Start authorize request protocol validation
2019-04-12 23:46:12.975 +08:00 [DBG] js found in database: true
2019-04-12 23:46:12.976 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:12.981 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:12.992 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:12.996 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:13.003 +08:00 [DBG] Found ["api1"] API scopes in database
2019-04-12 23:46:13.006 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-04-12 23:46:13.007 +08:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","AllowedRedirectUris":["http://localhost:5003/callback.html","http://localhost:8080/static/callback.html","http://localhost:5000"],"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"8997d0332ec647c7b5faf01710f557b6","UiLocales":null,"Nonce":"b459eee5633b4b6dae2c109240902ebf","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"7765414bd898673765977c3e6438cf5e","Raw":{"client_id":"js","redirect_uri":"http://localhost:8080/static/callback.html","response_type":"id_token token","scope":"openid profile api1","state":"8997d0332ec647c7b5faf01710f557b6","nonce":"b459eee5633b4b6dae2c109240902ebf"},"$type":"AuthorizeRequestValidationLog"}
2019-04-12 23:46:13.019 +08:00 [DBG] f66DJuJI0a63sYbB+AMjFUG43jpUuk7gum2GJENt5P8= found in database: true
2019-04-12 23:46:13.020 +08:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-04-12 23:46:13.022 +08:00 [DBG] Creating Implicit Flow response.
2019-04-12 23:46:13.022 +08:00 [DBG] Getting claims for access token for client: js
2019-04-12 23:46:13.023 +08:00 [DBG] Getting claims for access token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1
2019-04-12 23:46:13.039 +08:00 [DBG] Getting claims for identity token for subject: a23e8a2b-b91b-434a-8270-69230f1246a1 and client: js
2019-04-12 23:46:13.044 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-04-12 23:46:13.055 +08:00 [INF] {"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:8080/static/callback.html","Endpoint":"Authorize","SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","Scopes":"openid profile api1","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****eqNQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qjEQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLLVA8K4CFVO:0000000B","TimeStamp":"2019-04-12T15:46:13.0000000Z","ProcessId":26544,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-04-12 23:46:13.074 +08:00 [INF] Authorize endpoint response
{"SubjectId":"a23e8a2b-b91b-434a-8270-69230f1246a1","ClientId":"js","RedirectUri":"http://localhost:8080/static/callback.html","State":"8997d0332ec647c7b5faf01710f557b6","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-04-12 23:46:13.082 +08:00 [DBG] Augmenting SignInContext
2019-04-12 23:46:13.084 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-04-12 23:46:13.635 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:13.638 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:46:13.642 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:46:13.643 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:46:13.645 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:46:13.646 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:46:13.651 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:46:13.652 +08:00 [DBG] Start discovery request
2019-04-12 23:46:13.657 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:46:13.696 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:13.700 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8080
2019-04-12 23:46:13.705 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:46:13.706 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:46:13.708 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-12 23:46:13.713 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-12 23:46:13.714 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-12 23:46:13.715 +08:00 [DBG] Start key discovery request
2019-04-12 23:46:13.744 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:13.749 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:13.750 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-04-12 23:46:13.754 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:46:13.759 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:46:13.760 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-04-12 23:46:13.762 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-04-12 23:46:13.763 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-04-12 23:46:13.764 +08:00 [DBG] Start userinfo request
2019-04-12 23:46:13.765 +08:00 [DBG] Bearer token found in header
2019-04-12 23:46:13.781 +08:00 [DBG] js found in database: true
2019-04-12 23:46:13.783 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:13.795 +08:00 [DBG] js found in database: true
2019-04-12 23:46:13.799 +08:00 [DBG] client configuration validation for client js succeeded.
2019-04-12 23:46:13.804 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-04-12 23:46:13.806 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1555083973,"exp":1555087573,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","api1"],"client_id":"js","sub":"a23e8a2b-b91b-434a-8270-69230f1246a1","auth_time":1555083972,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-04-12 23:46:13.818 +08:00 [DBG] Creating userinfo response
2019-04-12 23:46:13.819 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 23:46:13.822 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 23:46:13.826 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:13.828 +08:00 [DBG] Requested claim types: name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-04-12 23:46:13.829 +08:00 [DBG] Scopes in access token: openid profile api1
2019-04-12 23:46:13.832 +08:00 [DBG] Found ["openid","profile"] identity scopes in database
2019-04-12 23:46:13.836 +08:00 [INF] Profile service returned the following claim types: name given_name family_name website preferred_username
2019-04-12 23:46:13.837 +08:00 [DBG] End userinfo request
2019-04-12 23:46:13.855 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:46:13.858 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:46:13.859 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:46:13.860 +08:00 [DBG] Rendering check session result
2019-04-12 23:46:14.816 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:14.820 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:46:14.823 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:46:14.824 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:46:14.826 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:46:14.827 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:46:14.829 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:46:14.835 +08:00 [DBG] Start discovery request
2019-04-12 23:46:14.840 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:46:14.844 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-12 23:46:14.848 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-12 23:46:14.850 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-12 23:46:14.851 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-12 23:46:14.853 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-12 23:46:14.854 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-12 23:46:14.861 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-12 23:46:14.862 +08:00 [DBG] Start discovery request
2019-04-12 23:46:14.867 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-12 23:46:15.093 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:46:15.096 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:46:15.097 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:46:15.098 +08:00 [DBG] Rendering check session result
2019-04-12 23:46:15.101 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-12 23:46:15.101 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-12 23:46:15.102 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-12 23:46:15.102 +08:00 [DBG] Rendering check session result
2019-04-13 00:09:13.925 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:09:13.929 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:09:13.930 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:09:13.931 +08:00 [DBG] Start discovery request
2019-04-13 00:09:13.944 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:09:14.058 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:09:14.067 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:09:14.069 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:09:14.071 +08:00 [DBG] Start key discovery request
2019-04-13 00:17:02.119 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:17:02.121 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:17:02.122 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:17:02.123 +08:00 [DBG] Start discovery request
2019-04-13 00:17:02.134 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:17:02.250 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:17:02.254 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:17:02.255 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:17:02.257 +08:00 [DBG] Start key discovery request
2019-04-13 00:21:26.561 +08:00 [INF] Removing 0 grants
2019-04-13 00:24:05.609 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:24:05.616 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:24:05.618 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:24:05.620 +08:00 [DBG] Start discovery request
2019-04-13 00:24:05.628 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:24:05.749 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:24:05.753 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:24:05.754 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:24:05.756 +08:00 [DBG] Start key discovery request
2019-04-13 00:25:45.437 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:25:45.447 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:25:45.449 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:25:45.450 +08:00 [DBG] Start discovery request
2019-04-13 00:25:45.457 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:25:45.583 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:25:45.585 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:25:45.586 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:25:45.586 +08:00 [DBG] Start key discovery request
2019-04-13 00:30:23.627 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 00:30:23.631 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 00:30:23.638 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 00:30:23.641 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 00:30:23.643 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:30:23.644 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:30:23.645 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:30:23.646 +08:00 [DBG] Start discovery request
2019-04-13 00:30:23.650 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:30:23.659 +08:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-13 00:30:23.661 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-04-13 00:30:23.663 +08:00 [DBG] Origin http://localhost:8080 is allowed: true
2019-04-13 00:30:23.664 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-04-13 00:30:23.665 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:30:23.666 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:30:23.666 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:30:23.667 +08:00 [DBG] Start discovery request
2019-04-13 00:30:23.671 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:30:23.908 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 00:30:23.912 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 00:30:23.912 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 00:30:23.913 +08:00 [DBG] Rendering check session result
2019-04-13 00:30:23.921 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-04-13 00:30:23.923 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-04-13 00:30:23.923 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-04-13 00:30:23.924 +08:00 [DBG] Rendering check session result
2019-04-13 00:30:24.299 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-04-13 00:30:24.301 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-04-13 00:30:24.301 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-04-13 00:30:24.302 +08:00 [DBG] Start discovery request
2019-04-13 00:30:24.310 +08:00 [DBG] Found ["openid","profile","role","api1"] as all scopes in database
2019-04-13 00:30:24.434 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-04-13 00:30:24.436 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-04-13 00:30:24.439 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-04-13 00:30:24.440 +08:00 [DBG] Start key discovery request
